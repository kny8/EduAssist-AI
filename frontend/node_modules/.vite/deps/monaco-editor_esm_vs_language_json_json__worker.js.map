{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/language/json/json.worker.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/language/json/json.worker.ts\nimport * as worker from \"../../editor/editor.worker.js\";\n\n// node_modules/jsonc-parser/lib/esm/impl/scanner.js\nfunction createScanner(text, ignoreTrivia = false) {\n  const len = text.length;\n  let pos = 0, value = \"\", tokenOffset = 0, token = 16, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0;\n  function scanHexDigits(count, exact) {\n    let digits = 0;\n    let value2 = 0;\n    while (digits < count || !exact) {\n      let ch = text.charCodeAt(pos);\n      if (ch >= 48 && ch <= 57) {\n        value2 = value2 * 16 + ch - 48;\n      } else if (ch >= 65 && ch <= 70) {\n        value2 = value2 * 16 + ch - 65 + 10;\n      } else if (ch >= 97 && ch <= 102) {\n        value2 = value2 * 16 + ch - 97 + 10;\n      } else {\n        break;\n      }\n      pos++;\n      digits++;\n    }\n    if (digits < count) {\n      value2 = -1;\n    }\n    return value2;\n  }\n  function setPosition(newPosition) {\n    pos = newPosition;\n    value = \"\";\n    tokenOffset = 0;\n    token = 16;\n    scanError = 0;\n  }\n  function scanNumber() {\n    let start = pos;\n    if (text.charCodeAt(pos) === 48) {\n      pos++;\n    } else {\n      pos++;\n      while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n      }\n    }\n    if (pos < text.length && text.charCodeAt(pos) === 46) {\n      pos++;\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n      } else {\n        scanError = 3;\n        return text.substring(start, pos);\n      }\n    }\n    let end = pos;\n    if (pos < text.length && (text.charCodeAt(pos) === 69 || text.charCodeAt(pos) === 101)) {\n      pos++;\n      if (pos < text.length && text.charCodeAt(pos) === 43 || text.charCodeAt(pos) === 45) {\n        pos++;\n      }\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n        end = pos;\n      } else {\n        scanError = 3;\n      }\n    }\n    return text.substring(start, end);\n  }\n  function scanString() {\n    let result = \"\", start = pos;\n    while (true) {\n      if (pos >= len) {\n        result += text.substring(start, pos);\n        scanError = 2;\n        break;\n      }\n      const ch = text.charCodeAt(pos);\n      if (ch === 34) {\n        result += text.substring(start, pos);\n        pos++;\n        break;\n      }\n      if (ch === 92) {\n        result += text.substring(start, pos);\n        pos++;\n        if (pos >= len) {\n          scanError = 2;\n          break;\n        }\n        const ch2 = text.charCodeAt(pos++);\n        switch (ch2) {\n          case 34:\n            result += '\"';\n            break;\n          case 92:\n            result += \"\\\\\";\n            break;\n          case 47:\n            result += \"/\";\n            break;\n          case 98:\n            result += \"\\b\";\n            break;\n          case 102:\n            result += \"\\f\";\n            break;\n          case 110:\n            result += \"\\n\";\n            break;\n          case 114:\n            result += \"\\r\";\n            break;\n          case 116:\n            result += \"\t\";\n            break;\n          case 117:\n            const ch3 = scanHexDigits(4, true);\n            if (ch3 >= 0) {\n              result += String.fromCharCode(ch3);\n            } else {\n              scanError = 4;\n            }\n            break;\n          default:\n            scanError = 5;\n        }\n        start = pos;\n        continue;\n      }\n      if (ch >= 0 && ch <= 31) {\n        if (isLineBreak(ch)) {\n          result += text.substring(start, pos);\n          scanError = 2;\n          break;\n        } else {\n          scanError = 6;\n        }\n      }\n      pos++;\n    }\n    return result;\n  }\n  function scanNext() {\n    value = \"\";\n    scanError = 0;\n    tokenOffset = pos;\n    lineStartOffset = lineNumber;\n    prevTokenLineStartOffset = tokenLineStartOffset;\n    if (pos >= len) {\n      tokenOffset = len;\n      return token = 17;\n    }\n    let code = text.charCodeAt(pos);\n    if (isWhiteSpace(code)) {\n      do {\n        pos++;\n        value += String.fromCharCode(code);\n        code = text.charCodeAt(pos);\n      } while (isWhiteSpace(code));\n      return token = 15;\n    }\n    if (isLineBreak(code)) {\n      pos++;\n      value += String.fromCharCode(code);\n      if (code === 13 && text.charCodeAt(pos) === 10) {\n        pos++;\n        value += \"\\n\";\n      }\n      lineNumber++;\n      tokenLineStartOffset = pos;\n      return token = 14;\n    }\n    switch (code) {\n      case 123:\n        pos++;\n        return token = 1;\n      case 125:\n        pos++;\n        return token = 2;\n      case 91:\n        pos++;\n        return token = 3;\n      case 93:\n        pos++;\n        return token = 4;\n      case 58:\n        pos++;\n        return token = 6;\n      case 44:\n        pos++;\n        return token = 5;\n      case 34:\n        pos++;\n        value = scanString();\n        return token = 10;\n      case 47:\n        const start = pos - 1;\n        if (text.charCodeAt(pos + 1) === 47) {\n          pos += 2;\n          while (pos < len) {\n            if (isLineBreak(text.charCodeAt(pos))) {\n              break;\n            }\n            pos++;\n          }\n          value = text.substring(start, pos);\n          return token = 12;\n        }\n        if (text.charCodeAt(pos + 1) === 42) {\n          pos += 2;\n          const safeLength = len - 1;\n          let commentClosed = false;\n          while (pos < safeLength) {\n            const ch = text.charCodeAt(pos);\n            if (ch === 42 && text.charCodeAt(pos + 1) === 47) {\n              pos += 2;\n              commentClosed = true;\n              break;\n            }\n            pos++;\n            if (isLineBreak(ch)) {\n              if (ch === 13 && text.charCodeAt(pos) === 10) {\n                pos++;\n              }\n              lineNumber++;\n              tokenLineStartOffset = pos;\n            }\n          }\n          if (!commentClosed) {\n            pos++;\n            scanError = 1;\n          }\n          value = text.substring(start, pos);\n          return token = 13;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n      case 45:\n        value += String.fromCharCode(code);\n        pos++;\n        if (pos === len || !isDigit(text.charCodeAt(pos))) {\n          return token = 16;\n        }\n      case 48:\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        value += scanNumber();\n        return token = 11;\n      default:\n        while (pos < len && isUnknownContentCharacter(code)) {\n          pos++;\n          code = text.charCodeAt(pos);\n        }\n        if (tokenOffset !== pos) {\n          value = text.substring(tokenOffset, pos);\n          switch (value) {\n            case \"true\":\n              return token = 8;\n            case \"false\":\n              return token = 9;\n            case \"null\":\n              return token = 7;\n          }\n          return token = 16;\n        }\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16;\n    }\n  }\n  function isUnknownContentCharacter(code) {\n    if (isWhiteSpace(code) || isLineBreak(code)) {\n      return false;\n    }\n    switch (code) {\n      case 125:\n      case 93:\n      case 123:\n      case 91:\n      case 34:\n      case 58:\n      case 44:\n      case 47:\n        return false;\n    }\n    return true;\n  }\n  function scanNextNonTrivia() {\n    let result;\n    do {\n      result = scanNext();\n    } while (result >= 12 && result <= 15);\n    return result;\n  }\n  return {\n    setPosition,\n    getPosition: () => pos,\n    scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n    getToken: () => token,\n    getTokenValue: () => value,\n    getTokenOffset: () => tokenOffset,\n    getTokenLength: () => pos - tokenOffset,\n    getTokenStartLine: () => lineStartOffset,\n    getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n    getTokenError: () => scanError\n  };\n}\nfunction isWhiteSpace(ch) {\n  return ch === 32 || ch === 9;\n}\nfunction isLineBreak(ch) {\n  return ch === 10 || ch === 13;\n}\nfunction isDigit(ch) {\n  return ch >= 48 && ch <= 57;\n}\nvar CharacterCodes;\n(function(CharacterCodes2) {\n  CharacterCodes2[CharacterCodes2[\"lineFeed\"] = 10] = \"lineFeed\";\n  CharacterCodes2[CharacterCodes2[\"carriageReturn\"] = 13] = \"carriageReturn\";\n  CharacterCodes2[CharacterCodes2[\"space\"] = 32] = \"space\";\n  CharacterCodes2[CharacterCodes2[\"_0\"] = 48] = \"_0\";\n  CharacterCodes2[CharacterCodes2[\"_1\"] = 49] = \"_1\";\n  CharacterCodes2[CharacterCodes2[\"_2\"] = 50] = \"_2\";\n  CharacterCodes2[CharacterCodes2[\"_3\"] = 51] = \"_3\";\n  CharacterCodes2[CharacterCodes2[\"_4\"] = 52] = \"_4\";\n  CharacterCodes2[CharacterCodes2[\"_5\"] = 53] = \"_5\";\n  CharacterCodes2[CharacterCodes2[\"_6\"] = 54] = \"_6\";\n  CharacterCodes2[CharacterCodes2[\"_7\"] = 55] = \"_7\";\n  CharacterCodes2[CharacterCodes2[\"_8\"] = 56] = \"_8\";\n  CharacterCodes2[CharacterCodes2[\"_9\"] = 57] = \"_9\";\n  CharacterCodes2[CharacterCodes2[\"a\"] = 97] = \"a\";\n  CharacterCodes2[CharacterCodes2[\"b\"] = 98] = \"b\";\n  CharacterCodes2[CharacterCodes2[\"c\"] = 99] = \"c\";\n  CharacterCodes2[CharacterCodes2[\"d\"] = 100] = \"d\";\n  CharacterCodes2[CharacterCodes2[\"e\"] = 101] = \"e\";\n  CharacterCodes2[CharacterCodes2[\"f\"] = 102] = \"f\";\n  CharacterCodes2[CharacterCodes2[\"g\"] = 103] = \"g\";\n  CharacterCodes2[CharacterCodes2[\"h\"] = 104] = \"h\";\n  CharacterCodes2[CharacterCodes2[\"i\"] = 105] = \"i\";\n  CharacterCodes2[CharacterCodes2[\"j\"] = 106] = \"j\";\n  CharacterCodes2[CharacterCodes2[\"k\"] = 107] = \"k\";\n  CharacterCodes2[CharacterCodes2[\"l\"] = 108] = \"l\";\n  CharacterCodes2[CharacterCodes2[\"m\"] = 109] = \"m\";\n  CharacterCodes2[CharacterCodes2[\"n\"] = 110] = \"n\";\n  CharacterCodes2[CharacterCodes2[\"o\"] = 111] = \"o\";\n  CharacterCodes2[CharacterCodes2[\"p\"] = 112] = \"p\";\n  CharacterCodes2[CharacterCodes2[\"q\"] = 113] = \"q\";\n  CharacterCodes2[CharacterCodes2[\"r\"] = 114] = \"r\";\n  CharacterCodes2[CharacterCodes2[\"s\"] = 115] = \"s\";\n  CharacterCodes2[CharacterCodes2[\"t\"] = 116] = \"t\";\n  CharacterCodes2[CharacterCodes2[\"u\"] = 117] = \"u\";\n  CharacterCodes2[CharacterCodes2[\"v\"] = 118] = \"v\";\n  CharacterCodes2[CharacterCodes2[\"w\"] = 119] = \"w\";\n  CharacterCodes2[CharacterCodes2[\"x\"] = 120] = \"x\";\n  CharacterCodes2[CharacterCodes2[\"y\"] = 121] = \"y\";\n  CharacterCodes2[CharacterCodes2[\"z\"] = 122] = \"z\";\n  CharacterCodes2[CharacterCodes2[\"A\"] = 65] = \"A\";\n  CharacterCodes2[CharacterCodes2[\"B\"] = 66] = \"B\";\n  CharacterCodes2[CharacterCodes2[\"C\"] = 67] = \"C\";\n  CharacterCodes2[CharacterCodes2[\"D\"] = 68] = \"D\";\n  CharacterCodes2[CharacterCodes2[\"E\"] = 69] = \"E\";\n  CharacterCodes2[CharacterCodes2[\"F\"] = 70] = \"F\";\n  CharacterCodes2[CharacterCodes2[\"G\"] = 71] = \"G\";\n  CharacterCodes2[CharacterCodes2[\"H\"] = 72] = \"H\";\n  CharacterCodes2[CharacterCodes2[\"I\"] = 73] = \"I\";\n  CharacterCodes2[CharacterCodes2[\"J\"] = 74] = \"J\";\n  CharacterCodes2[CharacterCodes2[\"K\"] = 75] = \"K\";\n  CharacterCodes2[CharacterCodes2[\"L\"] = 76] = \"L\";\n  CharacterCodes2[CharacterCodes2[\"M\"] = 77] = \"M\";\n  CharacterCodes2[CharacterCodes2[\"N\"] = 78] = \"N\";\n  CharacterCodes2[CharacterCodes2[\"O\"] = 79] = \"O\";\n  CharacterCodes2[CharacterCodes2[\"P\"] = 80] = \"P\";\n  CharacterCodes2[CharacterCodes2[\"Q\"] = 81] = \"Q\";\n  CharacterCodes2[CharacterCodes2[\"R\"] = 82] = \"R\";\n  CharacterCodes2[CharacterCodes2[\"S\"] = 83] = \"S\";\n  CharacterCodes2[CharacterCodes2[\"T\"] = 84] = \"T\";\n  CharacterCodes2[CharacterCodes2[\"U\"] = 85] = \"U\";\n  CharacterCodes2[CharacterCodes2[\"V\"] = 86] = \"V\";\n  CharacterCodes2[CharacterCodes2[\"W\"] = 87] = \"W\";\n  CharacterCodes2[CharacterCodes2[\"X\"] = 88] = \"X\";\n  CharacterCodes2[CharacterCodes2[\"Y\"] = 89] = \"Y\";\n  CharacterCodes2[CharacterCodes2[\"Z\"] = 90] = \"Z\";\n  CharacterCodes2[CharacterCodes2[\"asterisk\"] = 42] = \"asterisk\";\n  CharacterCodes2[CharacterCodes2[\"backslash\"] = 92] = \"backslash\";\n  CharacterCodes2[CharacterCodes2[\"closeBrace\"] = 125] = \"closeBrace\";\n  CharacterCodes2[CharacterCodes2[\"closeBracket\"] = 93] = \"closeBracket\";\n  CharacterCodes2[CharacterCodes2[\"colon\"] = 58] = \"colon\";\n  CharacterCodes2[CharacterCodes2[\"comma\"] = 44] = \"comma\";\n  CharacterCodes2[CharacterCodes2[\"dot\"] = 46] = \"dot\";\n  CharacterCodes2[CharacterCodes2[\"doubleQuote\"] = 34] = \"doubleQuote\";\n  CharacterCodes2[CharacterCodes2[\"minus\"] = 45] = \"minus\";\n  CharacterCodes2[CharacterCodes2[\"openBrace\"] = 123] = \"openBrace\";\n  CharacterCodes2[CharacterCodes2[\"openBracket\"] = 91] = \"openBracket\";\n  CharacterCodes2[CharacterCodes2[\"plus\"] = 43] = \"plus\";\n  CharacterCodes2[CharacterCodes2[\"slash\"] = 47] = \"slash\";\n  CharacterCodes2[CharacterCodes2[\"formFeed\"] = 12] = \"formFeed\";\n  CharacterCodes2[CharacterCodes2[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n\n// node_modules/jsonc-parser/lib/esm/impl/string-intern.js\nvar cachedSpaces = new Array(20).fill(0).map((_, index) => {\n  return \" \".repeat(index);\n});\nvar maxCachedValues = 200;\nvar cachedBreakLinesWithSpaces = {\n  \" \": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \" \".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \" \".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \" \".repeat(index);\n    })\n  },\n  \"\t\": {\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\n\" + \"\t\".repeat(index);\n    }),\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\" + \"\t\".repeat(index);\n    }),\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\n      return \"\\r\\n\" + \"\t\".repeat(index);\n    })\n  }\n};\nvar supportedEols = [\"\\n\", \"\\r\", \"\\r\\n\"];\n\n// node_modules/jsonc-parser/lib/esm/impl/format.js\nfunction format(documentText, range, options) {\n  let initialIndentLevel;\n  let formatText;\n  let formatTextStart;\n  let rangeStart;\n  let rangeEnd;\n  if (range) {\n    rangeStart = range.offset;\n    rangeEnd = rangeStart + range.length;\n    formatTextStart = rangeStart;\n    while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n      formatTextStart--;\n    }\n    let endOffset = rangeEnd;\n    while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n      endOffset++;\n    }\n    formatText = documentText.substring(formatTextStart, endOffset);\n    initialIndentLevel = computeIndentLevel(formatText, options);\n  } else {\n    formatText = documentText;\n    initialIndentLevel = 0;\n    formatTextStart = 0;\n    rangeStart = 0;\n    rangeEnd = documentText.length;\n  }\n  const eol = getEOL(options, documentText);\n  const eolFastPathSupported = supportedEols.includes(eol);\n  let numberLineBreaks = 0;\n  let indentLevel = 0;\n  let indentValue;\n  if (options.insertSpaces) {\n    indentValue = cachedSpaces[options.tabSize || 4] ?? repeat(cachedSpaces[1], options.tabSize || 4);\n  } else {\n    indentValue = \"\t\";\n  }\n  const indentType = indentValue === \"\t\" ? \"\t\" : \" \";\n  let scanner = createScanner(formatText, false);\n  let hasError = false;\n  function newLinesAndIndent() {\n    if (numberLineBreaks > 1) {\n      return repeat(eol, numberLineBreaks) + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    const amountOfSpaces = indentValue.length * (initialIndentLevel + indentLevel);\n    if (!eolFastPathSupported || amountOfSpaces > cachedBreakLinesWithSpaces[indentType][eol].length) {\n      return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    if (amountOfSpaces <= 0) {\n      return eol;\n    }\n    return cachedBreakLinesWithSpaces[indentType][eol][amountOfSpaces];\n  }\n  function scanNext() {\n    let token = scanner.scan();\n    numberLineBreaks = 0;\n    while (token === 15 || token === 14) {\n      if (token === 14 && options.keepLines) {\n        numberLineBreaks += 1;\n      } else if (token === 14) {\n        numberLineBreaks = 1;\n      }\n      token = scanner.scan();\n    }\n    hasError = token === 16 || scanner.getTokenError() !== 0;\n    return token;\n  }\n  const editOperations = [];\n  function addEdit(text, startOffset, endOffset) {\n    if (!hasError && (!range || startOffset < rangeEnd && endOffset > rangeStart) && documentText.substring(startOffset, endOffset) !== text) {\n      editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n    }\n  }\n  let firstToken = scanNext();\n  if (options.keepLines && numberLineBreaks > 0) {\n    addEdit(repeat(eol, numberLineBreaks), 0, 0);\n  }\n  if (firstToken !== 17) {\n    let firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n    let initialIndent = indentValue.length * initialIndentLevel < 20 && options.insertSpaces ? cachedSpaces[indentValue.length * initialIndentLevel] : repeat(indentValue, initialIndentLevel);\n    addEdit(initialIndent, formatTextStart, firstTokenStart);\n  }\n  while (firstToken !== 17) {\n    let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n    let secondToken = scanNext();\n    let replaceContent = \"\";\n    let needsLineBreak = false;\n    while (numberLineBreaks === 0 && (secondToken === 12 || secondToken === 13)) {\n      let commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n      addEdit(cachedSpaces[1], firstTokenEnd, commentTokenStart);\n      firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n      needsLineBreak = secondToken === 12;\n      replaceContent = needsLineBreak ? newLinesAndIndent() : \"\";\n      secondToken = scanNext();\n    }\n    if (secondToken === 2) {\n      if (firstToken !== 1) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 1) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else if (secondToken === 4) {\n      if (firstToken !== 3) {\n        indentLevel--;\n      }\n      ;\n      if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 3) {\n        replaceContent = newLinesAndIndent();\n      } else if (options.keepLines) {\n        replaceContent = cachedSpaces[1];\n      }\n    } else {\n      switch (firstToken) {\n        case 3:\n        case 1:\n          indentLevel++;\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 5:\n          if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 12:\n          replaceContent = newLinesAndIndent();\n          break;\n        case 13:\n          if (numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 6:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (!needsLineBreak) {\n            replaceContent = cachedSpaces[1];\n          }\n          break;\n        case 10:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else if (secondToken === 6 && !needsLineBreak) {\n            replaceContent = \"\";\n          }\n          break;\n        case 7:\n        case 8:\n        case 9:\n        case 11:\n        case 2:\n        case 4:\n          if (options.keepLines && numberLineBreaks > 0) {\n            replaceContent = newLinesAndIndent();\n          } else {\n            if ((secondToken === 12 || secondToken === 13) && !needsLineBreak) {\n              replaceContent = cachedSpaces[1];\n            } else if (secondToken !== 5 && secondToken !== 17) {\n              hasError = true;\n            }\n          }\n          break;\n        case 16:\n          hasError = true;\n          break;\n      }\n      if (numberLineBreaks > 0 && (secondToken === 12 || secondToken === 13)) {\n        replaceContent = newLinesAndIndent();\n      }\n    }\n    if (secondToken === 17) {\n      if (options.keepLines && numberLineBreaks > 0) {\n        replaceContent = newLinesAndIndent();\n      } else {\n        replaceContent = options.insertFinalNewline ? eol : \"\";\n      }\n    }\n    const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n    addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n    firstToken = secondToken;\n  }\n  return editOperations;\n}\nfunction repeat(s, count) {\n  let result = \"\";\n  for (let i = 0; i < count; i++) {\n    result += s;\n  }\n  return result;\n}\nfunction computeIndentLevel(content, options) {\n  let i = 0;\n  let nChars = 0;\n  const tabSize = options.tabSize || 4;\n  while (i < content.length) {\n    let ch = content.charAt(i);\n    if (ch === cachedSpaces[1]) {\n      nChars++;\n    } else if (ch === \"\t\") {\n      nChars += tabSize;\n    } else {\n      break;\n    }\n    i++;\n  }\n  return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n  for (let i = 0; i < text.length; i++) {\n    const ch = text.charAt(i);\n    if (ch === \"\\r\") {\n      if (i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n        return \"\\r\\n\";\n      }\n      return \"\\r\";\n    } else if (ch === \"\\n\") {\n      return \"\\n\";\n    }\n  }\n  return options && options.eol || \"\\n\";\n}\nfunction isEOL(text, offset) {\n  return \"\\r\\n\".indexOf(text.charAt(offset)) !== -1;\n}\n\n// node_modules/jsonc-parser/lib/esm/impl/parser.js\nvar ParseOptions;\n(function(ParseOptions2) {\n  ParseOptions2.DEFAULT = {\n    allowTrailingComma: false\n  };\n})(ParseOptions || (ParseOptions = {}));\nfunction parse(text, errors = [], options = ParseOptions.DEFAULT) {\n  let currentProperty = null;\n  let currentParent = [];\n  const previousParents = [];\n  function onValue(value) {\n    if (Array.isArray(currentParent)) {\n      currentParent.push(value);\n    } else if (currentProperty !== null) {\n      currentParent[currentProperty] = value;\n    }\n  }\n  const visitor = {\n    onObjectBegin: () => {\n      const object = {};\n      onValue(object);\n      previousParents.push(currentParent);\n      currentParent = object;\n      currentProperty = null;\n    },\n    onObjectProperty: (name) => {\n      currentProperty = name;\n    },\n    onObjectEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onArrayBegin: () => {\n      const array = [];\n      onValue(array);\n      previousParents.push(currentParent);\n      currentParent = array;\n      currentProperty = null;\n    },\n    onArrayEnd: () => {\n      currentParent = previousParents.pop();\n    },\n    onLiteralValue: onValue,\n    onError: (error, offset, length) => {\n      errors.push({ error, offset, length });\n    }\n  };\n  visit(text, visitor, options);\n  return currentParent[0];\n}\nfunction getNodePath(node) {\n  if (!node.parent || !node.parent.children) {\n    return [];\n  }\n  const path = getNodePath(node.parent);\n  if (node.parent.type === \"property\") {\n    const key = node.parent.children[0].value;\n    path.push(key);\n  } else if (node.parent.type === \"array\") {\n    const index = node.parent.children.indexOf(node);\n    if (index !== -1) {\n      path.push(index);\n    }\n  }\n  return path;\n}\nfunction getNodeValue(node) {\n  switch (node.type) {\n    case \"array\":\n      return node.children.map(getNodeValue);\n    case \"object\":\n      const obj = /* @__PURE__ */ Object.create(null);\n      for (let prop of node.children) {\n        const valueNode = prop.children[1];\n        if (valueNode) {\n          obj[prop.children[0].value] = getNodeValue(valueNode);\n        }\n      }\n      return obj;\n    case \"null\":\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return node.value;\n    default:\n      return void 0;\n  }\n}\nfunction contains(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nfunction findNodeAtOffset(node, offset, includeRightBound = false) {\n  if (contains(node, offset, includeRightBound)) {\n    const children = node.children;\n    if (Array.isArray(children)) {\n      for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n        const item = findNodeAtOffset(children[i], offset, includeRightBound);\n        if (item) {\n          return item;\n        }\n      }\n    }\n    return node;\n  }\n  return void 0;\n}\nfunction visit(text, visitor, options = ParseOptions.DEFAULT) {\n  const _scanner = createScanner(text, false);\n  const _jsonPath = [];\n  function toNoArgVisit(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toNoArgVisitWithPath(visitFunction) {\n    return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  function toOneArgVisit(visitFunction) {\n    return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n  }\n  function toOneArgVisitWithPath(visitFunction) {\n    return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n  }\n  const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin), onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n  const disallowComments = options && options.disallowComments;\n  const allowTrailingComma = options && options.allowTrailingComma;\n  function scanNext() {\n    while (true) {\n      const token = _scanner.scan();\n      switch (_scanner.getTokenError()) {\n        case 4:\n          handleError(\n            14\n            /* ParseErrorCode.InvalidUnicode */\n          );\n          break;\n        case 5:\n          handleError(\n            15\n            /* ParseErrorCode.InvalidEscapeCharacter */\n          );\n          break;\n        case 3:\n          handleError(\n            13\n            /* ParseErrorCode.UnexpectedEndOfNumber */\n          );\n          break;\n        case 1:\n          if (!disallowComments) {\n            handleError(\n              11\n              /* ParseErrorCode.UnexpectedEndOfComment */\n            );\n          }\n          break;\n        case 2:\n          handleError(\n            12\n            /* ParseErrorCode.UnexpectedEndOfString */\n          );\n          break;\n        case 6:\n          handleError(\n            16\n            /* ParseErrorCode.InvalidCharacter */\n          );\n          break;\n      }\n      switch (token) {\n        case 12:\n        case 13:\n          if (disallowComments) {\n            handleError(\n              10\n              /* ParseErrorCode.InvalidCommentToken */\n            );\n          } else {\n            onComment();\n          }\n          break;\n        case 16:\n          handleError(\n            1\n            /* ParseErrorCode.InvalidSymbol */\n          );\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token;\n      }\n    }\n  }\n  function handleError(error, skipUntilAfter = [], skipUntil = []) {\n    onError(error);\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token = _scanner.getToken();\n      while (token !== 17) {\n        if (skipUntilAfter.indexOf(token) !== -1) {\n          scanNext();\n          break;\n        } else if (skipUntil.indexOf(token) !== -1) {\n          break;\n        }\n        token = scanNext();\n      }\n    }\n  }\n  function parseString(isValue) {\n    const value = _scanner.getTokenValue();\n    if (isValue) {\n      onLiteralValue(value);\n    } else {\n      onObjectProperty(value);\n      _jsonPath.push(value);\n    }\n    scanNext();\n    return true;\n  }\n  function parseLiteral() {\n    switch (_scanner.getToken()) {\n      case 11:\n        const tokenValue = _scanner.getTokenValue();\n        let value = Number(tokenValue);\n        if (isNaN(value)) {\n          handleError(\n            2\n            /* ParseErrorCode.InvalidNumberFormat */\n          );\n          value = 0;\n        }\n        onLiteralValue(value);\n        break;\n      case 7:\n        onLiteralValue(null);\n        break;\n      case 8:\n        onLiteralValue(true);\n        break;\n      case 9:\n        onLiteralValue(false);\n        break;\n      default:\n        return false;\n    }\n    scanNext();\n    return true;\n  }\n  function parseProperty() {\n    if (_scanner.getToken() !== 10) {\n      handleError(3, [], [\n        2,\n        5\n        /* SyntaxKind.CommaToken */\n      ]);\n      return false;\n    }\n    parseString(false);\n    if (_scanner.getToken() === 6) {\n      onSeparator(\":\");\n      scanNext();\n      if (!parseValue()) {\n        handleError(4, [], [\n          2,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n    } else {\n      handleError(5, [], [\n        2,\n        5\n        /* SyntaxKind.CommaToken */\n      ]);\n    }\n    _jsonPath.pop();\n    return true;\n  }\n  function parseObject() {\n    onObjectBegin();\n    scanNext();\n    let needsComma = false;\n    while (_scanner.getToken() !== 2 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 2 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (!parseProperty()) {\n        handleError(4, [], [\n          2,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n      needsComma = true;\n    }\n    onObjectEnd();\n    if (_scanner.getToken() !== 2) {\n      handleError(7, [\n        2\n        /* SyntaxKind.CloseBraceToken */\n      ], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseArray() {\n    onArrayBegin();\n    scanNext();\n    let isFirstElement = true;\n    let needsComma = false;\n    while (_scanner.getToken() !== 4 && _scanner.getToken() !== 17) {\n      if (_scanner.getToken() === 5) {\n        if (!needsComma) {\n          handleError(4, [], []);\n        }\n        onSeparator(\",\");\n        scanNext();\n        if (_scanner.getToken() === 4 && allowTrailingComma) {\n          break;\n        }\n      } else if (needsComma) {\n        handleError(6, [], []);\n      }\n      if (isFirstElement) {\n        _jsonPath.push(0);\n        isFirstElement = false;\n      } else {\n        _jsonPath[_jsonPath.length - 1]++;\n      }\n      if (!parseValue()) {\n        handleError(4, [], [\n          4,\n          5\n          /* SyntaxKind.CommaToken */\n        ]);\n      }\n      needsComma = true;\n    }\n    onArrayEnd();\n    if (!isFirstElement) {\n      _jsonPath.pop();\n    }\n    if (_scanner.getToken() !== 4) {\n      handleError(8, [\n        4\n        /* SyntaxKind.CloseBracketToken */\n      ], []);\n    } else {\n      scanNext();\n    }\n    return true;\n  }\n  function parseValue() {\n    switch (_scanner.getToken()) {\n      case 3:\n        return parseArray();\n      case 1:\n        return parseObject();\n      case 10:\n        return parseString(true);\n      default:\n        return parseLiteral();\n    }\n  }\n  scanNext();\n  if (_scanner.getToken() === 17) {\n    if (options.allowEmptyContent) {\n      return true;\n    }\n    handleError(4, [], []);\n    return false;\n  }\n  if (!parseValue()) {\n    handleError(4, [], []);\n    return false;\n  }\n  if (_scanner.getToken() !== 17) {\n    handleError(9, [], []);\n  }\n  return true;\n}\n\n// node_modules/jsonc-parser/lib/esm/main.js\nvar createScanner2 = createScanner;\nvar ScanError;\n(function(ScanError2) {\n  ScanError2[ScanError2[\"None\"] = 0] = \"None\";\n  ScanError2[ScanError2[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n  ScanError2[ScanError2[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n  ScanError2[ScanError2[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n  ScanError2[ScanError2[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n  ScanError2[ScanError2[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n  ScanError2[ScanError2[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nvar SyntaxKind;\n(function(SyntaxKind2) {\n  SyntaxKind2[SyntaxKind2[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n  SyntaxKind2[SyntaxKind2[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n  SyntaxKind2[SyntaxKind2[\"CommaToken\"] = 5] = \"CommaToken\";\n  SyntaxKind2[SyntaxKind2[\"ColonToken\"] = 6] = \"ColonToken\";\n  SyntaxKind2[SyntaxKind2[\"NullKeyword\"] = 7] = \"NullKeyword\";\n  SyntaxKind2[SyntaxKind2[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n  SyntaxKind2[SyntaxKind2[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n  SyntaxKind2[SyntaxKind2[\"StringLiteral\"] = 10] = \"StringLiteral\";\n  SyntaxKind2[SyntaxKind2[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n  SyntaxKind2[SyntaxKind2[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n  SyntaxKind2[SyntaxKind2[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n  SyntaxKind2[SyntaxKind2[\"Trivia\"] = 15] = \"Trivia\";\n  SyntaxKind2[SyntaxKind2[\"Unknown\"] = 16] = \"Unknown\";\n  SyntaxKind2[SyntaxKind2[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\nvar parse2 = parse;\nvar findNodeAtOffset2 = findNodeAtOffset;\nvar getNodePath2 = getNodePath;\nvar getNodeValue2 = getNodeValue;\nvar ParseErrorCode;\n(function(ParseErrorCode2) {\n  ParseErrorCode2[ParseErrorCode2[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n  ParseErrorCode2[ParseErrorCode2[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ValueExpected\"] = 4] = \"ValueExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"ColonExpected\"] = 5] = \"ColonExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CommaExpected\"] = 6] = \"CommaExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nfunction format2(documentText, range, options) {\n  return format(documentText, range, options);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/objects.js\nfunction equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n  if (one === null || one === void 0 || other === null || other === void 0) {\n    return false;\n  }\n  if (typeof one !== typeof other) {\n    return false;\n  }\n  if (typeof one !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n  let i, key;\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    const oneKeys = [];\n    for (key in one) {\n      oneKeys.push(key);\n    }\n    oneKeys.sort();\n    const otherKeys = [];\n    for (key in other) {\n      otherKeys.push(key);\n    }\n    otherKeys.sort();\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction isNumber(val) {\n  return typeof val === \"number\";\n}\nfunction isDefined(val) {\n  return typeof val !== \"undefined\";\n}\nfunction isBoolean(val) {\n  return typeof val === \"boolean\";\n}\nfunction isString(val) {\n  return typeof val === \"string\";\n}\nfunction isObject(val) {\n  return typeof val === \"object\" && val !== null && !Array.isArray(val);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/strings.js\nfunction startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n  for (let i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction endsWith(haystack, needle) {\n  const diff = haystack.length - needle.length;\n  if (diff > 0) {\n    return haystack.lastIndexOf(needle) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\nfunction extendedRegExp(pattern) {\n  let flags = \"\";\n  if (startsWith(pattern, \"(?i)\")) {\n    pattern = pattern.substring(4);\n    flags = \"i\";\n  }\n  try {\n    return new RegExp(pattern, flags + \"u\");\n  } catch (e) {\n    try {\n      return new RegExp(pattern, flags);\n    } catch (e2) {\n      return void 0;\n    }\n  }\n}\nfunction stringLength(str) {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    count++;\n    const code = str.charCodeAt(i);\n    if (55296 <= code && code <= 56319) {\n      i++;\n    }\n  }\n  return count;\n}\n\n// node_modules/vscode-languageserver-types/lib/esm/main.js\nvar DocumentUri;\n(function(DocumentUri2) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  DocumentUri2.is = is;\n})(DocumentUri || (DocumentUri = {}));\nvar URI;\n(function(URI3) {\n  function is(value) {\n    return typeof value === \"string\";\n  }\n  URI3.is = is;\n})(URI || (URI = {}));\nvar integer;\n(function(integer2) {\n  integer2.MIN_VALUE = -2147483648;\n  integer2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && integer2.MIN_VALUE <= value && value <= integer2.MAX_VALUE;\n  }\n  integer2.is = is;\n})(integer || (integer = {}));\nvar uinteger;\n(function(uinteger2) {\n  uinteger2.MIN_VALUE = 0;\n  uinteger2.MAX_VALUE = 2147483647;\n  function is(value) {\n    return typeof value === \"number\" && uinteger2.MIN_VALUE <= value && value <= uinteger2.MAX_VALUE;\n  }\n  uinteger2.is = is;\n})(uinteger || (uinteger = {}));\nvar Position;\n(function(Position2) {\n  function create(line, character) {\n    if (line === Number.MAX_VALUE) {\n      line = uinteger.MAX_VALUE;\n    }\n    if (character === Number.MAX_VALUE) {\n      character = uinteger.MAX_VALUE;\n    }\n    return { line, character };\n  }\n  Position2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n  }\n  Position2.is = is;\n})(Position || (Position = {}));\nvar Range;\n(function(Range2) {\n  function create(one, two, three, four) {\n    if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n      return { start: Position.create(one, two), end: Position.create(three, four) };\n    } else if (Position.is(one) && Position.is(two)) {\n      return { start: one, end: two };\n    } else {\n      throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n    }\n  }\n  Range2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n  Range2.is = is;\n})(Range || (Range = {}));\nvar Location;\n(function(Location2) {\n  function create(uri, range) {\n    return { uri, range };\n  }\n  Location2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n  Location2.is = is;\n})(Location || (Location = {}));\nvar LocationLink;\n(function(LocationLink2) {\n  function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n    return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n  }\n  LocationLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && Range.is(candidate.targetSelectionRange) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n  }\n  LocationLink2.is = is;\n})(LocationLink || (LocationLink = {}));\nvar Color;\n(function(Color2) {\n  function create(red, green, blue, alpha) {\n    return {\n      red,\n      green,\n      blue,\n      alpha\n    };\n  }\n  Color2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);\n  }\n  Color2.is = is;\n})(Color || (Color = {}));\nvar ColorInformation;\n(function(ColorInformation2) {\n  function create(range, color) {\n    return {\n      range,\n      color\n    };\n  }\n  ColorInformation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n  }\n  ColorInformation2.is = is;\n})(ColorInformation || (ColorInformation = {}));\nvar ColorPresentation;\n(function(ColorPresentation2) {\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label,\n      textEdit,\n      additionalTextEdits\n    };\n  }\n  ColorPresentation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n  ColorPresentation2.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\nvar FoldingRangeKind;\n(function(FoldingRangeKind2) {\n  FoldingRangeKind2.Comment = \"comment\";\n  FoldingRangeKind2.Imports = \"imports\";\n  FoldingRangeKind2.Region = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\nvar FoldingRange;\n(function(FoldingRange2) {\n  function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n    const result = {\n      startLine,\n      endLine\n    };\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n    if (Is.defined(collapsedText)) {\n      result.collapsedText = collapsedText;\n    }\n    return result;\n  }\n  FoldingRange2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n  FoldingRange2.is = is;\n})(FoldingRange || (FoldingRange = {}));\nvar DiagnosticRelatedInformation;\n(function(DiagnosticRelatedInformation2) {\n  function create(location, message) {\n    return {\n      location,\n      message\n    };\n  }\n  DiagnosticRelatedInformation2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n  DiagnosticRelatedInformation2.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\nvar DiagnosticSeverity;\n(function(DiagnosticSeverity2) {\n  DiagnosticSeverity2.Error = 1;\n  DiagnosticSeverity2.Warning = 2;\n  DiagnosticSeverity2.Information = 3;\n  DiagnosticSeverity2.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\nvar DiagnosticTag;\n(function(DiagnosticTag2) {\n  DiagnosticTag2.Unnecessary = 1;\n  DiagnosticTag2.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\nvar CodeDescription;\n(function(CodeDescription2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.href);\n  }\n  CodeDescription2.is = is;\n})(CodeDescription || (CodeDescription = {}));\nvar Diagnostic;\n(function(Diagnostic2) {\n  function create(range, message, severity, code, source, relatedInformation) {\n    let result = { range, message };\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n    return result;\n  }\n  Diagnostic2.create = create;\n  function is(value) {\n    var _a;\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n  Diagnostic2.is = is;\n})(Diagnostic || (Diagnostic = {}));\nvar Command;\n(function(Command2) {\n  function create(title, command, ...args) {\n    let result = { title, command };\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n    return result;\n  }\n  Command2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n  Command2.is = is;\n})(Command || (Command = {}));\nvar TextEdit;\n(function(TextEdit2) {\n  function replace(range, newText) {\n    return { range, newText };\n  }\n  TextEdit2.replace = replace;\n  function insert(position, newText) {\n    return { range: { start: position, end: position }, newText };\n  }\n  TextEdit2.insert = insert;\n  function del(range) {\n    return { range, newText: \"\" };\n  }\n  TextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n  TextEdit2.is = is;\n})(TextEdit || (TextEdit = {}));\nvar ChangeAnnotation;\n(function(ChangeAnnotation2) {\n  function create(label, needsConfirmation, description) {\n    const result = { label };\n    if (needsConfirmation !== void 0) {\n      result.needsConfirmation = needsConfirmation;\n    }\n    if (description !== void 0) {\n      result.description = description;\n    }\n    return result;\n  }\n  ChangeAnnotation2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  ChangeAnnotation2.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nvar ChangeAnnotationIdentifier;\n(function(ChangeAnnotationIdentifier2) {\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate);\n  }\n  ChangeAnnotationIdentifier2.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nvar AnnotatedTextEdit;\n(function(AnnotatedTextEdit2) {\n  function replace(range, newText, annotation) {\n    return { range, newText, annotationId: annotation };\n  }\n  AnnotatedTextEdit2.replace = replace;\n  function insert(position, newText, annotation) {\n    return { range: { start: position, end: position }, newText, annotationId: annotation };\n  }\n  AnnotatedTextEdit2.insert = insert;\n  function del(range, annotation) {\n    return { range, newText: \"\", annotationId: annotation };\n  }\n  AnnotatedTextEdit2.del = del;\n  function is(value) {\n    const candidate = value;\n    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  AnnotatedTextEdit2.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\nvar TextDocumentEdit;\n(function(TextDocumentEdit2) {\n  function create(textDocument, edits) {\n    return { textDocument, edits };\n  }\n  TextDocumentEdit2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n  TextDocumentEdit2.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar CreateFile;\n(function(CreateFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"create\",\n      uri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  CreateFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"create\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  CreateFile2.is = is;\n})(CreateFile || (CreateFile = {}));\nvar RenameFile;\n(function(RenameFile2) {\n  function create(oldUri, newUri, options, annotation) {\n    let result = {\n      kind: \"rename\",\n      oldUri,\n      newUri\n    };\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  RenameFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"rename\" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  RenameFile2.is = is;\n})(RenameFile || (RenameFile = {}));\nvar DeleteFile;\n(function(DeleteFile2) {\n  function create(uri, options, annotation) {\n    let result = {\n      kind: \"delete\",\n      uri\n    };\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\n      result.options = options;\n    }\n    if (annotation !== void 0) {\n      result.annotationId = annotation;\n    }\n    return result;\n  }\n  DeleteFile2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && candidate.kind === \"delete\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\n  }\n  DeleteFile2.is = is;\n})(DeleteFile || (DeleteFile = {}));\nvar WorkspaceEdit;\n(function(WorkspaceEdit2) {\n  function is(value) {\n    let candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every((change) => {\n      if (Is.string(change.kind)) {\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n      } else {\n        return TextDocumentEdit.is(change);\n      }\n    }));\n  }\n  WorkspaceEdit2.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextDocumentIdentifier;\n(function(TextDocumentIdentifier2) {\n  function create(uri) {\n    return { uri };\n  }\n  TextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n  TextDocumentIdentifier2.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\nvar VersionedTextDocumentIdentifier;\n(function(VersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return { uri, version };\n  }\n  VersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n  }\n  VersionedTextDocumentIdentifier2.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\nvar OptionalVersionedTextDocumentIdentifier;\n(function(OptionalVersionedTextDocumentIdentifier2) {\n  function create(uri, version) {\n    return { uri, version };\n  }\n  OptionalVersionedTextDocumentIdentifier2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n  }\n  OptionalVersionedTextDocumentIdentifier2.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\nvar TextDocumentItem;\n(function(TextDocumentItem2) {\n  function create(uri, languageId, version, text) {\n    return { uri, languageId, version, text };\n  }\n  TextDocumentItem2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n  }\n  TextDocumentItem2.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\nvar MarkupKind;\n(function(MarkupKind2) {\n  MarkupKind2.PlainText = \"plaintext\";\n  MarkupKind2.Markdown = \"markdown\";\n  function is(value) {\n    const candidate = value;\n    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;\n  }\n  MarkupKind2.is = is;\n})(MarkupKind || (MarkupKind = {}));\nvar MarkupContent;\n(function(MarkupContent2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n  MarkupContent2.is = is;\n})(MarkupContent || (MarkupContent = {}));\nvar CompletionItemKind;\n(function(CompletionItemKind2) {\n  CompletionItemKind2.Text = 1;\n  CompletionItemKind2.Method = 2;\n  CompletionItemKind2.Function = 3;\n  CompletionItemKind2.Constructor = 4;\n  CompletionItemKind2.Field = 5;\n  CompletionItemKind2.Variable = 6;\n  CompletionItemKind2.Class = 7;\n  CompletionItemKind2.Interface = 8;\n  CompletionItemKind2.Module = 9;\n  CompletionItemKind2.Property = 10;\n  CompletionItemKind2.Unit = 11;\n  CompletionItemKind2.Value = 12;\n  CompletionItemKind2.Enum = 13;\n  CompletionItemKind2.Keyword = 14;\n  CompletionItemKind2.Snippet = 15;\n  CompletionItemKind2.Color = 16;\n  CompletionItemKind2.File = 17;\n  CompletionItemKind2.Reference = 18;\n  CompletionItemKind2.Folder = 19;\n  CompletionItemKind2.EnumMember = 20;\n  CompletionItemKind2.Constant = 21;\n  CompletionItemKind2.Struct = 22;\n  CompletionItemKind2.Event = 23;\n  CompletionItemKind2.Operator = 24;\n  CompletionItemKind2.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar InsertTextFormat;\n(function(InsertTextFormat2) {\n  InsertTextFormat2.PlainText = 1;\n  InsertTextFormat2.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\nvar CompletionItemTag;\n(function(CompletionItemTag2) {\n  CompletionItemTag2.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\nvar InsertReplaceEdit;\n(function(InsertReplaceEdit2) {\n  function create(newText, insert, replace) {\n    return { newText, insert, replace };\n  }\n  InsertReplaceEdit2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n  }\n  InsertReplaceEdit2.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\nvar InsertTextMode;\n(function(InsertTextMode2) {\n  InsertTextMode2.asIs = 1;\n  InsertTextMode2.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nvar CompletionItemLabelDetails;\n(function(CompletionItemLabelDetails2) {\n  function is(value) {\n    const candidate = value;\n    return candidate && (Is.string(candidate.detail) || candidate.detail === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\n  }\n  CompletionItemLabelDetails2.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\nvar CompletionItem;\n(function(CompletionItem2) {\n  function create(label) {\n    return { label };\n  }\n  CompletionItem2.create = create;\n})(CompletionItem || (CompletionItem = {}));\nvar CompletionList;\n(function(CompletionList2) {\n  function create(items, isIncomplete) {\n    return { items: items ? items : [], isIncomplete: !!isIncomplete };\n  }\n  CompletionList2.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function(MarkedString2) {\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  MarkedString2.fromPlainText = fromPlainText;\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n  MarkedString2.is = is;\n})(MarkedString || (MarkedString = {}));\nvar Hover;\n(function(Hover2) {\n  function is(value) {\n    let candidate = value;\n    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n  Hover2.is = is;\n})(Hover || (Hover = {}));\nvar ParameterInformation;\n(function(ParameterInformation2) {\n  function create(label, documentation) {\n    return documentation ? { label, documentation } : { label };\n  }\n  ParameterInformation2.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\nvar SignatureInformation;\n(function(SignatureInformation2) {\n  function create(label, documentation, ...parameters) {\n    let result = { label };\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n    return result;\n  }\n  SignatureInformation2.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\nvar DocumentHighlightKind;\n(function(DocumentHighlightKind2) {\n  DocumentHighlightKind2.Text = 1;\n  DocumentHighlightKind2.Read = 2;\n  DocumentHighlightKind2.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\nvar DocumentHighlight;\n(function(DocumentHighlight2) {\n  function create(range, kind) {\n    let result = { range };\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  DocumentHighlight2.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\nvar SymbolKind;\n(function(SymbolKind2) {\n  SymbolKind2.File = 1;\n  SymbolKind2.Module = 2;\n  SymbolKind2.Namespace = 3;\n  SymbolKind2.Package = 4;\n  SymbolKind2.Class = 5;\n  SymbolKind2.Method = 6;\n  SymbolKind2.Property = 7;\n  SymbolKind2.Field = 8;\n  SymbolKind2.Constructor = 9;\n  SymbolKind2.Enum = 10;\n  SymbolKind2.Interface = 11;\n  SymbolKind2.Function = 12;\n  SymbolKind2.Variable = 13;\n  SymbolKind2.Constant = 14;\n  SymbolKind2.String = 15;\n  SymbolKind2.Number = 16;\n  SymbolKind2.Boolean = 17;\n  SymbolKind2.Array = 18;\n  SymbolKind2.Object = 19;\n  SymbolKind2.Key = 20;\n  SymbolKind2.Null = 21;\n  SymbolKind2.EnumMember = 22;\n  SymbolKind2.Struct = 23;\n  SymbolKind2.Event = 24;\n  SymbolKind2.Operator = 25;\n  SymbolKind2.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolTag;\n(function(SymbolTag2) {\n  SymbolTag2.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nvar SymbolInformation;\n(function(SymbolInformation2) {\n  function create(name, kind, range, uri, containerName) {\n    let result = {\n      name,\n      kind,\n      location: { uri, range }\n    };\n    if (containerName) {\n      result.containerName = containerName;\n    }\n    return result;\n  }\n  SymbolInformation2.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nvar WorkspaceSymbol;\n(function(WorkspaceSymbol2) {\n  function create(name, kind, uri, range) {\n    return range !== void 0 ? { name, kind, location: { uri, range } } : { name, kind, location: { uri } };\n  }\n  WorkspaceSymbol2.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nvar DocumentSymbol;\n(function(DocumentSymbol2) {\n  function create(name, detail, kind, range, selectionRange, children) {\n    let result = {\n      name,\n      detail,\n      kind,\n      range,\n      selectionRange\n    };\n    if (children !== void 0) {\n      result.children = children;\n    }\n    return result;\n  }\n  DocumentSymbol2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));\n  }\n  DocumentSymbol2.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\nvar CodeActionKind;\n(function(CodeActionKind2) {\n  CodeActionKind2.Empty = \"\";\n  CodeActionKind2.QuickFix = \"quickfix\";\n  CodeActionKind2.Refactor = \"refactor\";\n  CodeActionKind2.RefactorExtract = \"refactor.extract\";\n  CodeActionKind2.RefactorInline = \"refactor.inline\";\n  CodeActionKind2.RefactorRewrite = \"refactor.rewrite\";\n  CodeActionKind2.Source = \"source\";\n  CodeActionKind2.SourceOrganizeImports = \"source.organizeImports\";\n  CodeActionKind2.SourceFixAll = \"source.fixAll\";\n})(CodeActionKind || (CodeActionKind = {}));\nvar CodeActionTriggerKind;\n(function(CodeActionTriggerKind2) {\n  CodeActionTriggerKind2.Invoked = 1;\n  CodeActionTriggerKind2.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\nvar CodeActionContext;\n(function(CodeActionContext2) {\n  function create(diagnostics, only, triggerKind) {\n    let result = { diagnostics };\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n    if (triggerKind !== void 0 && triggerKind !== null) {\n      result.triggerKind = triggerKind;\n    }\n    return result;\n  }\n  CodeActionContext2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string)) && (candidate.triggerKind === void 0 || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n  }\n  CodeActionContext2.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nvar CodeAction;\n(function(CodeAction2) {\n  function create(title, kindOrCommandOrEdit, kind) {\n    let result = { title };\n    let checkKind = true;\n    if (typeof kindOrCommandOrEdit === \"string\") {\n      checkKind = false;\n      result.kind = kindOrCommandOrEdit;\n    } else if (Command.is(kindOrCommandOrEdit)) {\n      result.command = kindOrCommandOrEdit;\n    } else {\n      result.edit = kindOrCommandOrEdit;\n    }\n    if (checkKind && kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  CodeAction2.create = create;\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n  CodeAction2.is = is;\n})(CodeAction || (CodeAction = {}));\nvar CodeLens;\n(function(CodeLens2) {\n  function create(range, data) {\n    let result = { range };\n    if (Is.defined(data)) {\n      result.data = data;\n    }\n    return result;\n  }\n  CodeLens2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n  CodeLens2.is = is;\n})(CodeLens || (CodeLens = {}));\nvar FormattingOptions;\n(function(FormattingOptions2) {\n  function create(tabSize, insertSpaces) {\n    return { tabSize, insertSpaces };\n  }\n  FormattingOptions2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n  FormattingOptions2.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\nvar DocumentLink;\n(function(DocumentLink2) {\n  function create(range, target, data) {\n    return { range, target, data };\n  }\n  DocumentLink2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n  DocumentLink2.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar SelectionRange;\n(function(SelectionRange2) {\n  function create(range, parent) {\n    return { range, parent };\n  }\n  SelectionRange2.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));\n  }\n  SelectionRange2.is = is;\n})(SelectionRange || (SelectionRange = {}));\nvar SemanticTokenTypes;\n(function(SemanticTokenTypes2) {\n  SemanticTokenTypes2[\"namespace\"] = \"namespace\";\n  SemanticTokenTypes2[\"type\"] = \"type\";\n  SemanticTokenTypes2[\"class\"] = \"class\";\n  SemanticTokenTypes2[\"enum\"] = \"enum\";\n  SemanticTokenTypes2[\"interface\"] = \"interface\";\n  SemanticTokenTypes2[\"struct\"] = \"struct\";\n  SemanticTokenTypes2[\"typeParameter\"] = \"typeParameter\";\n  SemanticTokenTypes2[\"parameter\"] = \"parameter\";\n  SemanticTokenTypes2[\"variable\"] = \"variable\";\n  SemanticTokenTypes2[\"property\"] = \"property\";\n  SemanticTokenTypes2[\"enumMember\"] = \"enumMember\";\n  SemanticTokenTypes2[\"event\"] = \"event\";\n  SemanticTokenTypes2[\"function\"] = \"function\";\n  SemanticTokenTypes2[\"method\"] = \"method\";\n  SemanticTokenTypes2[\"macro\"] = \"macro\";\n  SemanticTokenTypes2[\"keyword\"] = \"keyword\";\n  SemanticTokenTypes2[\"modifier\"] = \"modifier\";\n  SemanticTokenTypes2[\"comment\"] = \"comment\";\n  SemanticTokenTypes2[\"string\"] = \"string\";\n  SemanticTokenTypes2[\"number\"] = \"number\";\n  SemanticTokenTypes2[\"regexp\"] = \"regexp\";\n  SemanticTokenTypes2[\"operator\"] = \"operator\";\n  SemanticTokenTypes2[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\nvar SemanticTokenModifiers;\n(function(SemanticTokenModifiers2) {\n  SemanticTokenModifiers2[\"declaration\"] = \"declaration\";\n  SemanticTokenModifiers2[\"definition\"] = \"definition\";\n  SemanticTokenModifiers2[\"readonly\"] = \"readonly\";\n  SemanticTokenModifiers2[\"static\"] = \"static\";\n  SemanticTokenModifiers2[\"deprecated\"] = \"deprecated\";\n  SemanticTokenModifiers2[\"abstract\"] = \"abstract\";\n  SemanticTokenModifiers2[\"async\"] = \"async\";\n  SemanticTokenModifiers2[\"modification\"] = \"modification\";\n  SemanticTokenModifiers2[\"documentation\"] = \"documentation\";\n  SemanticTokenModifiers2[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\nvar SemanticTokens;\n(function(SemanticTokens2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.resultId === void 0 || typeof candidate.resultId === \"string\") && Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === \"number\");\n  }\n  SemanticTokens2.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\nvar InlineValueText;\n(function(InlineValueText2) {\n  function create(range, text) {\n    return { range, text };\n  }\n  InlineValueText2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n  }\n  InlineValueText2.is = is;\n})(InlineValueText || (InlineValueText = {}));\nvar InlineValueVariableLookup;\n(function(InlineValueVariableLookup2) {\n  function create(range, variableName, caseSensitiveLookup) {\n    return { range, variableName, caseSensitiveLookup };\n  }\n  InlineValueVariableLookup2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup) && (Is.string(candidate.variableName) || candidate.variableName === void 0);\n  }\n  InlineValueVariableLookup2.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\nvar InlineValueEvaluatableExpression;\n(function(InlineValueEvaluatableExpression2) {\n  function create(range, expression) {\n    return { range, expression };\n  }\n  InlineValueEvaluatableExpression2.create = create;\n  function is(value) {\n    const candidate = value;\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && (Is.string(candidate.expression) || candidate.expression === void 0);\n  }\n  InlineValueEvaluatableExpression2.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\nvar InlineValueContext;\n(function(InlineValueContext2) {\n  function create(frameId, stoppedLocation) {\n    return { frameId, stoppedLocation };\n  }\n  InlineValueContext2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.defined(candidate) && Range.is(value.stoppedLocation);\n  }\n  InlineValueContext2.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\nvar InlayHintKind;\n(function(InlayHintKind2) {\n  InlayHintKind2.Type = 1;\n  InlayHintKind2.Parameter = 2;\n  function is(value) {\n    return value === 1 || value === 2;\n  }\n  InlayHintKind2.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nvar InlayHintLabelPart;\n(function(InlayHintLabelPart2) {\n  function create(value) {\n    return { value };\n  }\n  InlayHintLabelPart2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.location === void 0 || Location.is(candidate.location)) && (candidate.command === void 0 || Command.is(candidate.command));\n  }\n  InlayHintLabelPart2.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nvar InlayHint;\n(function(InlayHint2) {\n  function create(position, label, kind) {\n    const result = { position, label };\n    if (kind !== void 0) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  InlayHint2.create = create;\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.position) && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is)) && (candidate.kind === void 0 || InlayHintKind.is(candidate.kind)) && candidate.textEdits === void 0 || Is.typedArray(candidate.textEdits, TextEdit.is) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.paddingLeft === void 0 || Is.boolean(candidate.paddingLeft)) && (candidate.paddingRight === void 0 || Is.boolean(candidate.paddingRight));\n  }\n  InlayHint2.is = is;\n})(InlayHint || (InlayHint = {}));\nvar StringValue;\n(function(StringValue2) {\n  function createSnippet(value) {\n    return { kind: \"snippet\", value };\n  }\n  StringValue2.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nvar InlineCompletionItem;\n(function(InlineCompletionItem2) {\n  function create(insertText, filterText, range, command) {\n    return { insertText, filterText, range, command };\n  }\n  InlineCompletionItem2.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nvar InlineCompletionList;\n(function(InlineCompletionList2) {\n  function create(items) {\n    return { items };\n  }\n  InlineCompletionList2.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\nvar InlineCompletionTriggerKind;\n(function(InlineCompletionTriggerKind2) {\n  InlineCompletionTriggerKind2.Invoked = 0;\n  InlineCompletionTriggerKind2.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nvar SelectedCompletionInfo;\n(function(SelectedCompletionInfo2) {\n  function create(range, text) {\n    return { range, text };\n  }\n  SelectedCompletionInfo2.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nvar InlineCompletionContext;\n(function(InlineCompletionContext2) {\n  function create(triggerKind, selectedCompletionInfo) {\n    return { triggerKind, selectedCompletionInfo };\n  }\n  InlineCompletionContext2.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nvar WorkspaceFolder;\n(function(WorkspaceFolder2) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n  }\n  WorkspaceFolder2.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nvar TextDocument;\n(function(TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function is(value) {\n    let candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n  TextDocument3.is = is;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort2(edits, (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n      let e = sortedEdits[i];\n      let startOffset = document.offsetAt(e.range.start);\n      let endOffset = document.offsetAt(e.range.end);\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error(\"Overlapping edit\");\n      }\n      lastModifiedOffset = startOffset;\n    }\n    return text;\n  }\n  TextDocument3.applyEdits = applyEdits;\n  function mergeSort2(data, compare) {\n    if (data.length <= 1) {\n      return data;\n    }\n    const p = data.length / 2 | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort2(left, compare);\n    mergeSort2(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n      let ret = compare(left[leftIdx], right[rightIdx]);\n      if (ret <= 0) {\n        data[i++] = left[leftIdx++];\n      } else {\n        data[i++] = right[rightIdx++];\n      }\n    }\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\nvar FullTextDocument = class {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      let start = this.offsetAt(range.start);\n      let end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = void 0;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      let lineOffsets = [];\n      let text = this._content;\n      let isLineStart = true;\n      for (let i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n        let ch = text.charAt(i);\n        isLineStart = ch === \"\\r\" || ch === \"\\n\";\n        if (ch === \"\\r\" && i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\n          i++;\n        }\n      }\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n      this._lineOffsets = lineOffsets;\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0, high = lineOffsets.length;\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n};\nvar Is;\n(function(Is2) {\n  const toString = Object.prototype.toString;\n  function defined(value) {\n    return typeof value !== \"undefined\";\n  }\n  Is2.defined = defined;\n  function undefined2(value) {\n    return typeof value === \"undefined\";\n  }\n  Is2.undefined = undefined2;\n  function boolean(value) {\n    return value === true || value === false;\n  }\n  Is2.boolean = boolean;\n  function string(value) {\n    return toString.call(value) === \"[object String]\";\n  }\n  Is2.string = string;\n  function number(value) {\n    return toString.call(value) === \"[object Number]\";\n  }\n  Is2.number = number;\n  function numberRange(value, min, max) {\n    return toString.call(value) === \"[object Number]\" && min <= value && value <= max;\n  }\n  Is2.numberRange = numberRange;\n  function integer2(value) {\n    return toString.call(value) === \"[object Number]\" && -2147483648 <= value && value <= 2147483647;\n  }\n  Is2.integer = integer2;\n  function uinteger2(value) {\n    return toString.call(value) === \"[object Number]\" && 0 <= value && value <= 2147483647;\n  }\n  Is2.uinteger = uinteger2;\n  function func(value) {\n    return toString.call(value) === \"[object Function]\";\n  }\n  Is2.func = func;\n  function objectLiteral(value) {\n    return value !== null && typeof value === \"object\";\n  }\n  Is2.objectLiteral = objectLiteral;\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n  Is2.typedArray = typedArray;\n})(Is || (Is = {}));\n\n// node_modules/vscode-languageserver-textdocument/lib/esm/main.js\nvar FullTextDocument2 = class _FullTextDocument {\n  constructor(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = void 0;\n  }\n  get uri() {\n    return this._uri;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get version() {\n    return this._version;\n  }\n  getText(range) {\n    if (range) {\n      const start = this.offsetAt(range.start);\n      const end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  }\n  update(changes, version) {\n    for (let change of changes) {\n      if (_FullTextDocument.isIncremental(change)) {\n        const range = getWellformedRange(change.range);\n        const startOffset = this.offsetAt(range.start);\n        const endOffset = this.offsetAt(range.end);\n        this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n        const startLine = Math.max(range.start.line, 0);\n        const endLine = Math.max(range.end.line, 0);\n        let lineOffsets = this._lineOffsets;\n        const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n        if (endLine - startLine === addedLineOffsets.length) {\n          for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n            lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n          }\n        } else {\n          if (addedLineOffsets.length < 1e4) {\n            lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n          } else {\n            this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n          }\n        }\n        const diff = change.text.length - (endOffset - startOffset);\n        if (diff !== 0) {\n          for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n            lineOffsets[i] = lineOffsets[i] + diff;\n          }\n        }\n      } else if (_FullTextDocument.isFull(change)) {\n        this._content = change.text;\n        this._lineOffsets = void 0;\n      } else {\n        throw new Error(\"Unknown change event received\");\n      }\n    }\n    this._version = version;\n  }\n  getLineOffsets() {\n    if (this._lineOffsets === void 0) {\n      this._lineOffsets = computeLineOffsets(this._content, true);\n    }\n    return this._lineOffsets;\n  }\n  positionAt(offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    let lineOffsets = this.getLineOffsets();\n    let low = 0, high = lineOffsets.length;\n    if (high === 0) {\n      return { line: 0, character: offset };\n    }\n    while (low < high) {\n      let mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    let line = low - 1;\n    return { line, character: offset - lineOffsets[line] };\n  }\n  offsetAt(position) {\n    let lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    let lineOffset = lineOffsets[position.line];\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  }\n  get lineCount() {\n    return this.getLineOffsets().length;\n  }\n  static isIncremental(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range !== void 0 && (candidate.rangeLength === void 0 || typeof candidate.rangeLength === \"number\");\n  }\n  static isFull(event) {\n    let candidate = event;\n    return candidate !== void 0 && candidate !== null && typeof candidate.text === \"string\" && candidate.range === void 0 && candidate.rangeLength === void 0;\n  }\n};\nvar TextDocument2;\n(function(TextDocument3) {\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument2(uri, languageId, version, content);\n  }\n  TextDocument3.create = create;\n  function update(document, changes, version) {\n    if (document instanceof FullTextDocument2) {\n      document.update(changes, version);\n      return document;\n    } else {\n      throw new Error(\"TextDocument.update: document must be created by TextDocument.create\");\n    }\n  }\n  TextDocument3.update = update;\n  function applyEdits(document, edits) {\n    let text = document.getText();\n    let sortedEdits = mergeSort(edits.map(getWellformedEdit), (a2, b) => {\n      let diff = a2.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a2.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    let lastModifiedOffset = 0;\n    const spans = [];\n    for (const e of sortedEdits) {\n      let startOffset = document.offsetAt(e.range.start);\n      if (startOffset < lastModifiedOffset) {\n        throw new Error(\"Overlapping edit\");\n      } else if (startOffset > lastModifiedOffset) {\n        spans.push(text.substring(lastModifiedOffset, startOffset));\n      }\n      if (e.newText.length) {\n        spans.push(e.newText);\n      }\n      lastModifiedOffset = document.offsetAt(e.range.end);\n    }\n    spans.push(text.substr(lastModifiedOffset));\n    return spans.join(\"\");\n  }\n  TextDocument3.applyEdits = applyEdits;\n})(TextDocument2 || (TextDocument2 = {}));\nfunction mergeSort(data, compare) {\n  if (data.length <= 1) {\n    return data;\n  }\n  const p = data.length / 2 | 0;\n  const left = data.slice(0, p);\n  const right = data.slice(p);\n  mergeSort(left, compare);\n  mergeSort(right, compare);\n  let leftIdx = 0;\n  let rightIdx = 0;\n  let i = 0;\n  while (leftIdx < left.length && rightIdx < right.length) {\n    let ret = compare(left[leftIdx], right[rightIdx]);\n    if (ret <= 0) {\n      data[i++] = left[leftIdx++];\n    } else {\n      data[i++] = right[rightIdx++];\n    }\n  }\n  while (leftIdx < left.length) {\n    data[i++] = left[leftIdx++];\n  }\n  while (rightIdx < right.length) {\n    data[i++] = right[rightIdx++];\n  }\n  return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n  const result = isAtLineStart ? [textOffset] : [];\n  for (let i = 0; i < text.length; i++) {\n    let ch = text.charCodeAt(i);\n    if (ch === 13 || ch === 10) {\n      if (ch === 13 && i + 1 < text.length && text.charCodeAt(i + 1) === 10) {\n        i++;\n      }\n      result.push(textOffset + i + 1);\n    }\n  }\n  return result;\n}\nfunction getWellformedRange(range) {\n  const start = range.start;\n  const end = range.end;\n  if (start.line > end.line || start.line === end.line && start.character > end.character) {\n    return { start: end, end: start };\n  }\n  return range;\n}\nfunction getWellformedEdit(textEdit) {\n  const range = getWellformedRange(textEdit.range);\n  if (range !== textEdit.range) {\n    return { newText: textEdit.newText, range };\n  }\n  return textEdit;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageTypes.js\nvar ErrorCode;\n(function(ErrorCode2) {\n  ErrorCode2[ErrorCode2[\"Undefined\"] = 0] = \"Undefined\";\n  ErrorCode2[ErrorCode2[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n  ErrorCode2[ErrorCode2[\"Deprecated\"] = 2] = \"Deprecated\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n  ErrorCode2[ErrorCode2[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n  ErrorCode2[ErrorCode2[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n  ErrorCode2[ErrorCode2[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n  ErrorCode2[ErrorCode2[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n  ErrorCode2[ErrorCode2[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n  ErrorCode2[ErrorCode2[\"CommaExpected\"] = 514] = \"CommaExpected\";\n  ErrorCode2[ErrorCode2[\"ColonExpected\"] = 515] = \"ColonExpected\";\n  ErrorCode2[ErrorCode2[\"ValueExpected\"] = 516] = \"ValueExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n  ErrorCode2[ErrorCode2[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n  ErrorCode2[ErrorCode2[\"TrailingComma\"] = 519] = \"TrailingComma\";\n  ErrorCode2[ErrorCode2[\"DuplicateKey\"] = 520] = \"DuplicateKey\";\n  ErrorCode2[ErrorCode2[\"CommentNotPermitted\"] = 521] = \"CommentNotPermitted\";\n  ErrorCode2[ErrorCode2[\"PropertyKeysMustBeDoublequoted\"] = 528] = \"PropertyKeysMustBeDoublequoted\";\n  ErrorCode2[ErrorCode2[\"SchemaResolveError\"] = 768] = \"SchemaResolveError\";\n  ErrorCode2[ErrorCode2[\"SchemaUnsupportedFeature\"] = 769] = \"SchemaUnsupportedFeature\";\n})(ErrorCode || (ErrorCode = {}));\nvar SchemaDraft;\n(function(SchemaDraft2) {\n  SchemaDraft2[SchemaDraft2[\"v3\"] = 3] = \"v3\";\n  SchemaDraft2[SchemaDraft2[\"v4\"] = 4] = \"v4\";\n  SchemaDraft2[SchemaDraft2[\"v6\"] = 6] = \"v6\";\n  SchemaDraft2[SchemaDraft2[\"v7\"] = 7] = \"v7\";\n  SchemaDraft2[SchemaDraft2[\"v2019_09\"] = 19] = \"v2019_09\";\n  SchemaDraft2[SchemaDraft2[\"v2020_12\"] = 20] = \"v2020_12\";\n})(SchemaDraft || (SchemaDraft = {}));\nvar ClientCapabilities;\n(function(ClientCapabilities2) {\n  ClientCapabilities2.LATEST = {\n    textDocument: {\n      completion: {\n        completionItem: {\n          documentationFormat: [MarkupKind.Markdown, MarkupKind.PlainText],\n          commitCharactersSupport: true,\n          labelDetailsSupport: true\n        }\n      }\n    }\n  };\n})(ClientCapabilities || (ClientCapabilities = {}));\n\n// node_modules/@vscode/l10n/dist/browser.js\nvar bundle;\nfunction t(...args) {\n  const firstArg = args[0];\n  let key;\n  let message;\n  let formatArgs;\n  if (typeof firstArg === \"string\") {\n    key = firstArg;\n    message = firstArg;\n    args.splice(0, 1);\n    formatArgs = !args || typeof args[0] !== \"object\" ? args : args[0];\n  } else if (firstArg instanceof Array) {\n    const replacements = args.slice(1);\n    if (firstArg.length !== replacements.length + 1) {\n      throw new Error(\"expected a string as the first argument to l10n.t\");\n    }\n    let str = firstArg[0];\n    for (let i = 1; i < firstArg.length; i++) {\n      str += `{${i - 1}}` + firstArg[i];\n    }\n    return t(str, ...replacements);\n  } else {\n    message = firstArg.message;\n    key = message;\n    if (firstArg.comment && firstArg.comment.length > 0) {\n      key += `/${Array.isArray(firstArg.comment) ? firstArg.comment.join(\"\") : firstArg.comment}`;\n    }\n    formatArgs = firstArg.args ?? {};\n  }\n  const messageFromBundle = bundle?.[key];\n  if (!messageFromBundle) {\n    return format3(message, formatArgs);\n  }\n  if (typeof messageFromBundle === \"string\") {\n    return format3(messageFromBundle, formatArgs);\n  }\n  if (messageFromBundle.comment) {\n    return format3(messageFromBundle.message, formatArgs);\n  }\n  return format3(message, formatArgs);\n}\nvar _format2Regexp = /{([^}]+)}/g;\nfunction format3(template, values) {\n  if (Object.keys(values).length === 0) {\n    return template;\n  }\n  return template.replace(_format2Regexp, (match, group) => values[group] ?? match);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/parser/jsonParser.js\nvar formats = {\n  \"color-hex\": { errorMessage: t(\"Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.\"), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n  \"date-time\": { errorMessage: t(\"String is not a RFC3339 date-time.\"), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n  \"date\": { errorMessage: t(\"String is not a RFC3339 date.\"), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n  \"time\": { errorMessage: t(\"String is not a RFC3339 time.\"), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n  \"email\": { errorMessage: t(\"String is not an e-mail address.\"), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}))$/ },\n  \"hostname\": { errorMessage: t(\"String is not a hostname.\"), pattern: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i },\n  \"ipv4\": { errorMessage: t(\"String is not an IPv4 address.\"), pattern: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/ },\n  \"ipv6\": { errorMessage: t(\"String is not an IPv6 address.\"), pattern: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i }\n};\nvar ASTNodeImpl = class {\n  constructor(parent, offset, length = 0) {\n    this.offset = offset;\n    this.length = length;\n    this.parent = parent;\n  }\n  get children() {\n    return [];\n  }\n  toString() {\n    return \"type: \" + this.type + \" (\" + this.offset + \"/\" + this.length + \")\" + (this.parent ? \" parent: {\" + this.parent.toString() + \"}\" : \"\");\n  }\n};\nvar NullASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"null\";\n    this.value = null;\n  }\n};\nvar BooleanASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, boolValue, offset) {\n    super(parent, offset);\n    this.type = \"boolean\";\n    this.value = boolValue;\n  }\n};\nvar ArrayASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"array\";\n    this.items = [];\n  }\n  get children() {\n    return this.items;\n  }\n};\nvar NumberASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"number\";\n    this.isInteger = true;\n    this.value = Number.NaN;\n  }\n};\nvar StringASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, length) {\n    super(parent, offset, length);\n    this.type = \"string\";\n    this.value = \"\";\n  }\n};\nvar PropertyASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset, keyNode) {\n    super(parent, offset);\n    this.type = \"property\";\n    this.colonOffset = -1;\n    this.keyNode = keyNode;\n  }\n  get children() {\n    return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n  }\n};\nvar ObjectASTNodeImpl = class extends ASTNodeImpl {\n  constructor(parent, offset) {\n    super(parent, offset);\n    this.type = \"object\";\n    this.properties = [];\n  }\n  get children() {\n    return this.properties;\n  }\n};\nfunction asSchema(schema) {\n  if (isBoolean(schema)) {\n    return schema ? {} : { \"not\": {} };\n  }\n  return schema;\n}\nvar EnumMatch;\n(function(EnumMatch2) {\n  EnumMatch2[EnumMatch2[\"Key\"] = 0] = \"Key\";\n  EnumMatch2[EnumMatch2[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar schemaDraftFromId = {\n  \"http://json-schema.org/draft-03/schema#\": SchemaDraft.v3,\n  \"http://json-schema.org/draft-04/schema#\": SchemaDraft.v4,\n  \"http://json-schema.org/draft-06/schema#\": SchemaDraft.v6,\n  \"http://json-schema.org/draft-07/schema#\": SchemaDraft.v7,\n  \"https://json-schema.org/draft/2019-09/schema\": SchemaDraft.v2019_09,\n  \"https://json-schema.org/draft/2020-12/schema\": SchemaDraft.v2020_12\n};\nvar EvaluationContext = class {\n  constructor(schemaDraft) {\n    this.schemaDraft = schemaDraft;\n  }\n};\nvar SchemaCollector = class _SchemaCollector {\n  constructor(focusOffset = -1, exclude) {\n    this.focusOffset = focusOffset;\n    this.exclude = exclude;\n    this.schemas = [];\n  }\n  add(schema) {\n    this.schemas.push(schema);\n  }\n  merge(other) {\n    Array.prototype.push.apply(this.schemas, other.schemas);\n  }\n  include(node) {\n    return (this.focusOffset === -1 || contains2(node, this.focusOffset)) && node !== this.exclude;\n  }\n  newSub() {\n    return new _SchemaCollector(-1, this.exclude);\n  }\n};\nvar NoOpSchemaCollector = class {\n  constructor() {\n  }\n  get schemas() {\n    return [];\n  }\n  add(_schema) {\n  }\n  merge(_other) {\n  }\n  include(_node) {\n    return true;\n  }\n  newSub() {\n    return this;\n  }\n};\nNoOpSchemaCollector.instance = new NoOpSchemaCollector();\nvar ValidationResult = class {\n  constructor() {\n    this.problems = [];\n    this.propertiesMatches = 0;\n    this.processedProperties = /* @__PURE__ */ new Set();\n    this.propertiesValueMatches = 0;\n    this.primaryValueMatches = 0;\n    this.enumValueMatch = false;\n    this.enumValues = void 0;\n  }\n  hasProblems() {\n    return !!this.problems.length;\n  }\n  merge(validationResult) {\n    this.problems = this.problems.concat(validationResult.problems);\n    this.propertiesMatches += validationResult.propertiesMatches;\n    this.propertiesValueMatches += validationResult.propertiesValueMatches;\n    this.mergeProcessedProperties(validationResult);\n  }\n  mergeEnumValues(validationResult) {\n    if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n      this.enumValues = this.enumValues.concat(validationResult.enumValues);\n      for (const error of this.problems) {\n        if (error.code === ErrorCode.EnumValueMismatch) {\n          error.message = t(\"Value is not accepted. Valid values: {0}.\", this.enumValues.map((v) => JSON.stringify(v)).join(\", \"));\n        }\n      }\n    }\n  }\n  mergePropertyMatch(propertyValidationResult) {\n    this.problems = this.problems.concat(propertyValidationResult.problems);\n    this.propertiesMatches++;\n    if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n      this.propertiesValueMatches++;\n    }\n    if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n      this.primaryValueMatches++;\n    }\n  }\n  mergeProcessedProperties(validationResult) {\n    validationResult.processedProperties.forEach((p) => this.processedProperties.add(p));\n  }\n  compare(other) {\n    const hasProblems = this.hasProblems();\n    if (hasProblems !== other.hasProblems()) {\n      return hasProblems ? -1 : 1;\n    }\n    if (this.enumValueMatch !== other.enumValueMatch) {\n      return other.enumValueMatch ? -1 : 1;\n    }\n    if (this.primaryValueMatches !== other.primaryValueMatches) {\n      return this.primaryValueMatches - other.primaryValueMatches;\n    }\n    if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n      return this.propertiesValueMatches - other.propertiesValueMatches;\n    }\n    return this.propertiesMatches - other.propertiesMatches;\n  }\n};\nfunction newJSONDocument(root, diagnostics = []) {\n  return new JSONDocument(root, diagnostics, []);\n}\nfunction getNodeValue3(node) {\n  return getNodeValue2(node);\n}\nfunction getNodePath3(node) {\n  return getNodePath2(node);\n}\nfunction contains2(node, offset, includeRightBound = false) {\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\nvar JSONDocument = class {\n  constructor(root, syntaxErrors = [], comments = []) {\n    this.root = root;\n    this.syntaxErrors = syntaxErrors;\n    this.comments = comments;\n  }\n  getNodeFromOffset(offset, includeRightBound = false) {\n    if (this.root) {\n      return findNodeAtOffset2(this.root, offset, includeRightBound);\n    }\n    return void 0;\n  }\n  visit(visitor) {\n    if (this.root) {\n      const doVisit = (node) => {\n        let ctn = visitor(node);\n        const children = node.children;\n        if (Array.isArray(children)) {\n          for (let i = 0; i < children.length && ctn; i++) {\n            ctn = doVisit(children[i]);\n          }\n        }\n        return ctn;\n      };\n      doVisit(this.root);\n    }\n  }\n  validate(textDocument, schema, severity = DiagnosticSeverity.Warning, schemaDraft) {\n    if (this.root && schema) {\n      const validationResult = new ValidationResult();\n      validate(this.root, schema, validationResult, NoOpSchemaCollector.instance, new EvaluationContext(schemaDraft ?? getSchemaDraft(schema)));\n      return validationResult.problems.map((p) => {\n        const range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n        return Diagnostic.create(range, p.message, p.severity ?? severity, p.code);\n      });\n    }\n    return void 0;\n  }\n  getMatchingSchemas(schema, focusOffset = -1, exclude) {\n    if (this.root && schema) {\n      const matchingSchemas = new SchemaCollector(focusOffset, exclude);\n      const schemaDraft = getSchemaDraft(schema);\n      const context = new EvaluationContext(schemaDraft);\n      validate(this.root, schema, new ValidationResult(), matchingSchemas, context);\n      return matchingSchemas.schemas;\n    }\n    return [];\n  }\n};\nfunction getSchemaDraft(schema, fallBack = SchemaDraft.v2020_12) {\n  let schemaId = schema.$schema;\n  if (schemaId) {\n    return schemaDraftFromId[schemaId] ?? fallBack;\n  }\n  return fallBack;\n}\nfunction validate(n, schema, validationResult, matchingSchemas, context) {\n  if (!n || !matchingSchemas.include(n)) {\n    return;\n  }\n  if (n.type === \"property\") {\n    return validate(n.valueNode, schema, validationResult, matchingSchemas, context);\n  }\n  const node = n;\n  _validateNode();\n  switch (node.type) {\n    case \"object\":\n      _validateObjectNode(node);\n      break;\n    case \"array\":\n      _validateArrayNode(node);\n      break;\n    case \"string\":\n      _validateStringNode(node);\n      break;\n    case \"number\":\n      _validateNumberNode(node);\n      break;\n  }\n  matchingSchemas.add({ node, schema });\n  function _validateNode() {\n    function matchesType(type) {\n      return node.type === type || type === \"integer\" && node.type === \"number\" && node.isInteger;\n    }\n    if (Array.isArray(schema.type)) {\n      if (!schema.type.some(matchesType)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t(\"Incorrect type. Expected one of {0}.\", schema.type.join(\", \"))\n        });\n      }\n    } else if (schema.type) {\n      if (!matchesType(schema.type)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t('Incorrect type. Expected \"{0}\".', schema.type)\n        });\n      }\n    }\n    if (Array.isArray(schema.allOf)) {\n      for (const subSchemaRef of schema.allOf) {\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, asSchema(subSchemaRef), subValidationResult, subMatchingSchemas, context);\n        validationResult.merge(subValidationResult);\n        matchingSchemas.merge(subMatchingSchemas);\n      }\n    }\n    const notSchema = asSchema(schema.not);\n    if (notSchema) {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, notSchema, subValidationResult, subMatchingSchemas, context);\n      if (!subValidationResult.hasProblems()) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          message: schema.errorMessage || t(\"Matches a schema that is not allowed.\")\n        });\n      }\n      for (const ms of subMatchingSchemas.schemas) {\n        ms.inverted = !ms.inverted;\n        matchingSchemas.add(ms);\n      }\n    }\n    const testAlternatives = (alternatives, maxOneMatch) => {\n      const matches = [];\n      let bestMatch = void 0;\n      for (const subSchemaRef of alternatives) {\n        const subSchema = asSchema(subSchemaRef);\n        const subValidationResult = new ValidationResult();\n        const subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n        if (!subValidationResult.hasProblems()) {\n          matches.push(subSchema);\n        }\n        if (!bestMatch) {\n          bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n        } else {\n          if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            bestMatch.validationResult.mergeProcessedProperties(subValidationResult);\n          } else {\n            const compareResult = subValidationResult.compare(bestMatch.validationResult);\n            if (compareResult > 0) {\n              bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n            } else if (compareResult === 0) {\n              bestMatch.matchingSchemas.merge(subMatchingSchemas);\n              bestMatch.validationResult.mergeEnumValues(subValidationResult);\n            }\n          }\n        }\n      }\n      if (matches.length > 1 && maxOneMatch) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: 1 },\n          message: t(\"Matches multiple schemas when only one must validate.\")\n        });\n      }\n      if (bestMatch) {\n        validationResult.merge(bestMatch.validationResult);\n        matchingSchemas.merge(bestMatch.matchingSchemas);\n      }\n      return matches.length;\n    };\n    if (Array.isArray(schema.anyOf)) {\n      testAlternatives(schema.anyOf, false);\n    }\n    if (Array.isArray(schema.oneOf)) {\n      testAlternatives(schema.oneOf, true);\n    }\n    const testBranch = (schema2) => {\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, asSchema(schema2), subValidationResult, subMatchingSchemas, context);\n      validationResult.merge(subValidationResult);\n      matchingSchemas.merge(subMatchingSchemas);\n    };\n    const testCondition = (ifSchema2, thenSchema, elseSchema) => {\n      const subSchema = asSchema(ifSchema2);\n      const subValidationResult = new ValidationResult();\n      const subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, subSchema, subValidationResult, subMatchingSchemas, context);\n      matchingSchemas.merge(subMatchingSchemas);\n      validationResult.mergeProcessedProperties(subValidationResult);\n      if (!subValidationResult.hasProblems()) {\n        if (thenSchema) {\n          testBranch(thenSchema);\n        }\n      } else if (elseSchema) {\n        testBranch(elseSchema);\n      }\n    };\n    const ifSchema = asSchema(schema.if);\n    if (ifSchema) {\n      testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n    }\n    if (Array.isArray(schema.enum)) {\n      const val = getNodeValue3(node);\n      let enumValueMatch = false;\n      for (const e of schema.enum) {\n        if (equals(val, e)) {\n          enumValueMatch = true;\n          break;\n        }\n      }\n      validationResult.enumValues = schema.enum;\n      validationResult.enumValueMatch = enumValueMatch;\n      if (!enumValueMatch) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value is not accepted. Valid values: {0}.\", schema.enum.map((v) => JSON.stringify(v)).join(\", \"))\n        });\n      }\n    }\n    if (isDefined(schema.const)) {\n      const val = getNodeValue3(node);\n      if (!equals(val, schema.const)) {\n        validationResult.problems.push({\n          location: { offset: node.offset, length: node.length },\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || t(\"Value must be {0}.\", JSON.stringify(schema.const))\n        });\n        validationResult.enumValueMatch = false;\n      } else {\n        validationResult.enumValueMatch = true;\n      }\n      validationResult.enumValues = [schema.const];\n    }\n    let deprecationMessage = schema.deprecationMessage;\n    if (deprecationMessage || schema.deprecated) {\n      deprecationMessage = deprecationMessage || t(\"Value is deprecated\");\n      let targetNode = node.parent?.type === \"property\" ? node.parent : node;\n      validationResult.problems.push({\n        location: { offset: targetNode.offset, length: targetNode.length },\n        severity: DiagnosticSeverity.Warning,\n        message: deprecationMessage,\n        code: ErrorCode.Deprecated\n      });\n    }\n  }\n  function _validateNumberNode(node2) {\n    const val = node2.value;\n    function normalizeFloats(float) {\n      const parts = /^(-?\\d+)(?:\\.(\\d+))?(?:e([-+]\\d+))?$/.exec(float.toString());\n      return parts && {\n        value: Number(parts[1] + (parts[2] || \"\")),\n        multiplier: (parts[2]?.length || 0) - (parseInt(parts[3]) || 0)\n      };\n    }\n    ;\n    if (isNumber(schema.multipleOf)) {\n      let remainder = -1;\n      if (Number.isInteger(schema.multipleOf)) {\n        remainder = val % schema.multipleOf;\n      } else {\n        let normMultipleOf = normalizeFloats(schema.multipleOf);\n        let normValue = normalizeFloats(val);\n        if (normMultipleOf && normValue) {\n          const multiplier = 10 ** Math.abs(normValue.multiplier - normMultipleOf.multiplier);\n          if (normValue.multiplier < normMultipleOf.multiplier) {\n            normValue.value *= multiplier;\n          } else {\n            normMultipleOf.value *= multiplier;\n          }\n          remainder = normValue.value % normMultipleOf.value;\n        }\n      }\n      if (remainder !== 0) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Value is not divisible by {0}.\", schema.multipleOf)\n        });\n      }\n    }\n    function getExclusiveLimit(limit, exclusive) {\n      if (isNumber(exclusive)) {\n        return exclusive;\n      }\n      if (isBoolean(exclusive) && exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    function getLimit(limit, exclusive) {\n      if (!isBoolean(exclusive) || !exclusive) {\n        return limit;\n      }\n      return void 0;\n    }\n    const exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is below the exclusive minimum of {0}.\", exclusiveMinimum)\n      });\n    }\n    const exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is above the exclusive maximum of {0}.\", exclusiveMaximum)\n      });\n    }\n    const minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n    if (isNumber(minimum) && val < minimum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is below the minimum of {0}.\", minimum)\n      });\n    }\n    const maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n    if (isNumber(maximum) && val > maximum) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Value is above the maximum of {0}.\", maximum)\n      });\n    }\n  }\n  function _validateStringNode(node2) {\n    if (isNumber(schema.minLength) && stringLength(node2.value) < schema.minLength) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"String is shorter than the minimum length of {0}.\", schema.minLength)\n      });\n    }\n    if (isNumber(schema.maxLength) && stringLength(node2.value) > schema.maxLength) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"String is longer than the maximum length of {0}.\", schema.maxLength)\n      });\n    }\n    if (isString(schema.pattern)) {\n      const regex = extendedRegExp(schema.pattern);\n      if (!regex?.test(node2.value)) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.patternErrorMessage || schema.errorMessage || t('String does not match the pattern of \"{0}\".', schema.pattern)\n        });\n      }\n    }\n    if (schema.format) {\n      switch (schema.format) {\n        case \"uri\":\n        case \"uri-reference\":\n          {\n            let errorMessage;\n            if (!node2.value) {\n              errorMessage = t(\"URI expected.\");\n            } else {\n              const match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node2.value);\n              if (!match) {\n                errorMessage = t(\"URI is expected.\");\n              } else if (!match[2] && schema.format === \"uri\") {\n                errorMessage = t(\"URI with a scheme is expected.\");\n              }\n            }\n            if (errorMessage) {\n              validationResult.problems.push({\n                location: { offset: node2.offset, length: node2.length },\n                message: schema.patternErrorMessage || schema.errorMessage || t(\"String is not a URI: {0}\", errorMessage)\n              });\n            }\n          }\n          break;\n        case \"color-hex\":\n        case \"date-time\":\n        case \"date\":\n        case \"time\":\n        case \"email\":\n        case \"hostname\":\n        case \"ipv4\":\n        case \"ipv6\":\n          const format5 = formats[schema.format];\n          if (!node2.value || !format5.pattern.exec(node2.value)) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: schema.patternErrorMessage || schema.errorMessage || format5.errorMessage\n            });\n          }\n        default:\n      }\n    }\n  }\n  function _validateArrayNode(node2) {\n    let prefixItemsSchemas;\n    let additionalItemSchema;\n    if (context.schemaDraft >= SchemaDraft.v2020_12) {\n      prefixItemsSchemas = schema.prefixItems;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : void 0;\n    } else {\n      prefixItemsSchemas = Array.isArray(schema.items) ? schema.items : void 0;\n      additionalItemSchema = !Array.isArray(schema.items) ? schema.items : schema.additionalItems;\n    }\n    let index = 0;\n    if (prefixItemsSchemas !== void 0) {\n      const max = Math.min(prefixItemsSchemas.length, node2.items.length);\n      for (; index < max; index++) {\n        const subSchemaRef = prefixItemsSchemas[index];\n        const subSchema = asSchema(subSchemaRef);\n        const itemValidationResult = new ValidationResult();\n        const item = node2.items[index];\n        if (item) {\n          validate(item, subSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        }\n        validationResult.processedProperties.add(String(index));\n      }\n    }\n    if (additionalItemSchema !== void 0 && index < node2.items.length) {\n      if (typeof additionalItemSchema === \"boolean\") {\n        if (additionalItemSchema === false) {\n          validationResult.problems.push({\n            location: { offset: node2.offset, length: node2.length },\n            message: t(\"Array has too many items according to schema. Expected {0} or fewer.\", index)\n          });\n        }\n        for (; index < node2.items.length; index++) {\n          validationResult.processedProperties.add(String(index));\n          validationResult.propertiesValueMatches++;\n        }\n      } else {\n        for (; index < node2.items.length; index++) {\n          const itemValidationResult = new ValidationResult();\n          validate(node2.items[index], additionalItemSchema, itemValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(itemValidationResult);\n          validationResult.processedProperties.add(String(index));\n        }\n      }\n    }\n    const containsSchema = asSchema(schema.contains);\n    if (containsSchema) {\n      let containsCount = 0;\n      for (let index2 = 0; index2 < node2.items.length; index2++) {\n        const item = node2.items[index2];\n        const itemValidationResult = new ValidationResult();\n        validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance, context);\n        if (!itemValidationResult.hasProblems()) {\n          containsCount++;\n          if (context.schemaDraft >= SchemaDraft.v2020_12) {\n            validationResult.processedProperties.add(String(index2));\n          }\n        }\n      }\n      if (containsCount === 0 && !isNumber(schema.minContains)) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array does not contain required item.\")\n        });\n      }\n      if (isNumber(schema.minContains) && containsCount < schema.minContains) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array has too few items that match the contains contraint. Expected {0} or more.\", schema.minContains)\n        });\n      }\n      if (isNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: schema.errorMessage || t(\"Array has too many items that match the contains contraint. Expected {0} or less.\", schema.maxContains)\n        });\n      }\n    }\n    const unevaluatedItems = schema.unevaluatedItems;\n    if (unevaluatedItems !== void 0) {\n      for (let i = 0; i < node2.items.length; i++) {\n        if (!validationResult.processedProperties.has(String(i))) {\n          if (unevaluatedItems === false) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: t(\"Item does not match any validation rule from the array.\")\n            });\n          } else {\n            const itemValidationResult = new ValidationResult();\n            validate(node2.items[i], schema.unevaluatedItems, itemValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(itemValidationResult);\n          }\n        }\n        validationResult.processedProperties.add(String(i));\n        validationResult.propertiesValueMatches++;\n      }\n    }\n    if (isNumber(schema.minItems) && node2.items.length < schema.minItems) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Array has too few items. Expected {0} or more.\", schema.minItems)\n      });\n    }\n    if (isNumber(schema.maxItems) && node2.items.length > schema.maxItems) {\n      validationResult.problems.push({\n        location: { offset: node2.offset, length: node2.length },\n        message: t(\"Array has too many items. Expected {0} or fewer.\", schema.maxItems)\n      });\n    }\n    if (schema.uniqueItems === true) {\n      let hasDuplicates = function() {\n        for (let i = 0; i < values.length - 1; i++) {\n          const value = values[i];\n          for (let j = i + 1; j < values.length; j++) {\n            if (equals(value, values[j])) {\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n      const values = getNodeValue3(node2);\n      if (hasDuplicates()) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Array has duplicate items.\")\n        });\n      }\n    }\n  }\n  function _validateObjectNode(node2) {\n    const seenKeys = /* @__PURE__ */ Object.create(null);\n    const unprocessedProperties = /* @__PURE__ */ new Set();\n    for (const propertyNode of node2.properties) {\n      const key = propertyNode.keyNode.value;\n      seenKeys[key] = propertyNode.valueNode;\n      unprocessedProperties.add(key);\n    }\n    if (Array.isArray(schema.required)) {\n      for (const propertyName of schema.required) {\n        if (!seenKeys[propertyName]) {\n          const keyNode = node2.parent && node2.parent.type === \"property\" && node2.parent.keyNode;\n          const location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node2.offset, length: 1 };\n          validationResult.problems.push({\n            location,\n            message: t('Missing property \"{0}\".', propertyName)\n          });\n        }\n      }\n    }\n    const propertyProcessed = (prop) => {\n      unprocessedProperties.delete(prop);\n      validationResult.processedProperties.add(prop);\n    };\n    if (schema.properties) {\n      for (const propertyName of Object.keys(schema.properties)) {\n        propertyProcessed(propertyName);\n        const propertySchema = schema.properties[propertyName];\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (isBoolean(propertySchema)) {\n            if (!propertySchema) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else {\n              validationResult.propertiesMatches++;\n              validationResult.propertiesValueMatches++;\n            }\n          } else {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    if (schema.patternProperties) {\n      for (const propertyPattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(propertyPattern);\n        if (regex) {\n          const processed = [];\n          for (const propertyName of unprocessedProperties) {\n            if (regex.test(propertyName)) {\n              processed.push(propertyName);\n              const child = seenKeys[propertyName];\n              if (child) {\n                const propertySchema = schema.patternProperties[propertyPattern];\n                if (isBoolean(propertySchema)) {\n                  if (!propertySchema) {\n                    const propertyNode = child.parent;\n                    validationResult.problems.push({\n                      location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                      message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n                    });\n                  } else {\n                    validationResult.propertiesMatches++;\n                    validationResult.propertiesValueMatches++;\n                  }\n                } else {\n                  const propertyValidationResult = new ValidationResult();\n                  validate(child, propertySchema, propertyValidationResult, matchingSchemas, context);\n                  validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n              }\n            }\n          }\n          processed.forEach(propertyProcessed);\n        }\n      }\n    }\n    const additionalProperties = schema.additionalProperties;\n    if (additionalProperties !== void 0) {\n      for (const propertyName of unprocessedProperties) {\n        propertyProcessed(propertyName);\n        const child = seenKeys[propertyName];\n        if (child) {\n          if (additionalProperties === false) {\n            const propertyNode = child.parent;\n            validationResult.problems.push({\n              location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n              message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n            });\n          } else if (additionalProperties !== true) {\n            const propertyValidationResult = new ValidationResult();\n            validate(child, additionalProperties, propertyValidationResult, matchingSchemas, context);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    if (unevaluatedProperties !== void 0) {\n      const processed = [];\n      for (const propertyName of unprocessedProperties) {\n        if (!validationResult.processedProperties.has(propertyName)) {\n          processed.push(propertyName);\n          const child = seenKeys[propertyName];\n          if (child) {\n            if (unevaluatedProperties === false) {\n              const propertyNode = child.parent;\n              validationResult.problems.push({\n                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                message: schema.errorMessage || t(\"Property {0} is not allowed.\", propertyName)\n              });\n            } else if (unevaluatedProperties !== true) {\n              const propertyValidationResult = new ValidationResult();\n              validate(child, unevaluatedProperties, propertyValidationResult, matchingSchemas, context);\n              validationResult.mergePropertyMatch(propertyValidationResult);\n            }\n          }\n        }\n      }\n      processed.forEach(propertyProcessed);\n    }\n    if (isNumber(schema.maxProperties)) {\n      if (node2.properties.length > schema.maxProperties) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Object has more properties than limit of {0}.\", schema.maxProperties)\n        });\n      }\n    }\n    if (isNumber(schema.minProperties)) {\n      if (node2.properties.length < schema.minProperties) {\n        validationResult.problems.push({\n          location: { offset: node2.offset, length: node2.length },\n          message: t(\"Object has fewer properties than the required number of {0}\", schema.minProperties)\n        });\n      }\n    }\n    if (schema.dependentRequired) {\n      for (const key in schema.dependentRequired) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentRequired[key];\n        if (prop && Array.isArray(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependentSchemas) {\n      for (const key in schema.dependentSchemas) {\n        const prop = seenKeys[key];\n        const propertyDeps = schema.dependentSchemas[key];\n        if (prop && isObject(propertyDeps)) {\n          _validatePropertyDependencies(key, propertyDeps);\n        }\n      }\n    }\n    if (schema.dependencies) {\n      for (const key in schema.dependencies) {\n        const prop = seenKeys[key];\n        if (prop) {\n          _validatePropertyDependencies(key, schema.dependencies[key]);\n        }\n      }\n    }\n    const propertyNames = asSchema(schema.propertyNames);\n    if (propertyNames) {\n      for (const f2 of node2.properties) {\n        const key = f2.keyNode;\n        if (key) {\n          validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance, context);\n        }\n      }\n    }\n    function _validatePropertyDependencies(key, propertyDep) {\n      if (Array.isArray(propertyDep)) {\n        for (const requiredProp of propertyDep) {\n          if (!seenKeys[requiredProp]) {\n            validationResult.problems.push({\n              location: { offset: node2.offset, length: node2.length },\n              message: t(\"Object is missing property {0} required by property {1}.\", requiredProp, key)\n            });\n          } else {\n            validationResult.propertiesValueMatches++;\n          }\n        }\n      } else {\n        const propertySchema = asSchema(propertyDep);\n        if (propertySchema) {\n          const propertyValidationResult = new ValidationResult();\n          validate(node2, propertySchema, propertyValidationResult, matchingSchemas, context);\n          validationResult.mergePropertyMatch(propertyValidationResult);\n        }\n      }\n    }\n  }\n}\nfunction parse3(textDocument, config) {\n  const problems = [];\n  let lastProblemOffset = -1;\n  const text = textDocument.getText();\n  const scanner = createScanner2(text, false);\n  const commentRanges = config && config.collectComments ? [] : void 0;\n  function _scanNext() {\n    while (true) {\n      const token2 = scanner.scan();\n      _checkScanError();\n      switch (token2) {\n        case 12:\n        case 13:\n          if (Array.isArray(commentRanges)) {\n            commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n          }\n          break;\n        case 15:\n        case 14:\n          break;\n        default:\n          return token2;\n      }\n    }\n  }\n  function _accept(token2) {\n    if (scanner.getToken() === token2) {\n      _scanNext();\n      return true;\n    }\n    return false;\n  }\n  function _errorAtRange(message, code, startOffset, endOffset, severity = DiagnosticSeverity.Error) {\n    if (problems.length === 0 || startOffset !== lastProblemOffset) {\n      const range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n      problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n      lastProblemOffset = startOffset;\n    }\n  }\n  function _error(message, code, node = void 0, skipUntilAfter = [], skipUntil = []) {\n    let start = scanner.getTokenOffset();\n    let end = scanner.getTokenOffset() + scanner.getTokenLength();\n    if (start === end && start > 0) {\n      start--;\n      while (start > 0 && /\\s/.test(text.charAt(start))) {\n        start--;\n      }\n      end = start + 1;\n    }\n    _errorAtRange(message, code, start, end);\n    if (node) {\n      _finalize(node, false);\n    }\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      let token2 = scanner.getToken();\n      while (token2 !== 17) {\n        if (skipUntilAfter.indexOf(token2) !== -1) {\n          _scanNext();\n          break;\n        } else if (skipUntil.indexOf(token2) !== -1) {\n          break;\n        }\n        token2 = _scanNext();\n      }\n    }\n    return node;\n  }\n  function _checkScanError() {\n    switch (scanner.getTokenError()) {\n      case 4:\n        _error(t(\"Invalid unicode sequence in string.\"), ErrorCode.InvalidUnicode);\n        return true;\n      case 5:\n        _error(t(\"Invalid escape character in string.\"), ErrorCode.InvalidEscapeCharacter);\n        return true;\n      case 3:\n        _error(t(\"Unexpected end of number.\"), ErrorCode.UnexpectedEndOfNumber);\n        return true;\n      case 1:\n        _error(t(\"Unexpected end of comment.\"), ErrorCode.UnexpectedEndOfComment);\n        return true;\n      case 2:\n        _error(t(\"Unexpected end of string.\"), ErrorCode.UnexpectedEndOfString);\n        return true;\n      case 6:\n        _error(t(\"Invalid characters in string. Control characters must be escaped.\"), ErrorCode.InvalidCharacter);\n        return true;\n    }\n    return false;\n  }\n  function _finalize(node, scanNext) {\n    node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n    if (scanNext) {\n      _scanNext();\n    }\n    return node;\n  }\n  function _parseArray(parent) {\n    if (scanner.getToken() !== 3) {\n      return void 0;\n    }\n    const node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n    _scanNext();\n    const count = 0;\n    let needsComma = false;\n    while (scanner.getToken() !== 4 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Value expected\"), ErrorCode.ValueExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 4) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const item = _parseValue(node);\n      if (!item) {\n        _error(t(\"Value expected\"), ErrorCode.ValueExpected, void 0, [], [\n          4,\n          5\n          /* Json.SyntaxKind.CommaToken */\n        ]);\n      } else {\n        node.items.push(item);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 4) {\n      return _error(t(\"Expected comma or closing bracket\"), ErrorCode.CommaOrCloseBacketExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  const keyPlaceholder = new StringASTNodeImpl(void 0, 0, 0);\n  function _parseProperty(parent, keysSeen) {\n    const node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset(), keyPlaceholder);\n    let key = _parseString(node);\n    if (!key) {\n      if (scanner.getToken() === 16) {\n        _error(t(\"Property keys must be doublequoted\"), ErrorCode.PropertyKeysMustBeDoublequoted);\n        const keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n        keyNode.value = scanner.getTokenValue();\n        key = keyNode;\n        _scanNext();\n      } else {\n        return void 0;\n      }\n    }\n    node.keyNode = key;\n    if (key.value !== \"//\") {\n      const seen = keysSeen[key.value];\n      if (seen) {\n        _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n        if (isObject(seen)) {\n          _errorAtRange(t(\"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n        }\n        keysSeen[key.value] = true;\n      } else {\n        keysSeen[key.value] = node;\n      }\n    }\n    if (scanner.getToken() === 6) {\n      node.colonOffset = scanner.getTokenOffset();\n      _scanNext();\n    } else {\n      _error(t(\"Colon expected\"), ErrorCode.ColonExpected);\n      if (scanner.getToken() === 10 && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n        node.length = key.length;\n        return node;\n      }\n    }\n    const value = _parseValue(node);\n    if (!value) {\n      return _error(t(\"Value expected\"), ErrorCode.ValueExpected, node, [], [\n        2,\n        5\n        /* Json.SyntaxKind.CommaToken */\n      ]);\n    }\n    node.valueNode = value;\n    node.length = value.offset + value.length - node.offset;\n    return node;\n  }\n  function _parseObject(parent) {\n    if (scanner.getToken() !== 1) {\n      return void 0;\n    }\n    const node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n    const keysSeen = /* @__PURE__ */ Object.create(null);\n    _scanNext();\n    let needsComma = false;\n    while (scanner.getToken() !== 2 && scanner.getToken() !== 17) {\n      if (scanner.getToken() === 5) {\n        if (!needsComma) {\n          _error(t(\"Property expected\"), ErrorCode.PropertyExpected);\n        }\n        const commaOffset = scanner.getTokenOffset();\n        _scanNext();\n        if (scanner.getToken() === 2) {\n          if (needsComma) {\n            _errorAtRange(t(\"Trailing comma\"), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n          }\n          continue;\n        }\n      } else if (needsComma) {\n        _error(t(\"Expected comma\"), ErrorCode.CommaExpected);\n      }\n      const property = _parseProperty(node, keysSeen);\n      if (!property) {\n        _error(t(\"Property expected\"), ErrorCode.PropertyExpected, void 0, [], [\n          2,\n          5\n          /* Json.SyntaxKind.CommaToken */\n        ]);\n      } else {\n        node.properties.push(property);\n      }\n      needsComma = true;\n    }\n    if (scanner.getToken() !== 2) {\n      return _error(t(\"Expected comma or closing brace\"), ErrorCode.CommaOrCloseBraceExpected, node);\n    }\n    return _finalize(node, true);\n  }\n  function _parseString(parent) {\n    if (scanner.getToken() !== 10) {\n      return void 0;\n    }\n    const node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n    node.value = scanner.getTokenValue();\n    return _finalize(node, true);\n  }\n  function _parseNumber(parent) {\n    if (scanner.getToken() !== 11) {\n      return void 0;\n    }\n    const node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n    if (scanner.getTokenError() === 0) {\n      const tokenValue = scanner.getTokenValue();\n      try {\n        const numberValue = JSON.parse(tokenValue);\n        if (!isNumber(numberValue)) {\n          return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n        }\n        node.value = numberValue;\n      } catch (e) {\n        return _error(t(\"Invalid number format.\"), ErrorCode.Undefined, node);\n      }\n      node.isInteger = tokenValue.indexOf(\".\") === -1;\n    }\n    return _finalize(node, true);\n  }\n  function _parseLiteral(parent) {\n    let node;\n    switch (scanner.getToken()) {\n      case 7:\n        return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n      case 8:\n        return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n      case 9:\n        return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n      default:\n        return void 0;\n    }\n  }\n  function _parseValue(parent) {\n    return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n  }\n  let _root = void 0;\n  const token = _scanNext();\n  if (token !== 17) {\n    _root = _parseValue(_root);\n    if (!_root) {\n      _error(t(\"Expected a JSON object, array or literal.\"), ErrorCode.Undefined);\n    } else if (scanner.getToken() !== 17) {\n      _error(t(\"End of file expected.\"), ErrorCode.Undefined);\n    }\n  }\n  return new JSONDocument(_root, problems, commentRanges);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/json.js\nfunction stringifyObject(obj, indent, stringifyLiteral) {\n  if (obj !== null && typeof obj === \"object\") {\n    const newIndent = indent + \"\t\";\n    if (Array.isArray(obj)) {\n      if (obj.length === 0) {\n        return \"[]\";\n      }\n      let result = \"[\\n\";\n      for (let i = 0; i < obj.length; i++) {\n        result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n        if (i < obj.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"]\";\n      return result;\n    } else {\n      const keys = Object.keys(obj);\n      if (keys.length === 0) {\n        return \"{}\";\n      }\n      let result = \"{\\n\";\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        result += newIndent + JSON.stringify(key) + \": \" + stringifyObject(obj[key], newIndent, stringifyLiteral);\n        if (i < keys.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      }\n      result += indent + \"}\";\n      return result;\n    }\n  }\n  return stringifyLiteral(obj);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonCompletion.js\nvar valueCommitCharacters = [\",\", \"}\", \"]\"];\nvar propertyCommitCharacters = [\":\"];\nvar JSONCompletion = class {\n  constructor(schemaService, contributions = [], promiseConstructor = Promise, clientCapabilities = {}) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promiseConstructor = promiseConstructor;\n    this.clientCapabilities = clientCapabilities;\n  }\n  doResolve(item) {\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const resolveCompletion = this.contributions[i].resolveCompletion;\n      if (resolveCompletion) {\n        const resolver = resolveCompletion(item);\n        if (resolver) {\n          return resolver;\n        }\n      }\n    }\n    return this.promiseConstructor.resolve(item);\n  }\n  doComplete(document, position, doc) {\n    const result = {\n      items: [],\n      isIncomplete: false\n    };\n    const text = document.getText();\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    if (this.isInComment(document, node ? node.offset : 0, offset)) {\n      return Promise.resolve(result);\n    }\n    if (node && offset === node.offset + node.length && offset > 0) {\n      const ch = text[offset - 1];\n      if (node.type === \"object\" && ch === \"}\" || node.type === \"array\" && ch === \"]\") {\n        node = node.parent;\n      }\n    }\n    const currentWord = this.getCurrentWord(document, offset);\n    let overwriteRange;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      overwriteRange = Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n    } else {\n      let overwriteStart = offset - currentWord.length;\n      if (overwriteStart > 0 && text[overwriteStart - 1] === '\"') {\n        overwriteStart--;\n      }\n      overwriteRange = Range.create(document.positionAt(overwriteStart), position);\n    }\n    const supportsCommitCharacters = false;\n    const proposed = /* @__PURE__ */ new Map();\n    const collector = {\n      add: (suggestion) => {\n        let label = suggestion.label;\n        const existing = proposed.get(label);\n        if (!existing) {\n          label = label.replace(/[\\n]/g, \"\\u21B5\");\n          if (label.length > 60) {\n            const shortendedLabel = label.substr(0, 57).trim() + \"...\";\n            if (!proposed.has(shortendedLabel)) {\n              label = shortendedLabel;\n            }\n          }\n          suggestion.textEdit = TextEdit.replace(overwriteRange, suggestion.insertText);\n          if (supportsCommitCharacters) {\n            suggestion.commitCharacters = suggestion.kind === CompletionItemKind.Property ? propertyCommitCharacters : valueCommitCharacters;\n          }\n          suggestion.label = label;\n          proposed.set(label, suggestion);\n          result.items.push(suggestion);\n        } else {\n          if (!existing.documentation) {\n            existing.documentation = suggestion.documentation;\n          }\n          if (!existing.detail) {\n            existing.detail = suggestion.detail;\n          }\n          if (!existing.labelDetails) {\n            existing.labelDetails = suggestion.labelDetails;\n          }\n        }\n      },\n      setAsIncomplete: () => {\n        result.isIncomplete = true;\n      },\n      error: (message) => {\n        console.error(message);\n      },\n      getNumberOfProposals: () => {\n        return result.items.length;\n      }\n    };\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      const collectionPromises = [];\n      let addValue = true;\n      let currentKey = \"\";\n      let currentProperty = void 0;\n      if (node) {\n        if (node.type === \"string\") {\n          const parent = node.parent;\n          if (parent && parent.type === \"property\" && parent.keyNode === node) {\n            addValue = !parent.valueNode;\n            currentProperty = parent;\n            currentKey = text.substr(node.offset + 1, node.length - 2);\n            if (parent) {\n              node = parent.parent;\n            }\n          }\n        }\n      }\n      if (node && node.type === \"object\") {\n        if (node.offset === offset) {\n          return result;\n        }\n        const properties = node.properties;\n        properties.forEach((p) => {\n          if (!currentProperty || currentProperty !== p) {\n            proposed.set(p.keyNode.value, CompletionItem.create(\"__\"));\n          }\n        });\n        let separatorAfter = \"\";\n        if (addValue) {\n          separatorAfter = this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n        }\n        if (schema) {\n          this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector);\n        } else {\n          this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n        }\n        const location = getNodePath3(node);\n        this.contributions.forEach((contribution) => {\n          const collectPromise = contribution.collectPropertyCompletions(document.uri, location, currentWord, addValue, separatorAfter === \"\", collector);\n          if (collectPromise) {\n            collectionPromises.push(collectPromise);\n          }\n        });\n        if (!schema && currentWord.length > 0 && text.charAt(offset - currentWord.length - 1) !== '\"') {\n          collector.add({\n            kind: CompletionItemKind.Property,\n            label: this.getLabelForValue(currentWord),\n            insertText: this.getInsertTextForProperty(currentWord, void 0, false, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: \"\"\n          });\n          collector.setAsIncomplete();\n        }\n      }\n      const types = {};\n      if (schema) {\n        this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n      } else {\n        this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n      }\n      if (this.contributions.length > 0) {\n        this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n      }\n      return this.promiseConstructor.all(collectionPromises).then(() => {\n        if (collector.getNumberOfProposals() === 0) {\n          let offsetForSeparator = offset;\n          if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n            offsetForSeparator = node.offset + node.length;\n          }\n          const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n          this.addFillerValueCompletions(types, separatorAfter, collector);\n        }\n        return result;\n      });\n    });\n  }\n  getPropertyCompletions(schema, doc, node, addValue, separatorAfter, collector) {\n    const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n    matchingSchemas.forEach((s) => {\n      if (s.node === node && !s.inverted) {\n        const schemaProperties = s.schema.properties;\n        if (schemaProperties) {\n          Object.keys(schemaProperties).forEach((key) => {\n            const propertySchema = schemaProperties[key];\n            if (typeof propertySchema === \"object\" && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n              const proposal = {\n                kind: CompletionItemKind.Property,\n                label: key,\n                insertText: this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                filterText: this.getFilterTextForValue(key),\n                documentation: this.fromMarkup(propertySchema.markdownDescription) || propertySchema.description || \"\"\n              };\n              if (propertySchema.suggestSortText !== void 0) {\n                proposal.sortText = propertySchema.suggestSortText;\n              }\n              if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n                proposal.command = {\n                  title: \"Suggest\",\n                  command: \"editor.action.triggerSuggest\"\n                };\n              }\n              collector.add(proposal);\n            }\n          });\n        }\n        const schemaPropertyNames = s.schema.propertyNames;\n        if (typeof schemaPropertyNames === \"object\" && !schemaPropertyNames.deprecationMessage && !schemaPropertyNames.doNotSuggest) {\n          const propertyNameCompletionItem = (name, enumDescription = void 0) => {\n            const proposal = {\n              kind: CompletionItemKind.Property,\n              label: name,\n              insertText: this.getInsertTextForProperty(name, void 0, addValue, separatorAfter),\n              insertTextFormat: InsertTextFormat.Snippet,\n              filterText: this.getFilterTextForValue(name),\n              documentation: enumDescription || this.fromMarkup(schemaPropertyNames.markdownDescription) || schemaPropertyNames.description || \"\"\n            };\n            if (schemaPropertyNames.suggestSortText !== void 0) {\n              proposal.sortText = schemaPropertyNames.suggestSortText;\n            }\n            if (proposal.insertText && endsWith(proposal.insertText, `$1${separatorAfter}`)) {\n              proposal.command = {\n                title: \"Suggest\",\n                command: \"editor.action.triggerSuggest\"\n              };\n            }\n            collector.add(proposal);\n          };\n          if (schemaPropertyNames.enum) {\n            for (let i = 0; i < schemaPropertyNames.enum.length; i++) {\n              let enumDescription = void 0;\n              if (schemaPropertyNames.markdownEnumDescriptions && i < schemaPropertyNames.markdownEnumDescriptions.length) {\n                enumDescription = this.fromMarkup(schemaPropertyNames.markdownEnumDescriptions[i]);\n              } else if (schemaPropertyNames.enumDescriptions && i < schemaPropertyNames.enumDescriptions.length) {\n                enumDescription = schemaPropertyNames.enumDescriptions[i];\n              }\n              propertyNameCompletionItem(schemaPropertyNames.enum[i], enumDescription);\n            }\n          }\n          if (schemaPropertyNames.const) {\n            propertyNameCompletionItem(schemaPropertyNames.const);\n          }\n        }\n      }\n    });\n  }\n  getSchemaLessPropertyCompletions(doc, node, currentKey, collector) {\n    const collectCompletionsForSimilarObject = (obj) => {\n      obj.properties.forEach((p) => {\n        const key = p.keyNode.value;\n        collector.add({\n          kind: CompletionItemKind.Property,\n          label: key,\n          insertText: this.getInsertTextForValue(key, \"\"),\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText: this.getFilterTextForValue(key),\n          documentation: \"\"\n        });\n      });\n    };\n    if (node.parent) {\n      if (node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n !== node.parent && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"object\") {\n            collectCompletionsForSimilarObject(n.valueNode);\n          }\n          return true;\n        });\n      } else if (node.parent.type === \"array\") {\n        node.parent.items.forEach((n) => {\n          if (n.type === \"object\" && n !== node) {\n            collectCompletionsForSimilarObject(n);\n          }\n        });\n      }\n    } else if (node.type === \"object\") {\n      collector.add({\n        kind: CompletionItemKind.Property,\n        label: \"$schema\",\n        insertText: this.getInsertTextForProperty(\"$schema\", void 0, true, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\",\n        filterText: this.getFilterTextForValue(\"$schema\")\n      });\n    }\n  }\n  getSchemaLessValueCompletions(doc, node, offset, document, collector) {\n    let offsetForSeparator = offset;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      node = node.parent;\n    }\n    if (!node) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"Empty object\",\n        insertText: this.getInsertTextForValue({}, \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"Empty array\",\n        insertText: this.getInsertTextForValue([], \"\"),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n      return;\n    }\n    const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n    const collectSuggestionsForValues = (value) => {\n      if (value.parent && !contains2(value.parent, offset, true)) {\n        collector.add({\n          kind: this.getSuggestionKind(value.type),\n          label: this.getLabelTextForMatchingNode(value, document),\n          insertText: this.getInsertTextForMatchingNode(value, document, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation: \"\"\n        });\n      }\n      if (value.type === \"boolean\") {\n        this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n      }\n    };\n    if (node.type === \"property\") {\n      if (offset > (node.colonOffset || 0)) {\n        const valueNode = node.valueNode;\n        if (valueNode && (offset > valueNode.offset + valueNode.length || valueNode.type === \"object\" || valueNode.type === \"array\")) {\n          return;\n        }\n        const parentKey = node.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode) {\n            collectSuggestionsForValues(n.valueNode);\n          }\n          return true;\n        });\n        if (parentKey === \"$schema\" && node.parent && !node.parent.parent) {\n          this.addDollarSchemaCompletions(separatorAfter, collector);\n        }\n      }\n    }\n    if (node.type === \"array\") {\n      if (node.parent && node.parent.type === \"property\") {\n        const parentKey = node.parent.keyNode.value;\n        doc.visit((n) => {\n          if (n.type === \"property\" && n.keyNode.value === parentKey && n.valueNode && n.valueNode.type === \"array\") {\n            n.valueNode.items.forEach(collectSuggestionsForValues);\n          }\n          return true;\n        });\n      } else {\n        node.items.forEach(collectSuggestionsForValues);\n      }\n    }\n  }\n  getValueCompletions(schema, doc, node, offset, document, collector, types) {\n    let offsetForSeparator = offset;\n    let parentKey = void 0;\n    let valueNode = void 0;\n    if (node && (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\")) {\n      offsetForSeparator = node.offset + node.length;\n      valueNode = node;\n      node = node.parent;\n    }\n    if (!node) {\n      this.addSchemaValueCompletions(schema.schema, \"\", collector, types);\n      return;\n    }\n    if (node.type === \"property\" && offset > (node.colonOffset || 0)) {\n      const valueNode2 = node.valueNode;\n      if (valueNode2 && offset > valueNode2.offset + valueNode2.length) {\n        return;\n      }\n      parentKey = node.keyNode.value;\n      node = node.parent;\n    }\n    if (node && (parentKey !== void 0 || node.type === \"array\")) {\n      const separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n      const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n      for (const s of matchingSchemas) {\n        if (s.node === node && !s.inverted && s.schema) {\n          if (node.type === \"array\" && s.schema.items) {\n            let c = collector;\n            if (s.schema.uniqueItems) {\n              const existingValues = /* @__PURE__ */ new Set();\n              node.children.forEach((n) => {\n                if (n.type !== \"array\" && n.type !== \"object\") {\n                  existingValues.add(this.getLabelForValue(getNodeValue3(n)));\n                }\n              });\n              c = {\n                ...collector,\n                add(suggestion) {\n                  if (!existingValues.has(suggestion.label)) {\n                    collector.add(suggestion);\n                  }\n                }\n              };\n            }\n            if (Array.isArray(s.schema.items)) {\n              const index = this.findItemAtOffset(node, document, offset);\n              if (index < s.schema.items.length) {\n                this.addSchemaValueCompletions(s.schema.items[index], separatorAfter, c, types);\n              }\n            } else {\n              this.addSchemaValueCompletions(s.schema.items, separatorAfter, c, types);\n            }\n          }\n          if (parentKey !== void 0) {\n            let propertyMatched = false;\n            if (s.schema.properties) {\n              const propertySchema = s.schema.properties[parentKey];\n              if (propertySchema) {\n                propertyMatched = true;\n                this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n              }\n            }\n            if (s.schema.patternProperties && !propertyMatched) {\n              for (const pattern of Object.keys(s.schema.patternProperties)) {\n                const regex = extendedRegExp(pattern);\n                if (regex?.test(parentKey)) {\n                  propertyMatched = true;\n                  const propertySchema = s.schema.patternProperties[pattern];\n                  this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n                }\n              }\n            }\n            if (s.schema.additionalProperties && !propertyMatched) {\n              const propertySchema = s.schema.additionalProperties;\n              this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n            }\n          }\n        }\n      }\n      if (parentKey === \"$schema\" && !node.parent) {\n        this.addDollarSchemaCompletions(separatorAfter, collector);\n      }\n      if (types[\"boolean\"]) {\n        this.addBooleanValueCompletion(true, separatorAfter, collector);\n        this.addBooleanValueCompletion(false, separatorAfter, collector);\n      }\n      if (types[\"null\"]) {\n        this.addNullValueCompletion(separatorAfter, collector);\n      }\n    }\n  }\n  getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises) {\n    if (!node) {\n      this.contributions.forEach((contribution) => {\n        const collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n        if (collectPromise) {\n          collectionPromises.push(collectPromise);\n        }\n      });\n    } else {\n      if (node.type === \"string\" || node.type === \"number\" || node.type === \"boolean\" || node.type === \"null\") {\n        node = node.parent;\n      }\n      if (node && node.type === \"property\" && offset > (node.colonOffset || 0)) {\n        const parentKey = node.keyNode.value;\n        const valueNode = node.valueNode;\n        if ((!valueNode || offset <= valueNode.offset + valueNode.length) && node.parent) {\n          const location = getNodePath3(node.parent);\n          this.contributions.forEach((contribution) => {\n            const collectPromise = contribution.collectValueCompletions(document.uri, location, parentKey, collector);\n            if (collectPromise) {\n              collectionPromises.push(collectPromise);\n            }\n          });\n        }\n      }\n    }\n  }\n  addSchemaValueCompletions(schema, separatorAfter, collector, types) {\n    if (typeof schema === \"object\") {\n      this.addEnumValueCompletions(schema, separatorAfter, collector);\n      this.addDefaultValueCompletions(schema, separatorAfter, collector);\n      this.collectTypes(schema, types);\n      if (Array.isArray(schema.allOf)) {\n        schema.allOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.anyOf)) {\n        schema.anyOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n      if (Array.isArray(schema.oneOf)) {\n        schema.oneOf.forEach((s) => this.addSchemaValueCompletions(s, separatorAfter, collector, types));\n      }\n    }\n  }\n  addDefaultValueCompletions(schema, separatorAfter, collector, arrayDepth = 0) {\n    let hasProposals = false;\n    if (isDefined(schema.default)) {\n      let type = schema.type;\n      let value = schema.default;\n      for (let i = arrayDepth; i > 0; i--) {\n        value = [value];\n        type = \"array\";\n      }\n      const completionItem = {\n        kind: this.getSuggestionKind(type),\n        label: this.getLabelForValue(value),\n        insertText: this.getInsertTextForValue(value, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet\n      };\n      if (this.doesSupportsLabelDetails()) {\n        completionItem.labelDetails = { description: t(\"Default value\") };\n      } else {\n        completionItem.detail = t(\"Default value\");\n      }\n      collector.add(completionItem);\n      hasProposals = true;\n    }\n    if (Array.isArray(schema.examples)) {\n      schema.examples.forEach((example) => {\n        let type = schema.type;\n        let value = example;\n        for (let i = arrayDepth; i > 0; i--) {\n          value = [value];\n          type = \"array\";\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label: this.getLabelForValue(value),\n          insertText: this.getInsertTextForValue(value, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet\n        });\n        hasProposals = true;\n      });\n    }\n    if (Array.isArray(schema.defaultSnippets)) {\n      schema.defaultSnippets.forEach((s) => {\n        let type = schema.type;\n        let value = s.body;\n        let label = s.label;\n        let insertText;\n        let filterText;\n        if (isDefined(value)) {\n          let type2 = schema.type;\n          for (let i = arrayDepth; i > 0; i--) {\n            value = [value];\n            type2 = \"array\";\n          }\n          insertText = this.getInsertTextForSnippetValue(value, separatorAfter);\n          filterText = this.getFilterTextForSnippetValue(value);\n          label = label || this.getLabelForSnippetValue(value);\n        } else if (typeof s.bodyText === \"string\") {\n          let prefix = \"\", suffix = \"\", indent = \"\";\n          for (let i = arrayDepth; i > 0; i--) {\n            prefix = prefix + indent + \"[\\n\";\n            suffix = suffix + \"\\n\" + indent + \"]\";\n            indent += \"\t\";\n            type = \"array\";\n          }\n          insertText = prefix + indent + s.bodyText.split(\"\\n\").join(\"\\n\" + indent) + suffix + separatorAfter;\n          label = label || insertText, filterText = insertText.replace(/[\\n]/g, \"\");\n        } else {\n          return;\n        }\n        collector.add({\n          kind: this.getSuggestionKind(type),\n          label,\n          documentation: this.fromMarkup(s.markdownDescription) || s.description,\n          insertText,\n          insertTextFormat: InsertTextFormat.Snippet,\n          filterText\n        });\n        hasProposals = true;\n      });\n    }\n    if (!hasProposals && typeof schema.items === \"object\" && !Array.isArray(schema.items) && arrayDepth < 5) {\n      this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n    }\n  }\n  addEnumValueCompletions(schema, separatorAfter, collector) {\n    if (isDefined(schema.const)) {\n      collector.add({\n        kind: this.getSuggestionKind(schema.type),\n        label: this.getLabelForValue(schema.const),\n        insertText: this.getInsertTextForValue(schema.const, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: this.fromMarkup(schema.markdownDescription) || schema.description\n      });\n    }\n    if (Array.isArray(schema.enum)) {\n      for (let i = 0, length = schema.enum.length; i < length; i++) {\n        const enm = schema.enum[i];\n        let documentation = this.fromMarkup(schema.markdownDescription) || schema.description;\n        if (schema.markdownEnumDescriptions && i < schema.markdownEnumDescriptions.length && this.doesSupportMarkdown()) {\n          documentation = this.fromMarkup(schema.markdownEnumDescriptions[i]);\n        } else if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n          documentation = schema.enumDescriptions[i];\n        }\n        collector.add({\n          kind: this.getSuggestionKind(schema.type),\n          label: this.getLabelForValue(enm),\n          insertText: this.getInsertTextForValue(enm, separatorAfter),\n          insertTextFormat: InsertTextFormat.Snippet,\n          documentation\n        });\n      }\n    }\n  }\n  collectTypes(schema, types) {\n    if (Array.isArray(schema.enum) || isDefined(schema.const)) {\n      return;\n    }\n    const type = schema.type;\n    if (Array.isArray(type)) {\n      type.forEach((t2) => types[t2] = true);\n    } else if (type) {\n      types[type] = true;\n    }\n  }\n  addFillerValueCompletions(types, separatorAfter, collector) {\n    if (types[\"object\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"object\"),\n        label: \"{}\",\n        insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New object\"),\n        documentation: \"\"\n      });\n    }\n    if (types[\"array\"]) {\n      collector.add({\n        kind: this.getSuggestionKind(\"array\"),\n        label: \"[]\",\n        insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        detail: t(\"New array\"),\n        documentation: \"\"\n      });\n    }\n  }\n  addBooleanValueCompletion(value, separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"boolean\"),\n      label: value ? \"true\" : \"false\",\n      insertText: this.getInsertTextForValue(value, separatorAfter),\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addNullValueCompletion(separatorAfter, collector) {\n    collector.add({\n      kind: this.getSuggestionKind(\"null\"),\n      label: \"null\",\n      insertText: \"null\" + separatorAfter,\n      insertTextFormat: InsertTextFormat.Snippet,\n      documentation: \"\"\n    });\n  }\n  addDollarSchemaCompletions(separatorAfter, collector) {\n    const schemaIds = this.schemaService.getRegisteredSchemaIds((schema) => schema === \"http\" || schema === \"https\");\n    schemaIds.forEach((schemaId) => {\n      if (schemaId.startsWith(\"http://json-schema.org/draft-\")) {\n        schemaId = schemaId + \"#\";\n      }\n      collector.add({\n        kind: CompletionItemKind.Module,\n        label: this.getLabelForValue(schemaId),\n        filterText: this.getFilterTextForValue(schemaId),\n        insertText: this.getInsertTextForValue(schemaId, separatorAfter),\n        insertTextFormat: InsertTextFormat.Snippet,\n        documentation: \"\"\n      });\n    });\n  }\n  getLabelForValue(value) {\n    return JSON.stringify(value);\n  }\n  getValueFromLabel(value) {\n    return JSON.parse(value);\n  }\n  getFilterTextForValue(value) {\n    return JSON.stringify(value);\n  }\n  getFilterTextForSnippetValue(value) {\n    return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getLabelForSnippetValue(value) {\n    const label = JSON.stringify(value);\n    return label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, \"$1\");\n  }\n  getInsertTextForPlainText(text) {\n    return text.replace(/[\\\\\\$\\}]/g, \"\\\\$&\");\n  }\n  getInsertTextForValue(value, separatorAfter) {\n    const text = JSON.stringify(value, null, \"\t\");\n    if (text === \"{}\") {\n      return \"{$1}\" + separatorAfter;\n    } else if (text === \"[]\") {\n      return \"[$1]\" + separatorAfter;\n    }\n    return this.getInsertTextForPlainText(text + separatorAfter);\n  }\n  getInsertTextForSnippetValue(value, separatorAfter) {\n    const replacer = (value2) => {\n      if (typeof value2 === \"string\") {\n        if (value2[0] === \"^\") {\n          return value2.substr(1);\n        }\n      }\n      return JSON.stringify(value2);\n    };\n    return stringifyObject(value, \"\", replacer) + separatorAfter;\n  }\n  getInsertTextForGuessedValue(value, separatorAfter) {\n    switch (typeof value) {\n      case \"object\":\n        if (value === null) {\n          return \"${1:null}\" + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n      case \"string\":\n        let snippetValue = JSON.stringify(value);\n        snippetValue = snippetValue.substr(1, snippetValue.length - 2);\n        snippetValue = this.getInsertTextForPlainText(snippetValue);\n        return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n      case \"number\":\n      case \"boolean\":\n        return \"${1:\" + JSON.stringify(value) + \"}\" + separatorAfter;\n    }\n    return this.getInsertTextForValue(value, separatorAfter);\n  }\n  getSuggestionKind(type) {\n    if (Array.isArray(type)) {\n      const array = type;\n      type = array.length > 0 ? array[0] : void 0;\n    }\n    if (!type) {\n      return CompletionItemKind.Value;\n    }\n    switch (type) {\n      case \"string\":\n        return CompletionItemKind.Value;\n      case \"object\":\n        return CompletionItemKind.Module;\n      case \"property\":\n        return CompletionItemKind.Property;\n      default:\n        return CompletionItemKind.Value;\n    }\n  }\n  getLabelTextForMatchingNode(node, document) {\n    switch (node.type) {\n      case \"array\":\n        return \"[]\";\n      case \"object\":\n        return \"{}\";\n      default:\n        const content = document.getText().substr(node.offset, node.length);\n        return content;\n    }\n  }\n  getInsertTextForMatchingNode(node, document, separatorAfter) {\n    switch (node.type) {\n      case \"array\":\n        return this.getInsertTextForValue([], separatorAfter);\n      case \"object\":\n        return this.getInsertTextForValue({}, separatorAfter);\n      default:\n        const content = document.getText().substr(node.offset, node.length) + separatorAfter;\n        return this.getInsertTextForPlainText(content);\n    }\n  }\n  getInsertTextForProperty(key, propertySchema, addValue, separatorAfter) {\n    const propertyText = this.getInsertTextForValue(key, \"\");\n    if (!addValue) {\n      return propertyText;\n    }\n    const resultText = propertyText + \": \";\n    let value;\n    let nValueProposals = 0;\n    if (propertySchema) {\n      if (Array.isArray(propertySchema.defaultSnippets)) {\n        if (propertySchema.defaultSnippets.length === 1) {\n          const body = propertySchema.defaultSnippets[0].body;\n          if (isDefined(body)) {\n            value = this.getInsertTextForSnippetValue(body, \"\");\n          }\n        }\n        nValueProposals += propertySchema.defaultSnippets.length;\n      }\n      if (propertySchema.enum) {\n        if (!value && propertySchema.enum.length === 1) {\n          value = this.getInsertTextForGuessedValue(propertySchema.enum[0], \"\");\n        }\n        nValueProposals += propertySchema.enum.length;\n      }\n      if (isDefined(propertySchema.const)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.const, \"\");\n        }\n        nValueProposals++;\n      }\n      if (isDefined(propertySchema.default)) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.default, \"\");\n        }\n        nValueProposals++;\n      }\n      if (Array.isArray(propertySchema.examples) && propertySchema.examples.length) {\n        if (!value) {\n          value = this.getInsertTextForGuessedValue(propertySchema.examples[0], \"\");\n        }\n        nValueProposals += propertySchema.examples.length;\n      }\n      if (nValueProposals === 0) {\n        let type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n        if (!type) {\n          if (propertySchema.properties) {\n            type = \"object\";\n          } else if (propertySchema.items) {\n            type = \"array\";\n          }\n        }\n        switch (type) {\n          case \"boolean\":\n            value = \"$1\";\n            break;\n          case \"string\":\n            value = '\"$1\"';\n            break;\n          case \"object\":\n            value = \"{$1}\";\n            break;\n          case \"array\":\n            value = \"[$1]\";\n            break;\n          case \"number\":\n          case \"integer\":\n            value = \"${1:0}\";\n            break;\n          case \"null\":\n            value = \"${1:null}\";\n            break;\n          default:\n            return propertyText;\n        }\n      }\n    }\n    if (!value || nValueProposals > 1) {\n      value = \"$1\";\n    }\n    return resultText + value + separatorAfter;\n  }\n  getCurrentWord(document, offset) {\n    let i = offset - 1;\n    const text = document.getText();\n    while (i >= 0 && ' \t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n      i--;\n    }\n    return text.substring(i + 1, offset);\n  }\n  evaluateSeparatorAfter(document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    scanner.setPosition(offset);\n    const token = scanner.scan();\n    switch (token) {\n      case 5:\n      case 2:\n      case 4:\n      case 17:\n        return \"\";\n      default:\n        return \",\";\n    }\n  }\n  findItemAtOffset(node, document, offset) {\n    const scanner = createScanner2(document.getText(), true);\n    const children = node.items;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      if (offset > child.offset + child.length) {\n        scanner.setPosition(child.offset + child.length);\n        const token = scanner.scan();\n        if (token === 5 && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n          return i + 1;\n        }\n        return i;\n      } else if (offset >= child.offset) {\n        return i;\n      }\n    }\n    return 0;\n  }\n  isInComment(document, start, offset) {\n    const scanner = createScanner2(document.getText(), false);\n    scanner.setPosition(start);\n    let token = scanner.scan();\n    while (token !== 17 && scanner.getTokenOffset() + scanner.getTokenLength() < offset) {\n      token = scanner.scan();\n    }\n    return (token === 12 || token === 13) && scanner.getTokenOffset() <= offset;\n  }\n  fromMarkup(markupString) {\n    if (markupString && this.doesSupportMarkdown()) {\n      return {\n        kind: MarkupKind.Markdown,\n        value: markupString\n      };\n    }\n    return void 0;\n  }\n  doesSupportMarkdown() {\n    if (!isDefined(this.supportsMarkdown)) {\n      const documentationFormat = this.clientCapabilities.textDocument?.completion?.completionItem?.documentationFormat;\n      this.supportsMarkdown = Array.isArray(documentationFormat) && documentationFormat.indexOf(MarkupKind.Markdown) !== -1;\n    }\n    return this.supportsMarkdown;\n  }\n  doesSupportsCommitCharacters() {\n    if (!isDefined(this.supportsCommitCharacters)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.commitCharactersSupport;\n    }\n    return this.supportsCommitCharacters;\n  }\n  doesSupportsLabelDetails() {\n    if (!isDefined(this.labelDetailsSupport)) {\n      this.labelDetailsSupport = this.clientCapabilities.textDocument?.completion?.completionItem?.labelDetailsSupport;\n    }\n    return this.labelDetailsSupport;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonHover.js\nvar JSONHover = class {\n  constructor(schemaService, contributions = [], promiseConstructor) {\n    this.schemaService = schemaService;\n    this.contributions = contributions;\n    this.promise = promiseConstructor || Promise;\n  }\n  doHover(document, position, doc) {\n    const offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset);\n    if (!node || (node.type === \"object\" || node.type === \"array\") && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n      return this.promise.resolve(null);\n    }\n    const hoverRangeNode = node;\n    if (node.type === \"string\") {\n      const parent = node.parent;\n      if (parent && parent.type === \"property\" && parent.keyNode === node) {\n        node = parent.valueNode;\n        if (!node) {\n          return this.promise.resolve(null);\n        }\n      }\n    }\n    const hoverRange = Range.create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n    const createHover = (contents) => {\n      const result = {\n        contents,\n        range: hoverRange\n      };\n      return result;\n    };\n    const location = getNodePath3(node);\n    for (let i = this.contributions.length - 1; i >= 0; i--) {\n      const contribution = this.contributions[i];\n      const promise = contribution.getInfoContribution(document.uri, location);\n      if (promise) {\n        return promise.then((htmlContent) => createHover(htmlContent));\n      }\n    }\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      if (schema && node) {\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        let title = void 0;\n        let markdownDescription = void 0;\n        let markdownEnumValueDescription = void 0, enumValue = void 0;\n        matchingSchemas.every((s) => {\n          if (s.node === node && !s.inverted && s.schema) {\n            title = title || s.schema.title;\n            markdownDescription = markdownDescription || s.schema.markdownDescription || toMarkdown(s.schema.description);\n            if (s.schema.enum) {\n              const idx = s.schema.enum.indexOf(getNodeValue3(node));\n              if (s.schema.markdownEnumDescriptions) {\n                markdownEnumValueDescription = s.schema.markdownEnumDescriptions[idx];\n              } else if (s.schema.enumDescriptions) {\n                markdownEnumValueDescription = toMarkdown(s.schema.enumDescriptions[idx]);\n              }\n              if (markdownEnumValueDescription) {\n                enumValue = s.schema.enum[idx];\n                if (typeof enumValue !== \"string\") {\n                  enumValue = JSON.stringify(enumValue);\n                }\n              }\n            }\n          }\n          return true;\n        });\n        let result = \"\";\n        if (title) {\n          result = toMarkdown(title);\n        }\n        if (markdownDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += markdownDescription;\n        }\n        if (markdownEnumValueDescription) {\n          if (result.length > 0) {\n            result += \"\\n\\n\";\n          }\n          result += `\\`${toMarkdownCodeBlock(enumValue)}\\`: ${markdownEnumValueDescription}`;\n        }\n        return createHover([result]);\n      }\n      return null;\n    });\n  }\n};\nfunction toMarkdown(plain) {\n  if (plain) {\n    const res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, \"$1\\n\\n$3\");\n    return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\n  }\n  return void 0;\n}\nfunction toMarkdownCodeBlock(content) {\n  if (content.indexOf(\"`\") !== -1) {\n    return \"`` \" + content + \" ``\";\n  }\n  return content;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonValidation.js\nvar JSONValidation = class {\n  constructor(jsonSchemaService, promiseConstructor) {\n    this.jsonSchemaService = jsonSchemaService;\n    this.promise = promiseConstructor;\n    this.validationEnabled = true;\n  }\n  configure(raw) {\n    if (raw) {\n      this.validationEnabled = raw.validate !== false;\n      this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n    }\n  }\n  doValidation(textDocument, jsonDocument, documentSettings, schema) {\n    if (!this.validationEnabled) {\n      return this.promise.resolve([]);\n    }\n    const diagnostics = [];\n    const added = {};\n    const addProblem = (problem) => {\n      const signature = problem.range.start.line + \" \" + problem.range.start.character + \" \" + problem.message;\n      if (!added[signature]) {\n        added[signature] = true;\n        diagnostics.push(problem);\n      }\n    };\n    const getDiagnostics = (schema2) => {\n      let trailingCommaSeverity = documentSettings?.trailingCommas ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n      let commentSeverity = documentSettings?.comments ? toDiagnosticSeverity(documentSettings.comments) : this.commentSeverity;\n      let schemaValidation = documentSettings?.schemaValidation ? toDiagnosticSeverity(documentSettings.schemaValidation) : DiagnosticSeverity.Warning;\n      let schemaRequest = documentSettings?.schemaRequest ? toDiagnosticSeverity(documentSettings.schemaRequest) : DiagnosticSeverity.Warning;\n      if (schema2) {\n        const addSchemaProblem = (errorMessage, errorCode) => {\n          if (jsonDocument.root && schemaRequest) {\n            const astRoot = jsonDocument.root;\n            const property = astRoot.type === \"object\" ? astRoot.properties[0] : void 0;\n            if (property && property.keyNode.value === \"$schema\") {\n              const node = property.valueNode || property;\n              const range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            } else {\n              const range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n              addProblem(Diagnostic.create(range, errorMessage, schemaRequest, errorCode));\n            }\n          }\n        };\n        if (schema2.errors.length) {\n          addSchemaProblem(schema2.errors[0], ErrorCode.SchemaResolveError);\n        } else if (schemaValidation) {\n          for (const warning of schema2.warnings) {\n            addSchemaProblem(warning, ErrorCode.SchemaUnsupportedFeature);\n          }\n          const semanticErrors = jsonDocument.validate(textDocument, schema2.schema, schemaValidation, documentSettings?.schemaDraft);\n          if (semanticErrors) {\n            semanticErrors.forEach(addProblem);\n          }\n        }\n        if (schemaAllowsComments(schema2.schema)) {\n          commentSeverity = void 0;\n        }\n        if (schemaAllowsTrailingCommas(schema2.schema)) {\n          trailingCommaSeverity = void 0;\n        }\n      }\n      for (const p of jsonDocument.syntaxErrors) {\n        if (p.code === ErrorCode.TrailingComma) {\n          if (typeof trailingCommaSeverity !== \"number\") {\n            continue;\n          }\n          p.severity = trailingCommaSeverity;\n        }\n        addProblem(p);\n      }\n      if (typeof commentSeverity === \"number\") {\n        const message = t(\"Comments are not permitted in JSON.\");\n        jsonDocument.comments.forEach((c) => {\n          addProblem(Diagnostic.create(c, message, commentSeverity, ErrorCode.CommentNotPermitted));\n        });\n      }\n      return diagnostics;\n    };\n    if (schema) {\n      const uri = schema.id || \"schemaservice://untitled/\" + idCounter++;\n      const handle = this.jsonSchemaService.registerExternalSchema({ uri, schema });\n      return handle.getResolvedSchema().then((resolvedSchema) => {\n        return getDiagnostics(resolvedSchema);\n      });\n    }\n    return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then((schema2) => {\n      return getDiagnostics(schema2);\n    });\n  }\n  getLanguageStatus(textDocument, jsonDocument) {\n    return { schemas: this.jsonSchemaService.getSchemaURIsForResource(textDocument.uri, jsonDocument) };\n  }\n};\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowComments)) {\n      return schemaRef.allowComments;\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsComments(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n  if (schemaRef && typeof schemaRef === \"object\") {\n    if (isBoolean(schemaRef.allowTrailingCommas)) {\n      return schemaRef.allowTrailingCommas;\n    }\n    const deprSchemaRef = schemaRef;\n    if (isBoolean(deprSchemaRef[\"allowsTrailingCommas\"])) {\n      return deprSchemaRef[\"allowsTrailingCommas\"];\n    }\n    if (schemaRef.allOf) {\n      for (const schema of schemaRef.allOf) {\n        const allow = schemaAllowsTrailingCommas(schema);\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n  return void 0;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n  switch (severityLevel) {\n    case \"error\":\n      return DiagnosticSeverity.Error;\n    case \"warning\":\n      return DiagnosticSeverity.Warning;\n    case \"ignore\":\n      return void 0;\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/colors.js\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n  if (charCode < Digit0) {\n    return 0;\n  }\n  if (charCode <= Digit9) {\n    return charCode - Digit0;\n  }\n  if (charCode < a) {\n    charCode += a - A;\n  }\n  if (charCode >= a && charCode <= f) {\n    return charCode - a + 10;\n  }\n  return 0;\n}\nfunction colorFromHex(text) {\n  if (text[0] !== \"#\") {\n    return void 0;\n  }\n  switch (text.length) {\n    case 4:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: 1\n      };\n    case 5:\n      return {\n        red: hexDigit(text.charCodeAt(1)) * 17 / 255,\n        green: hexDigit(text.charCodeAt(2)) * 17 / 255,\n        blue: hexDigit(text.charCodeAt(3)) * 17 / 255,\n        alpha: hexDigit(text.charCodeAt(4)) * 17 / 255\n      };\n    case 7:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: 1\n      };\n    case 9:\n      return {\n        red: (hexDigit(text.charCodeAt(1)) * 16 + hexDigit(text.charCodeAt(2))) / 255,\n        green: (hexDigit(text.charCodeAt(3)) * 16 + hexDigit(text.charCodeAt(4))) / 255,\n        blue: (hexDigit(text.charCodeAt(5)) * 16 + hexDigit(text.charCodeAt(6))) / 255,\n        alpha: (hexDigit(text.charCodeAt(7)) * 16 + hexDigit(text.charCodeAt(8))) / 255\n      };\n  }\n  return void 0;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonDocumentSymbols.js\nvar JSONDocumentSymbols = class {\n  constructor(schemaService) {\n    this.schemaService = schemaService;\n  }\n  findDocumentSymbols(document, doc, context = { resultLimit: Number.MAX_VALUE }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const location = Location.create(document.uri, getRange(document, item));\n                result2.push({ name: getName(property.valueNode), kind: SymbolKind.Function, location });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const toVisit = [\n      { node: root, containerName: \"\" }\n    ];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const result = [];\n    const collectOutlineEntries = (node, containerName) => {\n      if (node.type === \"array\") {\n        node.items.forEach((node2) => {\n          if (node2) {\n            toVisit.push({ node: node2, containerName });\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach((property) => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const location = Location.create(document.uri, getRange(document, property));\n              const childContainerName = containerName ? containerName + \".\" + property.keyNode.value : property.keyNode.value;\n              result.push({ name: this.getKeyLabel(property), kind: this.getSymbolKind(valueNode.type), location, containerName });\n              toVisit.push({ node: valueNode, containerName: childContainerName });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.containerName);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  findDocumentSymbols2(document, doc, context = { resultLimit: Number.MAX_VALUE }) {\n    const root = doc.root;\n    if (!root) {\n      return [];\n    }\n    let limit = context.resultLimit || Number.MAX_VALUE;\n    const resourceString = document.uri;\n    if (resourceString === \"vscode://defaultsettings/keybindings.json\" || endsWith(resourceString.toLowerCase(), \"/user/keybindings.json\")) {\n      if (root.type === \"array\") {\n        const result2 = [];\n        for (const item of root.items) {\n          if (item.type === \"object\") {\n            for (const property of item.properties) {\n              if (property.keyNode.value === \"key\" && property.valueNode) {\n                const range = getRange(document, item);\n                const selectionRange = getRange(document, property.keyNode);\n                result2.push({ name: getName(property.valueNode), kind: SymbolKind.Function, range, selectionRange });\n                limit--;\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n                  return result2;\n                }\n              }\n            }\n          }\n        }\n        return result2;\n      }\n    }\n    const result = [];\n    const toVisit = [\n      { node: root, result }\n    ];\n    let nextToVisit = 0;\n    let limitExceeded = false;\n    const collectOutlineEntries = (node, result2) => {\n      if (node.type === \"array\") {\n        node.items.forEach((node2, index) => {\n          if (node2) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, node2);\n              const selectionRange = range;\n              const name = String(index);\n              const symbol = { name, kind: this.getSymbolKind(node2.type), range, selectionRange, children: [] };\n              result2.push(symbol);\n              toVisit.push({ result: symbol.children, node: node2 });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      } else if (node.type === \"object\") {\n        node.properties.forEach((property) => {\n          const valueNode = property.valueNode;\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              const range = getRange(document, property);\n              const selectionRange = getRange(document, property.keyNode);\n              const children = [];\n              const symbol = { name: this.getKeyLabel(property), kind: this.getSymbolKind(valueNode.type), range, selectionRange, children, detail: this.getDetail(valueNode) };\n              result2.push(symbol);\n              toVisit.push({ result: children, node: valueNode });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    };\n    while (nextToVisit < toVisit.length) {\n      const next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.result);\n    }\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n    return result;\n  }\n  getSymbolKind(nodeType) {\n    switch (nodeType) {\n      case \"object\":\n        return SymbolKind.Module;\n      case \"string\":\n        return SymbolKind.String;\n      case \"number\":\n        return SymbolKind.Number;\n      case \"array\":\n        return SymbolKind.Array;\n      case \"boolean\":\n        return SymbolKind.Boolean;\n      default:\n        return SymbolKind.Variable;\n    }\n  }\n  getKeyLabel(property) {\n    let name = property.keyNode.value;\n    if (name) {\n      name = name.replace(/[\\n]/g, \"\\u21B5\");\n    }\n    if (name && name.trim()) {\n      return name;\n    }\n    return `\"${name}\"`;\n  }\n  getDetail(node) {\n    if (!node) {\n      return void 0;\n    }\n    if (node.type === \"boolean\" || node.type === \"number\" || node.type === \"null\" || node.type === \"string\") {\n      return String(node.value);\n    } else {\n      if (node.type === \"array\") {\n        return node.children.length ? void 0 : \"[]\";\n      } else if (node.type === \"object\") {\n        return node.children.length ? void 0 : \"{}\";\n      }\n    }\n    return void 0;\n  }\n  findDocumentColors(document, doc, context) {\n    return this.schemaService.getSchemaForResource(document.uri, doc).then((schema) => {\n      const result = [];\n      if (schema) {\n        let limit = context && typeof context.resultLimit === \"number\" ? context.resultLimit : Number.MAX_VALUE;\n        const matchingSchemas = doc.getMatchingSchemas(schema.schema);\n        const visitedNode = {};\n        for (const s of matchingSchemas) {\n          if (!s.inverted && s.schema && (s.schema.format === \"color\" || s.schema.format === \"color-hex\") && s.node && s.node.type === \"string\") {\n            const nodeId = String(s.node.offset);\n            if (!visitedNode[nodeId]) {\n              const color = colorFromHex(getNodeValue3(s.node));\n              if (color) {\n                const range = getRange(document, s.node);\n                result.push({ color, range });\n              }\n              visitedNode[nodeId] = true;\n              limit--;\n              if (limit <= 0) {\n                if (context && context.onResultLimitExceeded) {\n                  context.onResultLimitExceeded(document.uri);\n                }\n                return result;\n              }\n            }\n          }\n        }\n      }\n      return result;\n    });\n  }\n  getColorPresentations(document, doc, color, range) {\n    const result = [];\n    const red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n    function toTwoDigitHex(n) {\n      const r = n.toString(16);\n      return r.length !== 2 ? \"0\" + r : r;\n    }\n    let label;\n    if (color.alpha === 1) {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}`;\n    } else {\n      label = `#${toTwoDigitHex(red256)}${toTwoDigitHex(green256)}${toTwoDigitHex(blue256)}${toTwoDigitHex(Math.round(color.alpha * 255))}`;\n    }\n    result.push({ label, textEdit: TextEdit.replace(range, JSON.stringify(label)) });\n    return result;\n  }\n};\nfunction getRange(document, node) {\n  return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\nfunction getName(node) {\n  return getNodeValue3(node) || t(\"<empty>\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/configuration.js\nvar schemaContributions = {\n  schemaAssociations: [],\n  schemas: {\n    // bundle the schema-schema to include (localized) descriptions\n    \"http://json-schema.org/draft-04/schema#\": {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"$ref\": \"#\"\n          }\n        },\n        \"positiveInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"positiveIntegerDefault0\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            },\n            {\n              \"default\": 0\n            }\n          ]\n        },\n        \"simpleTypes\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"array\",\n            \"boolean\",\n            \"integer\",\n            \"null\",\n            \"number\",\n            \"object\",\n            \"string\"\n          ]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": {},\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"exclusiveMinimum\": true\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxLength\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minLength\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"$ref\": \"#\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#\"\n            },\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"maxItems\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minItems\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxProperties\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveInteger\"\n            }\n          ]\n        },\n        \"minProperties\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/positiveIntegerDefault0\"\n            }\n          ]\n        },\n        \"required\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/stringArray\"\n            }\n          ]\n        },\n        \"additionalProperties\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"$ref\": \"#\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#\"\n          },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#\"\n              },\n              {\n                \"$ref\": \"#/definitions/stringArray\"\n              }\n            ]\n          }\n        },\n        \"enum\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/simpleTypes\"\n            },\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/simpleTypes\"\n              },\n              \"minItems\": 1,\n              \"uniqueItems\": true\n            }\n          ]\n        },\n        \"format\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\",\n              \"enum\": [\n                \"date-time\",\n                \"uri\",\n                \"email\",\n                \"hostname\",\n                \"ipv4\",\n                \"ipv6\",\n                \"regex\"\n              ]\n            },\n            {\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"allOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"anyOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"oneOf\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/schemaArray\"\n            }\n          ]\n        },\n        \"not\": {\n          \"allOf\": [\n            {\n              \"$ref\": \"#\"\n            }\n          ]\n        }\n      },\n      \"dependencies\": {\n        \"exclusiveMaximum\": [\n          \"maximum\"\n        ],\n        \"exclusiveMinimum\": [\n          \"minimum\"\n        ]\n      },\n      \"default\": {}\n    },\n    \"http://json-schema.org/draft-07/schema#\": {\n      \"definitions\": {\n        \"schemaArray\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": { \"$ref\": \"#\" }\n        },\n        \"nonNegativeInteger\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"nonNegativeIntegerDefault0\": {\n          \"allOf\": [\n            { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n            { \"default\": 0 }\n          ]\n        },\n        \"simpleTypes\": {\n          \"enum\": [\n            \"array\",\n            \"boolean\",\n            \"integer\",\n            \"null\",\n            \"number\",\n            \"object\",\n            \"string\"\n          ]\n        },\n        \"stringArray\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\" },\n          \"uniqueItems\": true,\n          \"default\": []\n        }\n      },\n      \"type\": [\"object\", \"boolean\"],\n      \"properties\": {\n        \"$id\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$schema\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"$ref\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"$comment\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"default\": true,\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"examples\": {\n          \"type\": \"array\",\n          \"items\": true\n        },\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"exclusiveMinimum\": 0\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"number\"\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"number\"\n        },\n        \"maxLength\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minLength\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"additionalItems\": { \"$ref\": \"#\" },\n        \"items\": {\n          \"anyOf\": [\n            { \"$ref\": \"#\" },\n            { \"$ref\": \"#/definitions/schemaArray\" }\n          ],\n          \"default\": true\n        },\n        \"maxItems\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minItems\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"contains\": { \"$ref\": \"#\" },\n        \"maxProperties\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minProperties\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"required\": { \"$ref\": \"#/definitions/stringArray\" },\n        \"additionalProperties\": { \"$ref\": \"#\" },\n        \"definitions\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"default\": {}\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"default\": {}\n        },\n        \"patternProperties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": { \"$ref\": \"#\" },\n          \"propertyNames\": { \"format\": \"regex\" },\n          \"default\": {}\n        },\n        \"dependencies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"anyOf\": [\n              { \"$ref\": \"#\" },\n              { \"$ref\": \"#/definitions/stringArray\" }\n            ]\n          }\n        },\n        \"propertyNames\": { \"$ref\": \"#\" },\n        \"const\": true,\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": true,\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"type\": {\n          \"anyOf\": [\n            { \"$ref\": \"#/definitions/simpleTypes\" },\n            {\n              \"type\": \"array\",\n              \"items\": { \"$ref\": \"#/definitions/simpleTypes\" },\n              \"minItems\": 1,\n              \"uniqueItems\": true\n            }\n          ]\n        },\n        \"format\": { \"type\": \"string\" },\n        \"contentMediaType\": { \"type\": \"string\" },\n        \"contentEncoding\": { \"type\": \"string\" },\n        \"if\": { \"$ref\": \"#\" },\n        \"then\": { \"$ref\": \"#\" },\n        \"else\": { \"$ref\": \"#\" },\n        \"allOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"anyOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"oneOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"not\": { \"$ref\": \"#\" }\n      },\n      \"default\": true\n    }\n  }\n};\nvar descriptions = {\n  id: t(\"A unique identifier for the schema.\"),\n  $schema: t(\"The schema to verify this document against.\"),\n  title: t(\"A descriptive title of the element.\"),\n  description: t(\"A long description of the element. Used in hover menus and suggestions.\"),\n  default: t(\"A default value. Used by suggestions.\"),\n  multipleOf: t(\"A number that should cleanly divide the current value (i.e. have no remainder).\"),\n  maximum: t(\"The maximum numerical value, inclusive by default.\"),\n  exclusiveMaximum: t(\"Makes the maximum property exclusive.\"),\n  minimum: t(\"The minimum numerical value, inclusive by default.\"),\n  exclusiveMinimum: t(\"Makes the minimum property exclusive.\"),\n  maxLength: t(\"The maximum length of a string.\"),\n  minLength: t(\"The minimum length of a string.\"),\n  pattern: t(\"A regular expression to match the string against. It is not implicitly anchored.\"),\n  additionalItems: t(\"For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.\"),\n  items: t(\"For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.\"),\n  maxItems: t(\"The maximum number of items that can be inside an array. Inclusive.\"),\n  minItems: t(\"The minimum number of items that can be inside an array. Inclusive.\"),\n  uniqueItems: t(\"If all of the items in the array must be unique. Defaults to false.\"),\n  maxProperties: t(\"The maximum number of properties an object can have. Inclusive.\"),\n  minProperties: t(\"The minimum number of properties an object can have. Inclusive.\"),\n  required: t(\"An array of strings that lists the names of all properties required on this object.\"),\n  additionalProperties: t(\"Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.\"),\n  definitions: t(\"Not used for validation. Place subschemas here that you wish to reference inline with $ref.\"),\n  properties: t(\"A map of property names to schemas for each property.\"),\n  patternProperties: t(\"A map of regular expressions on property names to schemas for matching properties.\"),\n  dependencies: t(\"A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.\"),\n  enum: t(\"The set of literal values that are valid.\"),\n  type: t(\"Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.\"),\n  format: t(\"Describes the format expected for the value.\"),\n  allOf: t(\"An array of schemas, all of which must match.\"),\n  anyOf: t(\"An array of schemas, where at least one must match.\"),\n  oneOf: t(\"An array of schemas, exactly one of which must match.\"),\n  not: t(\"A schema which must not match.\"),\n  $id: t(\"A unique identifier for the schema.\"),\n  $ref: t(\"Reference a definition hosted on any location.\"),\n  $comment: t(\"Comments from schema authors to readers or maintainers of the schema.\"),\n  readOnly: t(\"Indicates that the value of the instance is managed exclusively by the owning authority.\"),\n  examples: t(\"Sample JSON values associated with a particular schema, for the purpose of illustrating usage.\"),\n  contains: t('An array instance is valid against \"contains\" if at least one of its elements is valid against the given schema.'),\n  propertyNames: t(\"If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.\"),\n  const: t(\"An instance validates successfully against this keyword if its value is equal to the value of the keyword.\"),\n  contentMediaType: t(\"Describes the media type of a string property.\"),\n  contentEncoding: t(\"Describes the content encoding of a string property.\"),\n  if: t('The validation outcome of the \"if\" subschema controls which of the \"then\" or \"else\" keywords are evaluated.'),\n  then: t('The \"if\" subschema is used for validation when the \"if\" subschema succeeds.'),\n  else: t('The \"else\" subschema is used for validation when the \"if\" subschema fails.')\n};\nfor (const schemaName in schemaContributions.schemas) {\n  const schema = schemaContributions.schemas[schemaName];\n  for (const property in schema.properties) {\n    let propertyObject = schema.properties[property];\n    if (typeof propertyObject === \"boolean\") {\n      propertyObject = schema.properties[property] = {};\n    }\n    const description = descriptions[property];\n    if (description) {\n      propertyObject[\"description\"] = description;\n    }\n  }\n}\n\n// node_modules/vscode-uri/lib/esm/index.mjs\nvar LIB;\n(() => {\n  \"use strict\";\n  var t2 = { 470: (t3) => {\n    function e2(t4) {\n      if (\"string\" != typeof t4)\n        throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(t4));\n    }\n    function r2(t4, e3) {\n      for (var r3, n3 = \"\", i = 0, o = -1, s = 0, h = 0; h <= t4.length; ++h) {\n        if (h < t4.length)\n          r3 = t4.charCodeAt(h);\n        else {\n          if (47 === r3)\n            break;\n          r3 = 47;\n        }\n        if (47 === r3) {\n          if (o === h - 1 || 1 === s)\n            ;\n          else if (o !== h - 1 && 2 === s) {\n            if (n3.length < 2 || 2 !== i || 46 !== n3.charCodeAt(n3.length - 1) || 46 !== n3.charCodeAt(n3.length - 2)) {\n              if (n3.length > 2) {\n                var a2 = n3.lastIndexOf(\"/\");\n                if (a2 !== n3.length - 1) {\n                  -1 === a2 ? (n3 = \"\", i = 0) : i = (n3 = n3.slice(0, a2)).length - 1 - n3.lastIndexOf(\"/\"), o = h, s = 0;\n                  continue;\n                }\n              } else if (2 === n3.length || 1 === n3.length) {\n                n3 = \"\", i = 0, o = h, s = 0;\n                continue;\n              }\n            }\n            e3 && (n3.length > 0 ? n3 += \"/..\" : n3 = \"..\", i = 2);\n          } else\n            n3.length > 0 ? n3 += \"/\" + t4.slice(o + 1, h) : n3 = t4.slice(o + 1, h), i = h - o - 1;\n          o = h, s = 0;\n        } else\n          46 === r3 && -1 !== s ? ++s : s = -1;\n      }\n      return n3;\n    }\n    var n2 = { resolve: function() {\n      for (var t4, n3 = \"\", i = false, o = arguments.length - 1; o >= -1 && !i; o--) {\n        var s;\n        o >= 0 ? s = arguments[o] : (void 0 === t4 && (t4 = process.cwd()), s = t4), e2(s), 0 !== s.length && (n3 = s + \"/\" + n3, i = 47 === s.charCodeAt(0));\n      }\n      return n3 = r2(n3, !i), i ? n3.length > 0 ? \"/\" + n3 : \"/\" : n3.length > 0 ? n3 : \".\";\n    }, normalize: function(t4) {\n      if (e2(t4), 0 === t4.length)\n        return \".\";\n      var n3 = 47 === t4.charCodeAt(0), i = 47 === t4.charCodeAt(t4.length - 1);\n      return 0 !== (t4 = r2(t4, !n3)).length || n3 || (t4 = \".\"), t4.length > 0 && i && (t4 += \"/\"), n3 ? \"/\" + t4 : t4;\n    }, isAbsolute: function(t4) {\n      return e2(t4), t4.length > 0 && 47 === t4.charCodeAt(0);\n    }, join: function() {\n      if (0 === arguments.length)\n        return \".\";\n      for (var t4, r3 = 0; r3 < arguments.length; ++r3) {\n        var i = arguments[r3];\n        e2(i), i.length > 0 && (void 0 === t4 ? t4 = i : t4 += \"/\" + i);\n      }\n      return void 0 === t4 ? \".\" : n2.normalize(t4);\n    }, relative: function(t4, r3) {\n      if (e2(t4), e2(r3), t4 === r3)\n        return \"\";\n      if ((t4 = n2.resolve(t4)) === (r3 = n2.resolve(r3)))\n        return \"\";\n      for (var i = 1; i < t4.length && 47 === t4.charCodeAt(i); ++i)\n        ;\n      for (var o = t4.length, s = o - i, h = 1; h < r3.length && 47 === r3.charCodeAt(h); ++h)\n        ;\n      for (var a2 = r3.length - h, c = s < a2 ? s : a2, f2 = -1, u = 0; u <= c; ++u) {\n        if (u === c) {\n          if (a2 > c) {\n            if (47 === r3.charCodeAt(h + u))\n              return r3.slice(h + u + 1);\n            if (0 === u)\n              return r3.slice(h + u);\n          } else\n            s > c && (47 === t4.charCodeAt(i + u) ? f2 = u : 0 === u && (f2 = 0));\n          break;\n        }\n        var l = t4.charCodeAt(i + u);\n        if (l !== r3.charCodeAt(h + u))\n          break;\n        47 === l && (f2 = u);\n      }\n      var g = \"\";\n      for (u = i + f2 + 1; u <= o; ++u)\n        u !== o && 47 !== t4.charCodeAt(u) || (0 === g.length ? g += \"..\" : g += \"/..\");\n      return g.length > 0 ? g + r3.slice(h + f2) : (h += f2, 47 === r3.charCodeAt(h) && ++h, r3.slice(h));\n    }, _makeLong: function(t4) {\n      return t4;\n    }, dirname: function(t4) {\n      if (e2(t4), 0 === t4.length)\n        return \".\";\n      for (var r3 = t4.charCodeAt(0), n3 = 47 === r3, i = -1, o = true, s = t4.length - 1; s >= 1; --s)\n        if (47 === (r3 = t4.charCodeAt(s))) {\n          if (!o) {\n            i = s;\n            break;\n          }\n        } else\n          o = false;\n      return -1 === i ? n3 ? \"/\" : \".\" : n3 && 1 === i ? \"//\" : t4.slice(0, i);\n    }, basename: function(t4, r3) {\n      if (void 0 !== r3 && \"string\" != typeof r3)\n        throw new TypeError('\"ext\" argument must be a string');\n      e2(t4);\n      var n3, i = 0, o = -1, s = true;\n      if (void 0 !== r3 && r3.length > 0 && r3.length <= t4.length) {\n        if (r3.length === t4.length && r3 === t4)\n          return \"\";\n        var h = r3.length - 1, a2 = -1;\n        for (n3 = t4.length - 1; n3 >= 0; --n3) {\n          var c = t4.charCodeAt(n3);\n          if (47 === c) {\n            if (!s) {\n              i = n3 + 1;\n              break;\n            }\n          } else\n            -1 === a2 && (s = false, a2 = n3 + 1), h >= 0 && (c === r3.charCodeAt(h) ? -1 == --h && (o = n3) : (h = -1, o = a2));\n        }\n        return i === o ? o = a2 : -1 === o && (o = t4.length), t4.slice(i, o);\n      }\n      for (n3 = t4.length - 1; n3 >= 0; --n3)\n        if (47 === t4.charCodeAt(n3)) {\n          if (!s) {\n            i = n3 + 1;\n            break;\n          }\n        } else\n          -1 === o && (s = false, o = n3 + 1);\n      return -1 === o ? \"\" : t4.slice(i, o);\n    }, extname: function(t4) {\n      e2(t4);\n      for (var r3 = -1, n3 = 0, i = -1, o = true, s = 0, h = t4.length - 1; h >= 0; --h) {\n        var a2 = t4.charCodeAt(h);\n        if (47 !== a2)\n          -1 === i && (o = false, i = h + 1), 46 === a2 ? -1 === r3 ? r3 = h : 1 !== s && (s = 1) : -1 !== r3 && (s = -1);\n        else if (!o) {\n          n3 = h + 1;\n          break;\n        }\n      }\n      return -1 === r3 || -1 === i || 0 === s || 1 === s && r3 === i - 1 && r3 === n3 + 1 ? \"\" : t4.slice(r3, i);\n    }, format: function(t4) {\n      if (null === t4 || \"object\" != typeof t4)\n        throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof t4);\n      return function(t5, e3) {\n        var r3 = e3.dir || e3.root, n3 = e3.base || (e3.name || \"\") + (e3.ext || \"\");\n        return r3 ? r3 === e3.root ? r3 + n3 : r3 + \"/\" + n3 : n3;\n      }(0, t4);\n    }, parse: function(t4) {\n      e2(t4);\n      var r3 = { root: \"\", dir: \"\", base: \"\", ext: \"\", name: \"\" };\n      if (0 === t4.length)\n        return r3;\n      var n3, i = t4.charCodeAt(0), o = 47 === i;\n      o ? (r3.root = \"/\", n3 = 1) : n3 = 0;\n      for (var s = -1, h = 0, a2 = -1, c = true, f2 = t4.length - 1, u = 0; f2 >= n3; --f2)\n        if (47 !== (i = t4.charCodeAt(f2)))\n          -1 === a2 && (c = false, a2 = f2 + 1), 46 === i ? -1 === s ? s = f2 : 1 !== u && (u = 1) : -1 !== s && (u = -1);\n        else if (!c) {\n          h = f2 + 1;\n          break;\n        }\n      return -1 === s || -1 === a2 || 0 === u || 1 === u && s === a2 - 1 && s === h + 1 ? -1 !== a2 && (r3.base = r3.name = 0 === h && o ? t4.slice(1, a2) : t4.slice(h, a2)) : (0 === h && o ? (r3.name = t4.slice(1, s), r3.base = t4.slice(1, a2)) : (r3.name = t4.slice(h, s), r3.base = t4.slice(h, a2)), r3.ext = t4.slice(s, a2)), h > 0 ? r3.dir = t4.slice(0, h - 1) : o && (r3.dir = \"/\"), r3;\n    }, sep: \"/\", delimiter: \":\", win32: null, posix: null };\n    n2.posix = n2, t3.exports = n2;\n  } }, e = {};\n  function r(n2) {\n    var i = e[n2];\n    if (void 0 !== i)\n      return i.exports;\n    var o = e[n2] = { exports: {} };\n    return t2[n2](o, o.exports, r), o.exports;\n  }\n  r.d = (t3, e2) => {\n    for (var n2 in e2)\n      r.o(e2, n2) && !r.o(t3, n2) && Object.defineProperty(t3, n2, { enumerable: true, get: e2[n2] });\n  }, r.o = (t3, e2) => Object.prototype.hasOwnProperty.call(t3, e2), r.r = (t3) => {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(t3, \"__esModule\", { value: true });\n  };\n  var n = {};\n  (() => {\n    let t3;\n    if (r.r(n), r.d(n, { URI: () => f2, Utils: () => P }), \"object\" == typeof process)\n      t3 = \"win32\" === process.platform;\n    else if (\"object\" == typeof navigator) {\n      let e3 = navigator.userAgent;\n      t3 = e3.indexOf(\"Windows\") >= 0;\n    }\n    const e2 = /^\\w[\\w\\d+.-]*$/, i = /^\\//, o = /^\\/\\//;\n    function s(t4, r2) {\n      if (!t4.scheme && r2)\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t4.authority}\", path: \"${t4.path}\", query: \"${t4.query}\", fragment: \"${t4.fragment}\"}`);\n      if (t4.scheme && !e2.test(t4.scheme))\n        throw new Error(\"[UriError]: Scheme contains illegal characters.\");\n      if (t4.path) {\n        if (t4.authority) {\n          if (!i.test(t4.path))\n            throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n        } else if (o.test(t4.path))\n          throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n      }\n    }\n    const h = \"\", a2 = \"/\", c = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n    class f2 {\n      static isUri(t4) {\n        return t4 instanceof f2 || !!t4 && \"string\" == typeof t4.authority && \"string\" == typeof t4.fragment && \"string\" == typeof t4.path && \"string\" == typeof t4.query && \"string\" == typeof t4.scheme && \"string\" == typeof t4.fsPath && \"function\" == typeof t4.with && \"function\" == typeof t4.toString;\n      }\n      scheme;\n      authority;\n      path;\n      query;\n      fragment;\n      constructor(t4, e3, r2, n2, i2, o2 = false) {\n        \"object\" == typeof t4 ? (this.scheme = t4.scheme || h, this.authority = t4.authority || h, this.path = t4.path || h, this.query = t4.query || h, this.fragment = t4.fragment || h) : (this.scheme = /* @__PURE__ */ function(t5, e4) {\n          return t5 || e4 ? t5 : \"file\";\n        }(t4, o2), this.authority = e3 || h, this.path = function(t5, e4) {\n          switch (t5) {\n            case \"https\":\n            case \"http\":\n            case \"file\":\n              e4 ? e4[0] !== a2 && (e4 = a2 + e4) : e4 = a2;\n          }\n          return e4;\n        }(this.scheme, r2 || h), this.query = n2 || h, this.fragment = i2 || h, s(this, o2));\n      }\n      get fsPath() {\n        return m(this, false);\n      }\n      with(t4) {\n        if (!t4)\n          return this;\n        let { scheme: e3, authority: r2, path: n2, query: i2, fragment: o2 } = t4;\n        return void 0 === e3 ? e3 = this.scheme : null === e3 && (e3 = h), void 0 === r2 ? r2 = this.authority : null === r2 && (r2 = h), void 0 === n2 ? n2 = this.path : null === n2 && (n2 = h), void 0 === i2 ? i2 = this.query : null === i2 && (i2 = h), void 0 === o2 ? o2 = this.fragment : null === o2 && (o2 = h), e3 === this.scheme && r2 === this.authority && n2 === this.path && i2 === this.query && o2 === this.fragment ? this : new l(e3, r2, n2, i2, o2);\n      }\n      static parse(t4, e3 = false) {\n        const r2 = c.exec(t4);\n        return r2 ? new l(r2[2] || h, C(r2[4] || h), C(r2[5] || h), C(r2[7] || h), C(r2[9] || h), e3) : new l(h, h, h, h, h);\n      }\n      static file(e3) {\n        let r2 = h;\n        if (t3 && (e3 = e3.replace(/\\\\/g, a2)), e3[0] === a2 && e3[1] === a2) {\n          const t4 = e3.indexOf(a2, 2);\n          -1 === t4 ? (r2 = e3.substring(2), e3 = a2) : (r2 = e3.substring(2, t4), e3 = e3.substring(t4) || a2);\n        }\n        return new l(\"file\", r2, e3, h, h);\n      }\n      static from(t4) {\n        const e3 = new l(t4.scheme, t4.authority, t4.path, t4.query, t4.fragment);\n        return s(e3, true), e3;\n      }\n      toString(t4 = false) {\n        return y(this, t4);\n      }\n      toJSON() {\n        return this;\n      }\n      static revive(t4) {\n        if (t4) {\n          if (t4 instanceof f2)\n            return t4;\n          {\n            const e3 = new l(t4);\n            return e3._formatted = t4.external, e3._fsPath = t4._sep === u ? t4.fsPath : null, e3;\n          }\n        }\n        return t4;\n      }\n    }\n    const u = t3 ? 1 : void 0;\n    class l extends f2 {\n      _formatted = null;\n      _fsPath = null;\n      get fsPath() {\n        return this._fsPath || (this._fsPath = m(this, false)), this._fsPath;\n      }\n      toString(t4 = false) {\n        return t4 ? y(this, true) : (this._formatted || (this._formatted = y(this, false)), this._formatted);\n      }\n      toJSON() {\n        const t4 = { $mid: 1 };\n        return this._fsPath && (t4.fsPath = this._fsPath, t4._sep = u), this._formatted && (t4.external = this._formatted), this.path && (t4.path = this.path), this.scheme && (t4.scheme = this.scheme), this.authority && (t4.authority = this.authority), this.query && (t4.query = this.query), this.fragment && (t4.fragment = this.fragment), t4;\n      }\n    }\n    const g = { 58: \"%3A\", 47: \"%2F\", 63: \"%3F\", 35: \"%23\", 91: \"%5B\", 93: \"%5D\", 64: \"%40\", 33: \"%21\", 36: \"%24\", 38: \"%26\", 39: \"%27\", 40: \"%28\", 41: \"%29\", 42: \"%2A\", 43: \"%2B\", 44: \"%2C\", 59: \"%3B\", 61: \"%3D\", 32: \"%20\" };\n    function d(t4, e3, r2) {\n      let n2, i2 = -1;\n      for (let o2 = 0; o2 < t4.length; o2++) {\n        const s2 = t4.charCodeAt(o2);\n        if (s2 >= 97 && s2 <= 122 || s2 >= 65 && s2 <= 90 || s2 >= 48 && s2 <= 57 || 45 === s2 || 46 === s2 || 95 === s2 || 126 === s2 || e3 && 47 === s2 || r2 && 91 === s2 || r2 && 93 === s2 || r2 && 58 === s2)\n          -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), void 0 !== n2 && (n2 += t4.charAt(o2));\n        else {\n          void 0 === n2 && (n2 = t4.substr(0, o2));\n          const e4 = g[s2];\n          void 0 !== e4 ? (-1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2, o2)), i2 = -1), n2 += e4) : -1 === i2 && (i2 = o2);\n        }\n      }\n      return -1 !== i2 && (n2 += encodeURIComponent(t4.substring(i2))), void 0 !== n2 ? n2 : t4;\n    }\n    function p(t4) {\n      let e3;\n      for (let r2 = 0; r2 < t4.length; r2++) {\n        const n2 = t4.charCodeAt(r2);\n        35 === n2 || 63 === n2 ? (void 0 === e3 && (e3 = t4.substr(0, r2)), e3 += g[n2]) : void 0 !== e3 && (e3 += t4[r2]);\n      }\n      return void 0 !== e3 ? e3 : t4;\n    }\n    function m(e3, r2) {\n      let n2;\n      return n2 = e3.authority && e3.path.length > 1 && \"file\" === e3.scheme ? `//${e3.authority}${e3.path}` : 47 === e3.path.charCodeAt(0) && (e3.path.charCodeAt(1) >= 65 && e3.path.charCodeAt(1) <= 90 || e3.path.charCodeAt(1) >= 97 && e3.path.charCodeAt(1) <= 122) && 58 === e3.path.charCodeAt(2) ? r2 ? e3.path.substr(1) : e3.path[1].toLowerCase() + e3.path.substr(2) : e3.path, t3 && (n2 = n2.replace(/\\//g, \"\\\\\")), n2;\n    }\n    function y(t4, e3) {\n      const r2 = e3 ? p : d;\n      let n2 = \"\", { scheme: i2, authority: o2, path: s2, query: h2, fragment: c2 } = t4;\n      if (i2 && (n2 += i2, n2 += \":\"), (o2 || \"file\" === i2) && (n2 += a2, n2 += a2), o2) {\n        let t5 = o2.indexOf(\"@\");\n        if (-1 !== t5) {\n          const e4 = o2.substr(0, t5);\n          o2 = o2.substr(t5 + 1), t5 = e4.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(e4, false, false) : (n2 += r2(e4.substr(0, t5), false, false), n2 += \":\", n2 += r2(e4.substr(t5 + 1), false, true)), n2 += \"@\";\n        }\n        o2 = o2.toLowerCase(), t5 = o2.lastIndexOf(\":\"), -1 === t5 ? n2 += r2(o2, false, true) : (n2 += r2(o2.substr(0, t5), false, true), n2 += o2.substr(t5));\n      }\n      if (s2) {\n        if (s2.length >= 3 && 47 === s2.charCodeAt(0) && 58 === s2.charCodeAt(2)) {\n          const t5 = s2.charCodeAt(1);\n          t5 >= 65 && t5 <= 90 && (s2 = `/${String.fromCharCode(t5 + 32)}:${s2.substr(3)}`);\n        } else if (s2.length >= 2 && 58 === s2.charCodeAt(1)) {\n          const t5 = s2.charCodeAt(0);\n          t5 >= 65 && t5 <= 90 && (s2 = `${String.fromCharCode(t5 + 32)}:${s2.substr(2)}`);\n        }\n        n2 += r2(s2, true, false);\n      }\n      return h2 && (n2 += \"?\", n2 += r2(h2, false, false)), c2 && (n2 += \"#\", n2 += e3 ? c2 : d(c2, false, false)), n2;\n    }\n    function v(t4) {\n      try {\n        return decodeURIComponent(t4);\n      } catch {\n        return t4.length > 3 ? t4.substr(0, 3) + v(t4.substr(3)) : t4;\n      }\n    }\n    const b = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n    function C(t4) {\n      return t4.match(b) ? t4.replace(b, (t5) => v(t5)) : t4;\n    }\n    var A2 = r(470);\n    const w = A2.posix || A2, x = \"/\";\n    var P;\n    !function(t4) {\n      t4.joinPath = function(t5, ...e3) {\n        return t5.with({ path: w.join(t5.path, ...e3) });\n      }, t4.resolvePath = function(t5, ...e3) {\n        let r2 = t5.path, n2 = false;\n        r2[0] !== x && (r2 = x + r2, n2 = true);\n        let i2 = w.resolve(r2, ...e3);\n        return n2 && i2[0] === x && !t5.authority && (i2 = i2.substring(1)), t5.with({ path: i2 });\n      }, t4.dirname = function(t5) {\n        if (0 === t5.path.length || t5.path === x)\n          return t5;\n        let e3 = w.dirname(t5.path);\n        return 1 === e3.length && 46 === e3.charCodeAt(0) && (e3 = \"\"), t5.with({ path: e3 });\n      }, t4.basename = function(t5) {\n        return w.basename(t5.path);\n      }, t4.extname = function(t5) {\n        return w.extname(t5.path);\n      };\n    }(P || (P = {}));\n  })(), LIB = n;\n})();\nvar { URI: URI2, Utils } = LIB;\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/glob.js\nfunction createRegex(glob, opts) {\n  if (typeof glob !== \"string\") {\n    throw new TypeError(\"Expected a string\");\n  }\n  const str = String(glob);\n  let reStr = \"\";\n  const extended = opts ? !!opts.extended : false;\n  const globstar = opts ? !!opts.globstar : false;\n  let inGroup = false;\n  const flags = opts && typeof opts.flags === \"string\" ? opts.flags : \"\";\n  let c;\n  for (let i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n    switch (c) {\n      case \"/\":\n      case \"$\":\n      case \"^\":\n      case \"+\":\n      case \".\":\n      case \"(\":\n      case \")\":\n      case \"=\":\n      case \"!\":\n      case \"|\":\n        reStr += \"\\\\\" + c;\n        break;\n      case \"?\":\n        if (extended) {\n          reStr += \".\";\n          break;\n        }\n      case \"[\":\n      case \"]\":\n        if (extended) {\n          reStr += c;\n          break;\n        }\n      case \"{\":\n        if (extended) {\n          inGroup = true;\n          reStr += \"(\";\n          break;\n        }\n      case \"}\":\n        if (extended) {\n          inGroup = false;\n          reStr += \")\";\n          break;\n        }\n      case \",\":\n        if (inGroup) {\n          reStr += \"|\";\n          break;\n        }\n        reStr += \"\\\\\" + c;\n        break;\n      case \"*\":\n        const prevChar = str[i - 1];\n        let starCount = 1;\n        while (str[i + 1] === \"*\") {\n          starCount++;\n          i++;\n        }\n        const nextChar = str[i + 1];\n        if (!globstar) {\n          reStr += \".*\";\n        } else {\n          const isGlobstar = starCount > 1 && (prevChar === \"/\" || prevChar === void 0 || prevChar === \"{\" || prevChar === \",\") && (nextChar === \"/\" || nextChar === void 0 || nextChar === \",\" || nextChar === \"}\");\n          if (isGlobstar) {\n            if (nextChar === \"/\") {\n              i++;\n            } else if (prevChar === \"/\" && reStr.endsWith(\"\\\\/\")) {\n              reStr = reStr.substr(0, reStr.length - 2);\n            }\n            reStr += \"((?:[^/]*(?:/|$))*)\";\n          } else {\n            reStr += \"([^/]*)\";\n          }\n        }\n        break;\n      default:\n        reStr += c;\n    }\n  }\n  if (!flags || !~flags.indexOf(\"g\")) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n  return new RegExp(reStr, flags);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSchemaService.js\nvar BANG = \"!\";\nvar PATH_SEP = \"/\";\nvar FilePatternAssociation = class {\n  constructor(pattern, folderUri, uris) {\n    this.folderUri = folderUri;\n    this.uris = uris;\n    this.globWrappers = [];\n    try {\n      for (let patternString of pattern) {\n        const include = patternString[0] !== BANG;\n        if (!include) {\n          patternString = patternString.substring(1);\n        }\n        if (patternString.length > 0) {\n          if (patternString[0] === PATH_SEP) {\n            patternString = patternString.substring(1);\n          }\n          this.globWrappers.push({\n            regexp: createRegex(\"**/\" + patternString, { extended: true, globstar: true }),\n            include\n          });\n        }\n      }\n      ;\n      if (folderUri) {\n        folderUri = normalizeResourceForMatching(folderUri);\n        if (!folderUri.endsWith(\"/\")) {\n          folderUri = folderUri + \"/\";\n        }\n        this.folderUri = folderUri;\n      }\n    } catch (e) {\n      this.globWrappers.length = 0;\n      this.uris = [];\n    }\n  }\n  matchesPattern(fileName) {\n    if (this.folderUri && !fileName.startsWith(this.folderUri)) {\n      return false;\n    }\n    let match = false;\n    for (const { regexp, include } of this.globWrappers) {\n      if (regexp.test(fileName)) {\n        match = include;\n      }\n    }\n    return match;\n  }\n  getURIs() {\n    return this.uris;\n  }\n};\nvar SchemaHandle = class {\n  constructor(service, uri, unresolvedSchemaContent) {\n    this.service = service;\n    this.uri = uri;\n    this.dependencies = /* @__PURE__ */ new Set();\n    this.anchors = void 0;\n    if (unresolvedSchemaContent) {\n      this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n    }\n  }\n  getUnresolvedSchema() {\n    if (!this.unresolvedSchema) {\n      this.unresolvedSchema = this.service.loadSchema(this.uri);\n    }\n    return this.unresolvedSchema;\n  }\n  getResolvedSchema() {\n    if (!this.resolvedSchema) {\n      this.resolvedSchema = this.getUnresolvedSchema().then((unresolved) => {\n        return this.service.resolveSchemaContent(unresolved, this);\n      });\n    }\n    return this.resolvedSchema;\n  }\n  clearSchema() {\n    const hasChanges = !!this.unresolvedSchema;\n    this.resolvedSchema = void 0;\n    this.unresolvedSchema = void 0;\n    this.dependencies.clear();\n    this.anchors = void 0;\n    return hasChanges;\n  }\n};\nvar UnresolvedSchema = class {\n  constructor(schema, errors = []) {\n    this.schema = schema;\n    this.errors = errors;\n  }\n};\nvar ResolvedSchema = class {\n  constructor(schema, errors = [], warnings = [], schemaDraft) {\n    this.schema = schema;\n    this.errors = errors;\n    this.warnings = warnings;\n    this.schemaDraft = schemaDraft;\n  }\n  getSection(path) {\n    const schemaRef = this.getSectionRecursive(path, this.schema);\n    if (schemaRef) {\n      return asSchema(schemaRef);\n    }\n    return void 0;\n  }\n  getSectionRecursive(path, schema) {\n    if (!schema || typeof schema === \"boolean\" || path.length === 0) {\n      return schema;\n    }\n    const next = path.shift();\n    if (schema.properties && typeof schema.properties[next]) {\n      return this.getSectionRecursive(path, schema.properties[next]);\n    } else if (schema.patternProperties) {\n      for (const pattern of Object.keys(schema.patternProperties)) {\n        const regex = extendedRegExp(pattern);\n        if (regex?.test(next)) {\n          return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n        }\n      }\n    } else if (typeof schema.additionalProperties === \"object\") {\n      return this.getSectionRecursive(path, schema.additionalProperties);\n    } else if (next.match(\"[0-9]+\")) {\n      if (Array.isArray(schema.items)) {\n        const index = parseInt(next, 10);\n        if (!isNaN(index) && schema.items[index]) {\n          return this.getSectionRecursive(path, schema.items[index]);\n        }\n      } else if (schema.items) {\n        return this.getSectionRecursive(path, schema.items);\n      }\n    }\n    return void 0;\n  }\n};\nvar JSONSchemaService = class {\n  constructor(requestService, contextService, promiseConstructor) {\n    this.contextService = contextService;\n    this.requestService = requestService;\n    this.promiseConstructor = promiseConstructor || Promise;\n    this.callOnDispose = [];\n    this.contributionSchemas = {};\n    this.contributionAssociations = [];\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n  }\n  getRegisteredSchemaIds(filter) {\n    return Object.keys(this.registeredSchemasIds).filter((id) => {\n      const scheme = URI2.parse(id).scheme;\n      return scheme !== \"schemaservice\" && (!filter || filter(scheme));\n    });\n  }\n  get promise() {\n    return this.promiseConstructor;\n  }\n  dispose() {\n    while (this.callOnDispose.length > 0) {\n      this.callOnDispose.pop()();\n    }\n  }\n  onResourceChange(uri) {\n    this.cachedSchemaForResource = void 0;\n    let hasChanges = false;\n    uri = normalizeId(uri);\n    const toWalk = [uri];\n    const all = Object.keys(this.schemasById).map((key) => this.schemasById[key]);\n    while (toWalk.length) {\n      const curr = toWalk.pop();\n      for (let i = 0; i < all.length; i++) {\n        const handle = all[i];\n        if (handle && (handle.uri === curr || handle.dependencies.has(curr))) {\n          if (handle.uri !== curr) {\n            toWalk.push(handle.uri);\n          }\n          if (handle.clearSchema()) {\n            hasChanges = true;\n          }\n          all[i] = void 0;\n        }\n      }\n    }\n    return hasChanges;\n  }\n  setSchemaContributions(schemaContributions2) {\n    if (schemaContributions2.schemas) {\n      const schemas = schemaContributions2.schemas;\n      for (const id in schemas) {\n        const normalizedId = normalizeId(id);\n        this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n      }\n    }\n    if (Array.isArray(schemaContributions2.schemaAssociations)) {\n      const schemaAssociations = schemaContributions2.schemaAssociations;\n      for (let schemaAssociation of schemaAssociations) {\n        const uris = schemaAssociation.uris.map(normalizeId);\n        const association = this.addFilePatternAssociation(schemaAssociation.pattern, schemaAssociation.folderUri, uris);\n        this.contributionAssociations.push(association);\n      }\n    }\n  }\n  addSchemaHandle(id, unresolvedSchemaContent) {\n    const schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n    this.schemasById[id] = schemaHandle;\n    return schemaHandle;\n  }\n  getOrAddSchemaHandle(id, unresolvedSchemaContent) {\n    return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n  }\n  addFilePatternAssociation(pattern, folderUri, uris) {\n    const fpa = new FilePatternAssociation(pattern, folderUri, uris);\n    this.filePatternAssociations.push(fpa);\n    return fpa;\n  }\n  registerExternalSchema(config) {\n    const id = normalizeId(config.uri);\n    this.registeredSchemasIds[id] = true;\n    this.cachedSchemaForResource = void 0;\n    if (config.fileMatch && config.fileMatch.length) {\n      this.addFilePatternAssociation(config.fileMatch, config.folderUri, [id]);\n    }\n    return config.schema ? this.addSchemaHandle(id, config.schema) : this.getOrAddSchemaHandle(id);\n  }\n  clearExternalSchemas() {\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.registeredSchemasIds = {};\n    this.cachedSchemaForResource = void 0;\n    for (const id in this.contributionSchemas) {\n      this.schemasById[id] = this.contributionSchemas[id];\n      this.registeredSchemasIds[id] = true;\n    }\n    for (const contributionAssociation of this.contributionAssociations) {\n      this.filePatternAssociations.push(contributionAssociation);\n    }\n  }\n  getResolvedSchema(schemaId) {\n    const id = normalizeId(schemaId);\n    const schemaHandle = this.schemasById[id];\n    if (schemaHandle) {\n      return schemaHandle.getResolvedSchema();\n    }\n    return this.promise.resolve(void 0);\n  }\n  loadSchema(url) {\n    if (!this.requestService) {\n      const errorMessage = t(\"Unable to load schema from '{0}'. No schema request service available\", toDisplayString(url));\n      return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n    }\n    if (url.startsWith(\"http://json-schema.org/\")) {\n      url = \"https\" + url.substring(4);\n    }\n    return this.requestService(url).then((content) => {\n      if (!content) {\n        const errorMessage = t(\"Unable to load schema from '{0}': No content.\", toDisplayString(url));\n        return new UnresolvedSchema({}, [errorMessage]);\n      }\n      const errors = [];\n      if (content.charCodeAt(0) === 65279) {\n        errors.push(t(\"Problem reading content from '{0}': UTF-8 with BOM detected, only UTF 8 is allowed.\", toDisplayString(url)));\n        content = content.trimStart();\n      }\n      let schemaContent = {};\n      const jsonErrors = [];\n      schemaContent = parse2(content, jsonErrors);\n      if (jsonErrors.length) {\n        errors.push(t(\"Unable to parse content from '{0}': Parse error at offset {1}.\", toDisplayString(url), jsonErrors[0].offset));\n      }\n      return new UnresolvedSchema(schemaContent, errors);\n    }, (error) => {\n      let errorMessage = error.toString();\n      const errorSplit = error.toString().split(\"Error: \");\n      if (errorSplit.length > 1) {\n        errorMessage = errorSplit[1];\n      }\n      if (endsWith(errorMessage, \".\")) {\n        errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n      }\n      return new UnresolvedSchema({}, [t(\"Unable to load schema from '{0}': {1}.\", toDisplayString(url), errorMessage)]);\n    });\n  }\n  resolveSchemaContent(schemaToResolve, handle) {\n    const resolveErrors = schemaToResolve.errors.slice(0);\n    const schema = schemaToResolve.schema;\n    let schemaDraft = schema.$schema ? normalizeId(schema.$schema) : void 0;\n    if (schemaDraft === \"http://json-schema.org/draft-03/schema\") {\n      return this.promise.resolve(new ResolvedSchema({}, [t(\"Draft-03 schemas are not supported.\")], [], schemaDraft));\n    }\n    let usesUnsupportedFeatures = /* @__PURE__ */ new Set();\n    const contextService = this.contextService;\n    const findSectionByJSONPointer = (schema2, path) => {\n      path = decodeURIComponent(path);\n      let current = schema2;\n      if (path[0] === \"/\") {\n        path = path.substring(1);\n      }\n      path.split(\"/\").some((part) => {\n        part = part.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n        current = current[part];\n        return !current;\n      });\n      return current;\n    };\n    const findSchemaById = (schema2, handle2, id) => {\n      if (!handle2.anchors) {\n        handle2.anchors = collectAnchors(schema2);\n      }\n      return handle2.anchors.get(id);\n    };\n    const merge = (target, section) => {\n      for (const key in section) {\n        if (section.hasOwnProperty(key) && key !== \"id\" && key !== \"$id\") {\n          target[key] = section[key];\n        }\n      }\n    };\n    const mergeRef = (target, sourceRoot, sourceHandle, refSegment) => {\n      let section;\n      if (refSegment === void 0 || refSegment.length === 0) {\n        section = sourceRoot;\n      } else if (refSegment.charAt(0) === \"/\") {\n        section = findSectionByJSONPointer(sourceRoot, refSegment);\n      } else {\n        section = findSchemaById(sourceRoot, sourceHandle, refSegment);\n      }\n      if (section) {\n        merge(target, section);\n      } else {\n        resolveErrors.push(t(\"$ref '{0}' in '{1}' can not be resolved.\", refSegment || \"\", sourceHandle.uri));\n      }\n    };\n    const resolveExternalLink = (node, uri, refSegment, parentHandle) => {\n      if (contextService && !/^[A-Za-z][A-Za-z0-9+\\-.+]*:\\/\\/.*/.test(uri)) {\n        uri = contextService.resolveRelativePath(uri, parentHandle.uri);\n      }\n      uri = normalizeId(uri);\n      const referencedHandle = this.getOrAddSchemaHandle(uri);\n      return referencedHandle.getUnresolvedSchema().then((unresolvedSchema) => {\n        parentHandle.dependencies.add(uri);\n        if (unresolvedSchema.errors.length) {\n          const loc = refSegment ? uri + \"#\" + refSegment : uri;\n          resolveErrors.push(t(\"Problems loading reference '{0}': {1}\", loc, unresolvedSchema.errors[0]));\n        }\n        mergeRef(node, unresolvedSchema.schema, referencedHandle, refSegment);\n        return resolveRefs(node, unresolvedSchema.schema, referencedHandle);\n      });\n    };\n    const resolveRefs = (node, parentSchema, parentHandle) => {\n      const openPromises = [];\n      this.traverseNodes(node, (next) => {\n        const seenRefs = /* @__PURE__ */ new Set();\n        while (next.$ref) {\n          const ref = next.$ref;\n          const segments = ref.split(\"#\", 2);\n          delete next.$ref;\n          if (segments[0].length > 0) {\n            openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentHandle));\n            return;\n          } else {\n            if (!seenRefs.has(ref)) {\n              const id = segments[1];\n              mergeRef(next, parentSchema, parentHandle, id);\n              seenRefs.add(ref);\n            }\n          }\n        }\n        if (next.$recursiveRef) {\n          usesUnsupportedFeatures.add(\"$recursiveRef\");\n        }\n        if (next.$dynamicRef) {\n          usesUnsupportedFeatures.add(\"$dynamicRef\");\n        }\n      });\n      return this.promise.all(openPromises);\n    };\n    const collectAnchors = (root) => {\n      const result = /* @__PURE__ */ new Map();\n      this.traverseNodes(root, (next) => {\n        const id = next.$id || next.id;\n        const anchor = isString(id) && id.charAt(0) === \"#\" ? id.substring(1) : next.$anchor;\n        if (anchor) {\n          if (result.has(anchor)) {\n            resolveErrors.push(t(\"Duplicate anchor declaration: '{0}'\", anchor));\n          } else {\n            result.set(anchor, next);\n          }\n        }\n        if (next.$recursiveAnchor) {\n          usesUnsupportedFeatures.add(\"$recursiveAnchor\");\n        }\n        if (next.$dynamicAnchor) {\n          usesUnsupportedFeatures.add(\"$dynamicAnchor\");\n        }\n      });\n      return result;\n    };\n    return resolveRefs(schema, schema, handle).then((_) => {\n      let resolveWarnings = [];\n      if (usesUnsupportedFeatures.size) {\n        resolveWarnings.push(t(\"The schema uses meta-schema features ({0}) that are not yet supported by the validator.\", Array.from(usesUnsupportedFeatures.keys()).join(\", \")));\n      }\n      return new ResolvedSchema(schema, resolveErrors, resolveWarnings, schemaDraft);\n    });\n  }\n  traverseNodes(root, handle) {\n    if (!root || typeof root !== \"object\") {\n      return Promise.resolve(null);\n    }\n    const seen = /* @__PURE__ */ new Set();\n    const collectEntries = (...entries) => {\n      for (const entry of entries) {\n        if (isObject(entry)) {\n          toWalk.push(entry);\n        }\n      }\n    };\n    const collectMapEntries = (...maps) => {\n      for (const map of maps) {\n        if (isObject(map)) {\n          for (const k in map) {\n            const key = k;\n            const entry = map[key];\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectArrayEntries = (...arrays) => {\n      for (const array of arrays) {\n        if (Array.isArray(array)) {\n          for (const entry of array) {\n            if (isObject(entry)) {\n              toWalk.push(entry);\n            }\n          }\n        }\n      }\n    };\n    const collectEntryOrArrayEntries = (items) => {\n      if (Array.isArray(items)) {\n        for (const entry of items) {\n          if (isObject(entry)) {\n            toWalk.push(entry);\n          }\n        }\n      } else if (isObject(items)) {\n        toWalk.push(items);\n      }\n    };\n    const toWalk = [root];\n    let next = toWalk.pop();\n    while (next) {\n      if (!seen.has(next)) {\n        seen.add(next);\n        handle(next);\n        collectEntries(next.additionalItems, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else, next.unevaluatedItems, next.unevaluatedProperties);\n        collectMapEntries(next.definitions, next.$defs, next.properties, next.patternProperties, next.dependencies, next.dependentSchemas);\n        collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.prefixItems);\n        collectEntryOrArrayEntries(next.items);\n      }\n      next = toWalk.pop();\n    }\n  }\n  getSchemaFromProperty(resource, document) {\n    if (document.root?.type === \"object\") {\n      for (const p of document.root.properties) {\n        if (p.keyNode.value === \"$schema\" && p.valueNode?.type === \"string\") {\n          let schemaId = p.valueNode.value;\n          if (this.contextService && !/^\\w[\\w\\d+.-]*:/.test(schemaId)) {\n            schemaId = this.contextService.resolveRelativePath(schemaId, resource);\n          }\n          return schemaId;\n        }\n      }\n    }\n    return void 0;\n  }\n  getAssociatedSchemas(resource) {\n    const seen = /* @__PURE__ */ Object.create(null);\n    const schemas = [];\n    const normalizedResource = normalizeResourceForMatching(resource);\n    for (const entry of this.filePatternAssociations) {\n      if (entry.matchesPattern(normalizedResource)) {\n        for (const schemaId of entry.getURIs()) {\n          if (!seen[schemaId]) {\n            schemas.push(schemaId);\n            seen[schemaId] = true;\n          }\n        }\n      }\n    }\n    return schemas;\n  }\n  getSchemaURIsForResource(resource, document) {\n    let schemeId = document && this.getSchemaFromProperty(resource, document);\n    if (schemeId) {\n      return [schemeId];\n    }\n    return this.getAssociatedSchemas(resource);\n  }\n  getSchemaForResource(resource, document) {\n    if (document) {\n      let schemeId = this.getSchemaFromProperty(resource, document);\n      if (schemeId) {\n        const id = normalizeId(schemeId);\n        return this.getOrAddSchemaHandle(id).getResolvedSchema();\n      }\n    }\n    if (this.cachedSchemaForResource && this.cachedSchemaForResource.resource === resource) {\n      return this.cachedSchemaForResource.resolvedSchema;\n    }\n    const schemas = this.getAssociatedSchemas(resource);\n    const resolvedSchema = schemas.length > 0 ? this.createCombinedSchema(resource, schemas).getResolvedSchema() : this.promise.resolve(void 0);\n    this.cachedSchemaForResource = { resource, resolvedSchema };\n    return resolvedSchema;\n  }\n  createCombinedSchema(resource, schemaIds) {\n    if (schemaIds.length === 1) {\n      return this.getOrAddSchemaHandle(schemaIds[0]);\n    } else {\n      const combinedSchemaId = \"schemaservice://combinedSchema/\" + encodeURIComponent(resource);\n      const combinedSchema = {\n        allOf: schemaIds.map((schemaId) => ({ $ref: schemaId }))\n      };\n      return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n    }\n  }\n  getMatchingSchemas(document, jsonDocument, schema) {\n    if (schema) {\n      const id = schema.id || \"schemaservice://untitled/matchingSchemas/\" + idCounter2++;\n      const handle = this.addSchemaHandle(id, schema);\n      return handle.getResolvedSchema().then((resolvedSchema) => {\n        return jsonDocument.getMatchingSchemas(resolvedSchema.schema).filter((s) => !s.inverted);\n      });\n    }\n    return this.getSchemaForResource(document.uri, jsonDocument).then((schema2) => {\n      if (schema2) {\n        return jsonDocument.getMatchingSchemas(schema2.schema).filter((s) => !s.inverted);\n      }\n      return [];\n    });\n  }\n};\nvar idCounter2 = 0;\nfunction normalizeId(id) {\n  try {\n    return URI2.parse(id).toString(true);\n  } catch (e) {\n    return id;\n  }\n}\nfunction normalizeResourceForMatching(resource) {\n  try {\n    return URI2.parse(resource).with({ fragment: null, query: null }).toString(true);\n  } catch (e) {\n    return resource;\n  }\n}\nfunction toDisplayString(url) {\n  try {\n    const uri = URI2.parse(url);\n    if (uri.scheme === \"file\") {\n      return uri.fsPath;\n    }\n  } catch (e) {\n  }\n  return url;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonFolding.js\nfunction getFoldingRanges(document, context) {\n  const ranges = [];\n  const nestingLevels = [];\n  const stack = [];\n  let prevStart = -1;\n  const scanner = createScanner2(document.getText(), false);\n  let token = scanner.scan();\n  function addRange(range) {\n    ranges.push(range);\n    nestingLevels.push(stack.length);\n  }\n  while (token !== 17) {\n    switch (token) {\n      case 1:\n      case 3: {\n        const startLine = document.positionAt(scanner.getTokenOffset()).line;\n        const range = { startLine, endLine: startLine, kind: token === 1 ? \"object\" : \"array\" };\n        stack.push(range);\n        break;\n      }\n      case 2:\n      case 4: {\n        const kind = token === 2 ? \"object\" : \"array\";\n        if (stack.length > 0 && stack[stack.length - 1].kind === kind) {\n          const range = stack.pop();\n          const line = document.positionAt(scanner.getTokenOffset()).line;\n          if (range && line > range.startLine + 1 && prevStart !== range.startLine) {\n            range.endLine = line - 1;\n            addRange(range);\n            prevStart = range.startLine;\n          }\n        }\n        break;\n      }\n      case 13: {\n        const startLine = document.positionAt(scanner.getTokenOffset()).line;\n        const endLine = document.positionAt(scanner.getTokenOffset() + scanner.getTokenLength()).line;\n        if (scanner.getTokenError() === 1 && startLine + 1 < document.lineCount) {\n          scanner.setPosition(document.offsetAt(Position.create(startLine + 1, 0)));\n        } else {\n          if (startLine < endLine) {\n            addRange({ startLine, endLine, kind: FoldingRangeKind.Comment });\n            prevStart = startLine;\n          }\n        }\n        break;\n      }\n      case 12: {\n        const text = document.getText().substr(scanner.getTokenOffset(), scanner.getTokenLength());\n        const m = text.match(/^\\/\\/\\s*#(region\\b)|(endregion\\b)/);\n        if (m) {\n          const line = document.positionAt(scanner.getTokenOffset()).line;\n          if (m[1]) {\n            const range = { startLine: line, endLine: line, kind: FoldingRangeKind.Region };\n            stack.push(range);\n          } else {\n            let i = stack.length - 1;\n            while (i >= 0 && stack[i].kind !== FoldingRangeKind.Region) {\n              i--;\n            }\n            if (i >= 0) {\n              const range = stack[i];\n              stack.length = i;\n              if (line > range.startLine && prevStart !== range.startLine) {\n                range.endLine = line;\n                addRange(range);\n                prevStart = range.startLine;\n              }\n            }\n          }\n        }\n        break;\n      }\n    }\n    token = scanner.scan();\n  }\n  const rangeLimit = context && context.rangeLimit;\n  if (typeof rangeLimit !== \"number\" || ranges.length <= rangeLimit) {\n    return ranges;\n  }\n  if (context && context.onRangeLimitExceeded) {\n    context.onRangeLimitExceeded(document.uri);\n  }\n  const counts = [];\n  for (let level of nestingLevels) {\n    if (level < 30) {\n      counts[level] = (counts[level] || 0) + 1;\n    }\n  }\n  let entries = 0;\n  let maxLevel = 0;\n  for (let i = 0; i < counts.length; i++) {\n    const n = counts[i];\n    if (n) {\n      if (n + entries > rangeLimit) {\n        maxLevel = i;\n        break;\n      }\n      entries += n;\n    }\n  }\n  const result = [];\n  for (let i = 0; i < ranges.length; i++) {\n    const level = nestingLevels[i];\n    if (typeof level === \"number\") {\n      if (level < maxLevel || level === maxLevel && entries++ < rangeLimit) {\n        result.push(ranges[i]);\n      }\n    }\n  }\n  return result;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonSelectionRanges.js\nfunction getSelectionRanges(document, positions, doc) {\n  function getSelectionRange(position) {\n    let offset = document.offsetAt(position);\n    let node = doc.getNodeFromOffset(offset, true);\n    const result = [];\n    while (node) {\n      switch (node.type) {\n        case \"string\":\n        case \"object\":\n        case \"array\":\n          const cStart = node.offset + 1, cEnd = node.offset + node.length - 1;\n          if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n            result.push(newRange(cStart, cEnd));\n          }\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n        case \"number\":\n        case \"boolean\":\n        case \"null\":\n        case \"property\":\n          result.push(newRange(node.offset, node.offset + node.length));\n          break;\n      }\n      if (node.type === \"property\" || node.parent && node.parent.type === \"array\") {\n        const afterCommaOffset = getOffsetAfterNextToken(\n          node.offset + node.length,\n          5\n          /* SyntaxKind.CommaToken */\n        );\n        if (afterCommaOffset !== -1) {\n          result.push(newRange(node.offset, afterCommaOffset));\n        }\n      }\n      node = node.parent;\n    }\n    let current = void 0;\n    for (let index = result.length - 1; index >= 0; index--) {\n      current = SelectionRange.create(result[index], current);\n    }\n    if (!current) {\n      current = SelectionRange.create(Range.create(position, position));\n    }\n    return current;\n  }\n  function newRange(start, end) {\n    return Range.create(document.positionAt(start), document.positionAt(end));\n  }\n  const scanner = createScanner2(document.getText(), true);\n  function getOffsetAfterNextToken(offset, expectedToken) {\n    scanner.setPosition(offset);\n    let token = scanner.scan();\n    if (token === expectedToken) {\n      return scanner.getTokenOffset() + scanner.getTokenLength();\n    }\n    return -1;\n  }\n  return positions.map(getSelectionRange);\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/format.js\nfunction format4(documentToFormat, formattingOptions, formattingRange) {\n  let range = void 0;\n  if (formattingRange) {\n    const offset = documentToFormat.offsetAt(formattingRange.start);\n    const length = documentToFormat.offsetAt(formattingRange.end) - offset;\n    range = { offset, length };\n  }\n  const options = {\n    tabSize: formattingOptions ? formattingOptions.tabSize : 4,\n    insertSpaces: formattingOptions?.insertSpaces === true,\n    insertFinalNewline: formattingOptions?.insertFinalNewline === true,\n    eol: \"\\n\",\n    keepLines: formattingOptions?.keepLines === true\n  };\n  return format2(documentToFormat.getText(), range, options).map((edit) => {\n    return TextEdit.replace(Range.create(documentToFormat.positionAt(edit.offset), documentToFormat.positionAt(edit.offset + edit.length)), edit.content);\n  });\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/propertyTree.js\nvar Container;\n(function(Container2) {\n  Container2[Container2[\"Object\"] = 0] = \"Object\";\n  Container2[Container2[\"Array\"] = 1] = \"Array\";\n})(Container || (Container = {}));\nvar PropertyTree = class {\n  constructor(propertyName, beginningLineNumber) {\n    this.propertyName = propertyName ?? \"\";\n    this.beginningLineNumber = beginningLineNumber;\n    this.childrenProperties = [];\n    this.lastProperty = false;\n    this.noKeyName = false;\n  }\n  addChildProperty(childProperty) {\n    childProperty.parent = this;\n    if (this.childrenProperties.length > 0) {\n      let insertionIndex = 0;\n      if (childProperty.noKeyName) {\n        insertionIndex = this.childrenProperties.length;\n      } else {\n        insertionIndex = binarySearchOnPropertyArray(this.childrenProperties, childProperty, compareProperties);\n      }\n      if (insertionIndex < 0) {\n        insertionIndex = insertionIndex * -1 - 1;\n      }\n      this.childrenProperties.splice(insertionIndex, 0, childProperty);\n    } else {\n      this.childrenProperties.push(childProperty);\n    }\n    return childProperty;\n  }\n};\nfunction compareProperties(propertyTree1, propertyTree2) {\n  const propertyName1 = propertyTree1.propertyName.toLowerCase();\n  const propertyName2 = propertyTree2.propertyName.toLowerCase();\n  if (propertyName1 < propertyName2) {\n    return -1;\n  } else if (propertyName1 > propertyName2) {\n    return 1;\n  }\n  return 0;\n}\nfunction binarySearchOnPropertyArray(propertyTreeArray, propertyTree, compare_fn) {\n  const propertyName = propertyTree.propertyName.toLowerCase();\n  const firstPropertyInArrayName = propertyTreeArray[0].propertyName.toLowerCase();\n  const lastPropertyInArrayName = propertyTreeArray[propertyTreeArray.length - 1].propertyName.toLowerCase();\n  if (propertyName < firstPropertyInArrayName) {\n    return 0;\n  }\n  if (propertyName > lastPropertyInArrayName) {\n    return propertyTreeArray.length;\n  }\n  let m = 0;\n  let n = propertyTreeArray.length - 1;\n  while (m <= n) {\n    let k = n + m >> 1;\n    let cmp = compare_fn(propertyTree, propertyTreeArray[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/utils/sort.js\nfunction sort(documentToSort, formattingOptions) {\n  const options = {\n    ...formattingOptions,\n    keepLines: false\n    // keepLines must be false so that the properties are on separate lines for the sorting\n  };\n  const formattedJsonString = TextDocument2.applyEdits(documentToSort, format4(documentToSort, options, void 0));\n  const formattedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, formattedJsonString);\n  const jsonPropertyTree = findJsoncPropertyTree(formattedJsonDocument);\n  const sortedJsonDocument = sortJsoncDocument(formattedJsonDocument, jsonPropertyTree);\n  const edits = format4(sortedJsonDocument, options, void 0);\n  const sortedAndFormattedJsonDocument = TextDocument2.applyEdits(sortedJsonDocument, edits);\n  return [TextEdit.replace(Range.create(Position.create(0, 0), documentToSort.positionAt(documentToSort.getText().length)), sortedAndFormattedJsonDocument)];\n}\nfunction findJsoncPropertyTree(formattedDocument) {\n  const formattedString = formattedDocument.getText();\n  const scanner = createScanner2(formattedString, false);\n  let rootTree = new PropertyTree();\n  let currentTree = rootTree;\n  let currentProperty = rootTree;\n  let lastProperty = rootTree;\n  let token = void 0;\n  let lastTokenLine = 0;\n  let numberOfCharactersOnPreviousLines = 0;\n  let lastNonTriviaNonCommentToken = void 0;\n  let secondToLastNonTriviaNonCommentToken = void 0;\n  let lineOfLastNonTriviaNonCommentToken = -1;\n  let endIndexOfLastNonTriviaNonCommentToken = -1;\n  let beginningLineNumber = 0;\n  let endLineNumber = 0;\n  let currentContainerStack = [];\n  let updateLastPropertyEndLineNumber = false;\n  let updateBeginningLineNumber = false;\n  while ((token = scanner.scan()) !== 17) {\n    if (updateLastPropertyEndLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13 && currentProperty.endLineNumber === void 0) {\n      let endLineNumber2 = scanner.getTokenStartLine();\n      if (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) {\n        lastProperty.endLineNumber = endLineNumber2 - 1;\n      } else {\n        currentProperty.endLineNumber = endLineNumber2 - 1;\n      }\n      beginningLineNumber = endLineNumber2;\n      updateLastPropertyEndLineNumber = false;\n    }\n    if (updateBeginningLineNumber === true && token !== 14 && token !== 15 && token !== 12 && token !== 13) {\n      beginningLineNumber = scanner.getTokenStartLine();\n      updateBeginningLineNumber = false;\n    }\n    if (scanner.getTokenStartLine() !== lastTokenLine) {\n      for (let i = lastTokenLine; i < scanner.getTokenStartLine(); i++) {\n        const lengthOfLine = formattedDocument.getText(Range.create(Position.create(i, 0), Position.create(i + 1, 0))).length;\n        numberOfCharactersOnPreviousLines = numberOfCharactersOnPreviousLines + lengthOfLine;\n      }\n      lastTokenLine = scanner.getTokenStartLine();\n    }\n    switch (token) {\n      case 10: {\n        if (lastNonTriviaNonCommentToken === void 0 || lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 5 && currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n        }\n        break;\n      }\n      case 3: {\n        if (rootTree.beginningLineNumber === void 0) {\n          rootTree.beginningLineNumber = scanner.getTokenStartLine();\n        }\n        if (currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n          currentTree = currentProperty;\n        } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          childProperty.noKeyName = true;\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n          currentTree = currentProperty;\n        }\n        currentContainerStack.push(Container.Array);\n        currentProperty.type = Container.Array;\n        beginningLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber++;\n        break;\n      }\n      case 1: {\n        if (rootTree.beginningLineNumber === void 0) {\n          rootTree.beginningLineNumber = scanner.getTokenStartLine();\n        } else if (currentContainerStack[currentContainerStack.length - 1] === Container.Array) {\n          const childProperty = new PropertyTree(scanner.getTokenValue(), beginningLineNumber);\n          childProperty.noKeyName = true;\n          lastProperty = currentProperty;\n          currentProperty = currentTree.addChildProperty(childProperty);\n        }\n        currentProperty.type = Container.Object;\n        currentContainerStack.push(Container.Object);\n        currentTree = currentProperty;\n        beginningLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber++;\n        break;\n      }\n      case 4: {\n        endLineNumber = scanner.getTokenStartLine();\n        currentContainerStack.pop();\n        if (currentProperty.endLineNumber === void 0 && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4)) {\n          currentProperty.endLineNumber = endLineNumber - 1;\n          currentProperty.lastProperty = true;\n          currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n          currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        rootTree.endLineNumber = endLineNumber;\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 2: {\n        endLineNumber = scanner.getTokenStartLine();\n        currentContainerStack.pop();\n        if (lastNonTriviaNonCommentToken !== 1) {\n          if (currentProperty.endLineNumber === void 0) {\n            currentProperty.endLineNumber = endLineNumber - 1;\n            currentProperty.lastProperty = true;\n            currentProperty.lineWhereToAddComma = lineOfLastNonTriviaNonCommentToken;\n            currentProperty.indexWhereToAddComa = endIndexOfLastNonTriviaNonCommentToken;\n          }\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        rootTree.endLineNumber = scanner.getTokenStartLine();\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 5: {\n        endLineNumber = scanner.getTokenStartLine();\n        if (currentProperty.endLineNumber === void 0 && (currentContainerStack[currentContainerStack.length - 1] === Container.Object || currentContainerStack[currentContainerStack.length - 1] === Container.Array && (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4))) {\n          currentProperty.endLineNumber = endLineNumber;\n          currentProperty.commaIndex = scanner.getTokenOffset() - numberOfCharactersOnPreviousLines;\n          currentProperty.commaLine = endLineNumber;\n        }\n        if (lastNonTriviaNonCommentToken === 2 || lastNonTriviaNonCommentToken === 4) {\n          lastProperty = currentProperty;\n          currentProperty = currentProperty ? currentProperty.parent : void 0;\n          currentTree = currentProperty;\n        }\n        beginningLineNumber = endLineNumber + 1;\n        break;\n      }\n      case 13: {\n        if (lastNonTriviaNonCommentToken === 5 && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine() && (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object)) {\n          if (currentContainerStack[currentContainerStack.length - 1] === Container.Array && (secondToLastNonTriviaNonCommentToken === 2 || secondToLastNonTriviaNonCommentToken === 4) || currentContainerStack[currentContainerStack.length - 1] === Container.Object) {\n            currentProperty.endLineNumber = void 0;\n            updateLastPropertyEndLineNumber = true;\n          }\n        }\n        if ((lastNonTriviaNonCommentToken === 1 || lastNonTriviaNonCommentToken === 3) && lineOfLastNonTriviaNonCommentToken === scanner.getTokenStartLine()) {\n          updateBeginningLineNumber = true;\n        }\n        break;\n      }\n    }\n    if (token !== 14 && token !== 13 && token !== 12 && token !== 15) {\n      secondToLastNonTriviaNonCommentToken = lastNonTriviaNonCommentToken;\n      lastNonTriviaNonCommentToken = token;\n      lineOfLastNonTriviaNonCommentToken = scanner.getTokenStartLine();\n      endIndexOfLastNonTriviaNonCommentToken = scanner.getTokenOffset() + scanner.getTokenLength() - numberOfCharactersOnPreviousLines;\n    }\n  }\n  return rootTree;\n}\nfunction sortJsoncDocument(jsonDocument, propertyTree) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return jsonDocument;\n  }\n  const sortedJsonDocument = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonDocument.getText());\n  const queueToSort = [];\n  updateSortingQueue(queueToSort, propertyTree, propertyTree.beginningLineNumber);\n  while (queueToSort.length > 0) {\n    const dataToSort = queueToSort.shift();\n    const propertyTreeArray = dataToSort.propertyTreeArray;\n    let beginningLineNumber = dataToSort.beginningLineNumber;\n    for (let i = 0; i < propertyTreeArray.length; i++) {\n      const propertyTree2 = propertyTreeArray[i];\n      const range = Range.create(Position.create(propertyTree2.beginningLineNumber, 0), Position.create(propertyTree2.endLineNumber + 1, 0));\n      const jsonContentToReplace = jsonDocument.getText(range);\n      const jsonDocumentToReplace = TextDocument2.create(\"test://test.json\", \"json\", 0, jsonContentToReplace);\n      if (propertyTree2.lastProperty === true && i !== propertyTreeArray.length - 1) {\n        const lineWhereToAddComma = propertyTree2.lineWhereToAddComma - propertyTree2.beginningLineNumber;\n        const indexWhereToAddComma = propertyTree2.indexWhereToAddComa;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToAddComma, indexWhereToAddComma), Position.create(lineWhereToAddComma, indexWhereToAddComma)),\n          text: \",\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      } else if (propertyTree2.lastProperty === false && i === propertyTreeArray.length - 1) {\n        const commaIndex = propertyTree2.commaIndex;\n        const commaLine = propertyTree2.commaLine;\n        const lineWhereToRemoveComma = commaLine - propertyTree2.beginningLineNumber;\n        const edit2 = {\n          range: Range.create(Position.create(lineWhereToRemoveComma, commaIndex), Position.create(lineWhereToRemoveComma, commaIndex + 1)),\n          text: \"\"\n        };\n        TextDocument2.update(jsonDocumentToReplace, [edit2], 1);\n      }\n      const length = propertyTree2.endLineNumber - propertyTree2.beginningLineNumber + 1;\n      const edit = {\n        range: Range.create(Position.create(beginningLineNumber, 0), Position.create(beginningLineNumber + length, 0)),\n        text: jsonDocumentToReplace.getText()\n      };\n      TextDocument2.update(sortedJsonDocument, [edit], 1);\n      updateSortingQueue(queueToSort, propertyTree2, beginningLineNumber);\n      beginningLineNumber = beginningLineNumber + length;\n    }\n  }\n  return sortedJsonDocument;\n}\nfunction updateSortingQueue(queue, propertyTree, beginningLineNumber) {\n  if (propertyTree.childrenProperties.length === 0) {\n    return;\n  }\n  if (propertyTree.type === Container.Object) {\n    let minimumBeginningLineNumber = Infinity;\n    for (const childProperty of propertyTree.childrenProperties) {\n      if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n        minimumBeginningLineNumber = childProperty.beginningLineNumber;\n      }\n    }\n    const diff = minimumBeginningLineNumber - propertyTree.beginningLineNumber;\n    beginningLineNumber = beginningLineNumber + diff;\n    queue.push(new SortingRange(beginningLineNumber, propertyTree.childrenProperties));\n  } else if (propertyTree.type === Container.Array) {\n    updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber);\n  }\n}\nfunction updateSortingQueueForArrayProperties(queue, propertyTree, beginningLineNumber) {\n  for (const subObject of propertyTree.childrenProperties) {\n    if (subObject.type === Container.Object) {\n      let minimumBeginningLineNumber = Infinity;\n      for (const childProperty of subObject.childrenProperties) {\n        if (childProperty.beginningLineNumber < minimumBeginningLineNumber) {\n          minimumBeginningLineNumber = childProperty.beginningLineNumber;\n        }\n      }\n      const diff = minimumBeginningLineNumber - subObject.beginningLineNumber;\n      queue.push(new SortingRange(beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber + diff, subObject.childrenProperties));\n    }\n    if (subObject.type === Container.Array) {\n      updateSortingQueueForArrayProperties(queue, subObject, beginningLineNumber + subObject.beginningLineNumber - propertyTree.beginningLineNumber);\n    }\n  }\n}\nvar SortingRange = class {\n  constructor(beginningLineNumber, propertyTreeArray) {\n    this.beginningLineNumber = beginningLineNumber;\n    this.propertyTreeArray = propertyTreeArray;\n  }\n};\n\n// node_modules/vscode-json-languageservice/lib/esm/services/jsonLinks.js\nfunction findLinks(document, doc) {\n  const links = [];\n  doc.visit((node) => {\n    if (node.type === \"property\" && node.keyNode.value === \"$ref\" && node.valueNode?.type === \"string\") {\n      const path = node.valueNode.value;\n      const targetNode = findTargetNode(doc, path);\n      if (targetNode) {\n        const targetPos = document.positionAt(targetNode.offset);\n        links.push({\n          target: `${document.uri}#${targetPos.line + 1},${targetPos.character + 1}`,\n          range: createRange(document, node.valueNode)\n        });\n      }\n    }\n    return true;\n  });\n  return Promise.resolve(links);\n}\nfunction createRange(document, node) {\n  return Range.create(document.positionAt(node.offset + 1), document.positionAt(node.offset + node.length - 1));\n}\nfunction findTargetNode(doc, path) {\n  const tokens = parseJSONPointer(path);\n  if (!tokens) {\n    return null;\n  }\n  return findNode(tokens, doc.root);\n}\nfunction findNode(pointer, node) {\n  if (!node) {\n    return null;\n  }\n  if (pointer.length === 0) {\n    return node;\n  }\n  const token = pointer.shift();\n  if (node && node.type === \"object\") {\n    const propertyNode = node.properties.find((propertyNode2) => propertyNode2.keyNode.value === token);\n    if (!propertyNode) {\n      return null;\n    }\n    return findNode(pointer, propertyNode.valueNode);\n  } else if (node && node.type === \"array\") {\n    if (token.match(/^(0|[1-9][0-9]*)$/)) {\n      const index = Number.parseInt(token);\n      const arrayItem = node.items[index];\n      if (!arrayItem) {\n        return null;\n      }\n      return findNode(pointer, arrayItem);\n    }\n  }\n  return null;\n}\nfunction parseJSONPointer(path) {\n  if (path === \"#\") {\n    return [];\n  }\n  if (path[0] !== \"#\" || path[1] !== \"/\") {\n    return null;\n  }\n  return path.substring(2).split(/\\//).map(unescape);\n}\nfunction unescape(str) {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n\n// node_modules/vscode-json-languageservice/lib/esm/jsonLanguageService.js\nfunction getLanguageService(params) {\n  const promise = params.promiseConstructor || Promise;\n  const jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n  jsonSchemaService.setSchemaContributions(schemaContributions);\n  const jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n  const jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n  const jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n  const jsonValidation = new JSONValidation(jsonSchemaService, promise);\n  return {\n    configure: (settings) => {\n      jsonSchemaService.clearExternalSchemas();\n      settings.schemas?.forEach(jsonSchemaService.registerExternalSchema.bind(jsonSchemaService));\n      jsonValidation.configure(settings);\n    },\n    resetSchema: (uri) => jsonSchemaService.onResourceChange(uri),\n    doValidation: jsonValidation.doValidation.bind(jsonValidation),\n    getLanguageStatus: jsonValidation.getLanguageStatus.bind(jsonValidation),\n    parseJSONDocument: (document) => parse3(document, { collectComments: true }),\n    newJSONDocument: (root, diagnostics) => newJSONDocument(root, diagnostics),\n    getMatchingSchemas: jsonSchemaService.getMatchingSchemas.bind(jsonSchemaService),\n    doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n    doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n    findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n    findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n    findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n    getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n    doHover: jsonHover.doHover.bind(jsonHover),\n    getFoldingRanges,\n    getSelectionRanges,\n    findDefinition: () => Promise.resolve([]),\n    findLinks,\n    format: (document, range, options) => format4(document, options, range),\n    sort: (document, options) => sort(document, options)\n  };\n}\n\n// src/language/json/jsonWorker.ts\nvar defaultSchemaRequestService;\nif (typeof fetch !== \"undefined\") {\n  defaultSchemaRequestService = function(url) {\n    return fetch(url).then((response) => response.text());\n  };\n}\nvar JSONWorker = class {\n  constructor(ctx, createData) {\n    this._ctx = ctx;\n    this._languageSettings = createData.languageSettings;\n    this._languageId = createData.languageId;\n    this._languageService = getLanguageService({\n      workspaceContext: {\n        resolveRelativePath: (relativePath, resource) => {\n          const base = resource.substr(0, resource.lastIndexOf(\"/\") + 1);\n          return resolvePath(base, relativePath);\n        }\n      },\n      schemaRequestService: createData.enableSchemaRequest ? defaultSchemaRequestService : void 0,\n      clientCapabilities: ClientCapabilities.LATEST\n    });\n    this._languageService.configure(this._languageSettings);\n  }\n  async doValidation(uri) {\n    let document = this._getTextDocument(uri);\n    if (document) {\n      let jsonDocument = this._languageService.parseJSONDocument(document);\n      return this._languageService.doValidation(document, jsonDocument, this._languageSettings);\n    }\n    return Promise.resolve([]);\n  }\n  async doComplete(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doComplete(document, position, jsonDocument);\n  }\n  async doResolve(item) {\n    return this._languageService.doResolve(item);\n  }\n  async doHover(uri, position) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return this._languageService.doHover(document, position, jsonDocument);\n  }\n  async format(uri, range, options) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let textEdits = this._languageService.format(document, range, options);\n    return Promise.resolve(textEdits);\n  }\n  async resetSchema(uri) {\n    return Promise.resolve(this._languageService.resetSchema(uri));\n  }\n  async findDocumentSymbols(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let symbols = this._languageService.findDocumentSymbols2(document, jsonDocument);\n    return Promise.resolve(symbols);\n  }\n  async findDocumentColors(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorSymbols = this._languageService.findDocumentColors(document, jsonDocument);\n    return Promise.resolve(colorSymbols);\n  }\n  async getColorPresentations(uri, color, range) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let colorPresentations = this._languageService.getColorPresentations(\n      document,\n      jsonDocument,\n      color,\n      range\n    );\n    return Promise.resolve(colorPresentations);\n  }\n  async getFoldingRanges(uri, context) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let ranges = this._languageService.getFoldingRanges(document, context);\n    return Promise.resolve(ranges);\n  }\n  async getSelectionRanges(uri, positions) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    let ranges = this._languageService.getSelectionRanges(document, positions, jsonDocument);\n    return Promise.resolve(ranges);\n  }\n  async parseJSONDocument(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return null;\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(jsonDocument);\n  }\n  async getMatchingSchemas(uri) {\n    let document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    let jsonDocument = this._languageService.parseJSONDocument(document);\n    return Promise.resolve(this._languageService.getMatchingSchemas(document, jsonDocument));\n  }\n  _getTextDocument(uri) {\n    let models = this._ctx.getMirrorModels();\n    for (let model of models) {\n      if (model.uri.toString() === uri) {\n        return TextDocument2.create(\n          uri,\n          this._languageId,\n          model.version,\n          model.getValue()\n        );\n      }\n    }\n    return null;\n  }\n};\nvar Slash = \"/\".charCodeAt(0);\nvar Dot = \".\".charCodeAt(0);\nfunction isAbsolutePath(path) {\n  return path.charCodeAt(0) === Slash;\n}\nfunction resolvePath(uriString, path) {\n  if (isAbsolutePath(path)) {\n    const uri = URI2.parse(uriString);\n    const parts = path.split(\"/\");\n    return uri.with({ path: normalizePath(parts) }).toString();\n  }\n  return joinPath(uriString, path);\n}\nfunction normalizePath(parts) {\n  const newParts = [];\n  for (const part of parts) {\n    if (part.length === 0 || part.length === 1 && part.charCodeAt(0) === Dot) {\n    } else if (part.length === 2 && part.charCodeAt(0) === Dot && part.charCodeAt(1) === Dot) {\n      newParts.pop();\n    } else {\n      newParts.push(part);\n    }\n  }\n  if (parts.length > 1 && parts[parts.length - 1].length === 0) {\n    newParts.push(\"\");\n  }\n  let res = newParts.join(\"/\");\n  if (parts[0].length === 0) {\n    res = \"/\" + res;\n  }\n  return res;\n}\nfunction joinPath(uriString, ...paths) {\n  const uri = URI2.parse(uriString);\n  const parts = uri.path.split(\"/\");\n  for (let path of paths) {\n    parts.push(...path.split(\"/\"));\n  }\n  return uri.with({ path: normalizePath(parts) }).toString();\n}\n\n// src/language/json/json.worker.ts\nself.onmessage = () => {\n  worker.initialize((ctx, createData) => {\n    return new JSONWorker(ctx, createData);\n  });\n};\n"],
  "mappings": "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BAAgB,IAAI,IAAI,EAAE,IAAI;AAC9C,kBAAgB,gBAAgB,IAAI,IAAI,EAAE,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,EAAE,IAAI;AAC7C,kBAAgB,gBAAgB,GAAG,IAAI,EAAE,IAAI;AAC7C,kBAAgB,gBAAgB,GAAG,IAAI,EAAE,IAAI;AAC7C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,GAAG,IAAI;AAC9C,kBAAgB,gBAAgB,GAAG,IAAI,EAAE,IAAI;AAC7C,kBAAgB,gBAAgB,GAAG,IAAI,EAAE,IAAI;AAC7C,kBAAgB,g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",
  "names": []
}
